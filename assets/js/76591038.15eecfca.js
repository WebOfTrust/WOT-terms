"use strict";(self.webpackChunkwot_terms_docusaurus=self.webpackChunkwot_terms_docusaurus||[]).push([[42256],{15680:(e,r,t)=>{t.d(r,{xA:()=>c,yg:()=>d});var a=t(96540);function n(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function i(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);r&&(a=a.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?i(Object(t),!0).forEach((function(r){n(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function o(e,r){if(null==e)return{};var t,a,n=function(e,r){if(null==e)return{};var t,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],r.indexOf(t)>=0||(n[t]=e[t]);return n}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var s=a.createContext({}),p=function(e){var r=a.useContext(s),t=r;return e&&(t="function"==typeof e?e(r):l(l({},r),e)),t},c=function(e){var r=p(e.components);return a.createElement(s.Provider,{value:r},e.children)},u="mdxType",y={inlineCode:"code",wrapper:function(e){var r=e.children;return a.createElement(a.Fragment,{},r)}},g=a.forwardRef((function(e,r){var t=e.components,n=e.mdxType,i=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),u=p(t),g=n,d=u["".concat(s,".").concat(g)]||u[g]||y[g]||i;return t?a.createElement(d,l(l({ref:r},c),{},{components:t})):a.createElement(d,l({ref:r},c))}));function d(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var i=t.length,l=new Array(i);l[0]=g;var o={};for(var s in r)hasOwnProperty.call(r,s)&&(o[s]=r[s]);o.originalType=e,o[u]="string"==typeof e?e:n,l[1]=o;for(var p=2;p<i;p++)l[p]=t[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}g.displayName="MDXCreateElement"},8731:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>s,contentTitle:()=>l,default:()=>y,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var a=t(58168),n=(t(96540),t(15680));const i={},l=void 0,o={unversionedId:"glossary/cesride",id:"glossary/cesride",title:"cesride",description:"Definition",source:"@site/docs/04_glossary/cesride.md",sourceDirName:"04_glossary",slug:"/glossary/cesride",permalink:"/WOT-terms/docs/glossary/cesride",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"cesr-proof-signatures",permalink:"/WOT-terms/docs/glossary/cesr-proof-signatures"},next:{title:"chain-link-confidential-disclosure",permalink:"/WOT-terms/docs/glossary/chain-link-confidential-disclosure"}},s={},p=[{value:"Definition",id:"definition",level:2},{value:"Methods",id:"methods",level:3},{value:"Related",id:"related",level:2}],c={toc:p},u="wrapper";function y(e){let{components:r,...t}=e;return(0,n.yg)(u,(0,a.A)({},c,t,{components:r,mdxType:"MDXLayout"}),(0,n.yg)("h2",{id:"definition"},"Definition"),(0,n.yg)("p",null,"is concerned with parsing CESR primitives."),(0,n.yg)("p",null,"Cesride is built from cryptographic primitives that are named clearly and concisely. There are:"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"diger"},"Diger")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"verfer"},"Verfer")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"signer"},"Signer")," "),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"siger"},"Siger")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"cigar"},"Cigar")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"salter"},"Salter"))),(0,n.yg)("p",null,"Each primitive will have methods attached to it that permit one to generate and parse the qualified base2 or ",(0,n.yg)("a",{parentName:"p",href:"base64"},"base64")," representation. "),(0,n.yg)("h3",{id:"methods"},"Methods"),(0,n.yg)("p",null,"Common methods you'll find:"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("inlineCode",{parentName:"li"},".qb64()")," - qualified base-64 representation of cryptographic material as a string"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("inlineCode",{parentName:"li"},".qb64b()")," - qualified base-64 representation of cryptographic material as octets (bytes)"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("inlineCode",{parentName:"li"},".qb2()")," - qualified base-2 representation of cryptographic material as octets (bytes)"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("inlineCode",{parentName:"li"},".code()")," - qualifying code (describes the type of cryptographic material)"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("inlineCode",{parentName:"li"},".raw()")," - raw cryptographic material (unqualified) as octets (bytes)")),(0,n.yg)("p",null,(0,n.yg)("a",{parentName:"p",href:"https://github.com/WebOfTrust/cesride#terminology"},"Source")," by Jason Colburne"),(0,n.yg)("h2",{id:"related"},"Related"),(0,n.yg)("p",null,(0,n.yg)("a",{parentName:"p",href:"parside"},"Parside")))}y.isMDXComponent=!0}}]);