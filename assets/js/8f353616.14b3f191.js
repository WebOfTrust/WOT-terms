"use strict";(self.webpackChunkwot_terms_docusaurus=self.webpackChunkwot_terms_docusaurus||[]).push([[5255],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,s=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=c(n),h=a,f=u["".concat(l,".").concat(h)]||u[h]||d[h]||s;return n?r.createElement(f,o(o({ref:t},p),{},{components:n})):r.createElement(f,o({ref:t},p))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=n.length,o=new Array(s);o[0]=h;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[u]="string"==typeof e?e:a,o[1]=i;for(var c=2;c<s;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}h.displayName="MDXCreateElement"},52745:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>s,metadata:()=>i,toc:()=>c});var r=n(87462),a=(n(67294),n(3905));const s={},o=void 0,i={unversionedId:"terms/glossary/content-addressable-hash",id:"terms/glossary/content-addressable-hash",title:"content-addressable-hash",description:"Definition",source:"@site/docs/terms/glossary/content-addressable-hash.md",sourceDirName:"terms/glossary",slug:"/terms/glossary/content-addressable-hash",permalink:"/WOT-terms/docs/terms/glossary/content-addressable-hash",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"consensus-mechanism",permalink:"/WOT-terms/docs/terms/glossary/consensus-mechanism"},next:{title:"contextual-linkability",permalink:"/WOT-terms/docs/terms/glossary/contextual-linkability"}},l={},c=[{value:"Definition",id:"definition",level:2},{value:"Content Addressable Storage",id:"content-addressable-storage",level:2},{value:"IPFS",id:"ipfs",level:2}],p={toc:c},u="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"definition"},"Definition"),(0,a.kt)("p",null,"Finding content by a hash of this content, generated by a one-way hash function applied to the content."),(0,a.kt)("p",null,"Content addressing is a way to find data in a network using its content rather than its location. The way we do is by taking the content of the content and hashing it. Try uploading an image to IPFS and get the hash using the below button. "),(0,a.kt)("h2",{id:"content-addressable-storage"},"Content Addressable Storage"),(0,a.kt)("p",null,"Content Addressable Storage systems work by passing the content of the file through a ",(0,a.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Cryptographic_hash_function"},"cryptographic hash function"),' to generate a unique key, the "content address". The ',(0,a.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/File_system"},"file system"),"'s ",(0,a.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Directory_(computing)"},"directory")," stores these addresses and a pointer to the physical storage of the content. Because an attempt to store the same file will generate the same key, CAS systems ensure that the files within them are unique, and because changing the file will result in a new key, CAS systems ",(0,a.kt)("em",{parentName:"p"},"provide assurance that the file is unchanged"),"."),(0,a.kt)("h2",{id:"ipfs"},"IPFS"),(0,a.kt)("p",null,"In the IPFS ecosystem, this hash is called Content Identifier, or CID."))}d.isMDXComponent=!0}}]);