"use strict";(self.webpackChunkwot_terms_docusaurus=self.webpackChunkwot_terms_docusaurus||[]).push([[38791],{15680:(e,n,t)=>{t.d(n,{xA:()=>u,yg:()=>y});var r=t(96540);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=r.createContext({}),c=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=c(e.components);return r.createElement(l.Provider,{value:n},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},g=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(t),g=i,y=p["".concat(l,".").concat(g)]||p[g]||d[g]||a;return t?r.createElement(y,o(o({ref:n},u),{},{components:t})):r.createElement(y,o({ref:n},u))}));function y(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,o=new Array(a);o[0]=g;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[p]="string"==typeof e?e:i,o[1]=s;for(var c=2;c<a;c++)o[c]=t[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}g.displayName="MDXCreateElement"},65682:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var r=t(58168),i=(t(96540),t(15680));const a={},o=void 0,s={unversionedId:"glossary/indexed-signature",id:"glossary/indexed-signature",title:"indexed-signature",description:"Definition",source:"@site/docs/04_glossary/indexed-signature.md",sourceDirName:"04_glossary",slug:"/glossary/indexed-signature",permalink:"/WOT-terms/docs/glossary/indexed-signature",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"inconsistency",permalink:"/WOT-terms/docs/glossary/inconsistency"},next:{title:"indirect-mode",permalink:"/WOT-terms/docs/glossary/indirect-mode"}},l={},c=[{value:"Definition",id:"definition",level:2},{value:"Example working",id:"example-working",level:2},{value:"Witness signatures indexed",id:"witness-signatures-indexed",level:2}],u={toc:c},p="wrapper";function d(e){let{components:n,...t}=e;return(0,i.yg)(p,(0,r.A)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,i.yg)("h2",{id:"definition"},"Definition"),(0,i.yg)("p",null,"Also called ",(0,i.yg)("em",{parentName:"p"},"siger"),". An indexed signature attachment is used when signing anything with a multi-key autonomic identifier. The index is included as part of the attachment, so a verifier knows which of the multiple public keys was used to generate a specific signature.",(0,i.yg)("br",{parentName:"p"}),"\n","Source:Philip Feairheller"),(0,i.yg)("h2",{id:"example-working"},"Example working"),(0,i.yg)("p",null,"An indexed signature attachment would look something like:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre"},"03.<binary signature>\n")),(0,i.yg)("p",null,"All encoded as ",(0,i.yg)("a",{parentName:"p",href:"qualified"},"qualified")," ",(0,i.yg)("a",{parentName:"p",href:"base64"},"base64"),".  A verifier would then know to use the AID\u2019s public key located at index 3 in the list of public keys to verify the signature.",(0,i.yg)("br",{parentName:"p"}),"\n","Source:Philip Feairheller"),(0,i.yg)("h2",{id:"witness-signatures-indexed"},"Witness signatures indexed"),(0,i.yg)("p",null,"In addition, ",(0,i.yg)("a",{parentName:"p",href:"witness"},"witness")," signatures can also be attached as indexed signatures. So a verifier can determine which witness signed a particular ",(0,i.yg)("a",{parentName:"p",href:"receipt"},"receipt"),". This is useful when witnesses are receipting an event and only attaching their own signature. The ",(0,i.yg)("a",{parentName:"p",href:"controller"},"controller")," knows which witness signed the receipt by looking up the index in their list of witnesses for that event.",(0,i.yg)("br",{parentName:"p"}),"\n","Source:Philip Feairheller"))}d.isMDXComponent=!0}}]);