"use strict";(self.webpackChunkwot_terms_docusaurus=self.webpackChunkwot_terms_docusaurus||[]).push([[73712],{15680:(e,t,r)=>{r.d(t,{xA:()=>p,yg:()=>m});var n=r(96540);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var i=n.createContext({}),s=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},p=function(e){var t=s(e.components);return n.createElement(i.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},g=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=s(r),g=a,m=u["".concat(i,".").concat(g)]||u[g]||d[g]||o;return r?n.createElement(m,l(l({ref:t},p),{},{components:r})):n.createElement(m,l({ref:t},p))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,l=new Array(o);l[0]=g;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c[u]="string"==typeof e?e:a,l[1]=c;for(var s=2;s<o;s++)l[s]=r[s];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}g.displayName="MDXCreateElement"},80763:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>c,toc:()=>s});var n=r(58168),a=(r(96540),r(15680));const o={status:"draft"},l="Check and accept PR production KERISSE site locally",c={unversionedId:"how-we-did/check-and-accept-pr-production-edusite-locally",id:"how-we-did/check-and-accept-pr-production-edusite-locally",title:"Check and accept PR production KERISSE site locally",description:"Why this how-we-did: To test pull request offered before accepting them in github",source:"@site/docs/how-we-did/check-and-accept-pr-production-edusite-locally.md",sourceDirName:"how-we-did",slug:"/how-we-did/check-and-accept-pr-production-edusite-locally",permalink:"/WOT-terms/docs/how-we-did/check-and-accept-pr-production-edusite-locally",draft:!1,tags:[],version:"current",frontMatter:{status:"draft"},sidebar:"tutorialSidebar",previous:{title:"Cheat sheet: writing a page inside /docs",permalink:"/WOT-terms/docs/how-we-did/cheat-sheet-writing-page"},next:{title:"Create Omnigraffle infographic and convert to SVG",permalink:"/WOT-terms/docs/how-we-did/create-omnigraffle-infographic-and-convert-to-svg"}},i={},s=[{value:"Pull the proposed changes in",id:"pull-the-proposed-changes-in",level:2},{value:"Test",id:"test",level:2},{value:"After succesfull test  merge result",id:"after-succesfull-test--merge-result",level:2},{value:"After merge push to production environment",id:"after-merge-push-to-production-environment",level:2},{value:"Result: PR remotely accepted",id:"result-pr-remotely-accepted",level:2},{value:"Clean up",id:"clean-up",level:2}],p={toc:s},u="wrapper";function d(e){let{components:t,...r}=e;return(0,a.yg)(u,(0,n.A)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"check-and-accept-pr-production-kerisse-site-locally"},"Check and accept PR production KERISSE site locally"),(0,a.yg)("p",null,"Why this ",(0,a.yg)("em",{parentName:"p"},"how-we-did"),": To test pull request offered before accepting them in github"),(0,a.yg)("p",null,"For who: crew responsible for acceptance of PRs offered by content developers"),(0,a.yg)("p",null,"What is the objective: To check content and code that is uploaded to the team as a PR."),(0,a.yg)("h2",{id:""}),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-jsx"},"git stash \ngit status\ngit fetch upstream main\ngit log\n")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"fix-mdfiles")," is the name of the PR."),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"testSC1")," is the acronym of the developer that I use in this example.")),(0,a.yg)("h2",{id:"pull-the-proposed-changes-in"},"Pull the proposed changes in"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-jsx"},"git checkout -b testSC1  \ngit fetch upstream\ngit merge upstream/fix-mdfiles\n")),(0,a.yg)("h2",{id:"test"},"Test"),(0,a.yg)("p",null,"Now the changes that the PR proposes have been locally applied to the new branch"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-jsx"},"npm run build\nnpm run serve\n")),(0,a.yg)("p",null,"Now you can locally test the site at the address that look something like ",(0,a.yg)("inlineCode",{parentName:"p"},"http://localhost:3000/WOT-terms/"),". The result of ",(0,a.yg)("inlineCode",{parentName:"p"},"npm run serve")," will tell you the exact URL."),(0,a.yg)("h2",{id:"after-succesfull-test--merge-result"},"After succesfull test  merge result"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-jsx"},"git checkout main\ngit merge testSC1\n")),(0,a.yg)("h2",{id:"after-merge-push-to-production-environment"},"After merge push to production environment"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-jsx"},"git push -u upstream main\n")),(0,a.yg)("h2",{id:"result-pr-remotely-accepted"},"Result: PR remotely accepted"),(0,a.yg)("p",null," ",(0,a.yg)("img",{parentName:"p",src:"https://hackmd.io/_uploads/SkPSW_L6i.png",alt:null})),(0,a.yg)("h2",{id:"clean-up"},"Clean up"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-jsx"},"git stash pop\ngit branch -D testSC1\n")))}d.isMDXComponent=!0}}]);