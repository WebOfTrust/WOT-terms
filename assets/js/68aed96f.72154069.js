"use strict";(self.webpackChunkwot_terms_docusaurus=self.webpackChunkwot_terms_docusaurus||[]).push([[85538],{15680:(e,t,r)=>{r.d(t,{xA:()=>p,yg:()=>f});var o=r(96540);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},a=Object.keys(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var c=o.createContext({}),l=function(e){var t=o.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=l(e.components);return o.createElement(c.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},y=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=l(r),y=n,f=u["".concat(c,".").concat(y)]||u[y]||d[y]||a;return r?o.createElement(f,i(i({ref:t},p),{},{components:r})):o.createElement(f,i({ref:t},p))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,i=new Array(a);i[0]=y;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[u]="string"==typeof e?e:n,i[1]=s;for(var l=2;l<a;l++)i[l]=r[l];return o.createElement.apply(null,i)}return o.createElement.apply(null,r)}y.displayName="MDXCreateElement"},56236:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var o=r(58168),n=(r(96540),r(15680));const a={},i=void 0,s={unversionedId:"glossary/opcode",id:"glossary/opcode",title:"opcode",description:"Definition",source:"@site/docs/04_glossary/opcode.md",sourceDirName:"04_glossary",slug:"/glossary/opcode",permalink:"/WOT-terms/docs/glossary/opcode",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"one-way-function",permalink:"/WOT-terms/docs/glossary/one-way-function"},next:{title:"operator",permalink:"/WOT-terms/docs/glossary/operator"}},c={},l=[{value:"Definition",id:"definition",level:2},{value:"Why opcodes",id:"why-opcodes",level:2},{value:"Opcode tables",id:"opcode-tables",level:3}],p={toc:l},u="wrapper";function d(e){let{components:t,...r}=e;return(0,n.yg)(u,(0,o.A)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,n.yg)("h2",{id:"definition"},"Definition"),(0,n.yg)("p",null,"Opcodes are meant to provide stream processing instructions that are more general and flexible than simply concatenated primitives or groups of primitives. "),(0,n.yg)("h2",{id:"why-opcodes"},"Why opcodes"),(0,n.yg)("p",null,"A yet to be determined stack based virtual machine could be executed using a set of opcodes that provides primitive, primitive group, or stream processing instructions. This would enable highly customizable uses for ",(0,n.yg)("a",{parentName:"p",href:"composable-event-streaming-representation"},"CESR"),"."),(0,n.yg)("h3",{id:"opcode-tables"},"Opcode tables"),(0,n.yg)("p",null,"The \u2018_\u2019 selector is reserved for the yet to be defined ",(0,n.yg)("a",{parentName:"p",href:"opcode"},"opcode")," table or tables."))}d.isMDXComponent=!0}}]);