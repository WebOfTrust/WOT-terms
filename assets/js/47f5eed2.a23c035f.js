"use strict";(self.webpackChunkwot_terms_docusaurus=self.webpackChunkwot_terms_docusaurus||[]).push([[9719],{3905:(e,r,t)=>{t.d(r,{Zo:()=>u,kt:()=>f});var n=t(67294);function s(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function o(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){s(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function i(e,r){if(null==e)return{};var t,n,s=function(e,r){if(null==e)return{};var t,n,s={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(s[t]=e[t]);return s}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}var c=n.createContext({}),l=function(e){var r=n.useContext(c),t=r;return e&&(t="function"==typeof e?e(r):o(o({},r),e)),t},u=function(e){var r=l(e.components);return n.createElement(c.Provider,{value:r},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},d=n.forwardRef((function(e,r){var t=e.components,s=e.mdxType,a=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=l(t),d=s,f=p["".concat(c,".").concat(d)]||p[d]||m[d]||a;return t?n.createElement(f,o(o({ref:r},u),{},{components:t})):n.createElement(f,o({ref:r},u))}));function f(e,r){var t=arguments,s=r&&r.mdxType;if("string"==typeof e||s){var a=t.length,o=new Array(a);o[0]=d;var i={};for(var c in r)hasOwnProperty.call(r,c)&&(i[c]=r[c]);i.originalType=e,i[p]="string"==typeof e?e:s,o[1]=i;for(var l=2;l<a;l++)o[l]=t[l];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}d.displayName="MDXCreateElement"},24192:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>c,contentTitle:()=>o,default:()=>m,frontMatter:()=>a,metadata:()=>i,toc:()=>l});var n=t(87462),s=(t(67294),t(3905));const a={},o=void 0,i={unversionedId:"Terms/glossary/issuer",id:"Terms/glossary/issuer",title:"issuer",description:"Definition",source:"@site/docs/Terms/glossary/issuer.md",sourceDirName:"Terms/glossary",slug:"/Terms/glossary/issuer",permalink:"/WOT-terms/docs/Terms/glossary/issuer",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"issuee",permalink:"/WOT-terms/docs/Terms/glossary/issuee"},next:{title:"javascript-object-signing-and-encryption",permalink:"/WOT-terms/docs/Terms/glossary/javascript-object-signing-and-encryption"}},c={},l=[{value:"Definition",id:"definition",level:2},{value:"Rule",id:"rule",level:2}],u={toc:l},p="wrapper";function m(e){let{components:r,...t}=e;return(0,s.kt)(p,(0,n.Z)({},u,t,{components:r,mdxType:"MDXLayout"}),(0,s.kt)("h2",{id:"definition"},"Definition"),(0,s.kt)("p",null,"An ",(0,s.kt)("a",{parentName:"p",href:"/WOT-terms/docs/Terms/glossary/authentic-chained-data-container"},"ACDC")," is issued by the Issuer. The Issuer identifier (",(0,s.kt)("a",{parentName:"p",href:"/WOT-terms/docs/Terms/glossary/autonomic-identifier"},"AID"),") appears in the top level of the ACDC."),(0,s.kt)("h2",{id:"rule"},"Rule"),(0,s.kt)("p",null,"Each ACDC MUST have an ",(0,s.kt)("a",{parentName:"p",href:"/WOT-terms/docs/Terms/glossary/issuer"},"Issuer")," and MAY have an ",(0,s.kt)("a",{parentName:"p",href:"/WOT-terms/docs/Terms/glossary/issuee"},"Issuee"),". The set of ",(0,s.kt)("a",{parentName:"p",href:"/WOT-terms/docs/Terms/glossary/ACDC"},"ACDC"),"s so disclosed in a presentation exchange MUST be chained. This set of chained ACDCs define a ",(0,s.kt)("a",{parentName:"p",href:"/WOT-terms/docs/Terms/glossary/directed-acyclic-graph"},"directed acyclic graph")," that MUST have at least one vertex and MAY have zero or more edges pointing to other vertices."))}m.isMDXComponent=!0}}]);