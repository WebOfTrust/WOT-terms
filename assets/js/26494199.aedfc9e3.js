"use strict";(self.webpackChunkwot_terms_docusaurus=self.webpackChunkwot_terms_docusaurus||[]).push([[61574],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>y});var i=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,i,n=function(e,t){if(null==e)return{};var r,i,n={},o=Object.keys(e);for(i=0;i<o.length;i++)r=o[i],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)r=o[i],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=i.createContext({}),c=function(e){var t=i.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},l=function(e){var t=c(e.components);return i.createElement(s.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},f=i.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),u=c(r),f=n,y=u["".concat(s,".").concat(f)]||u[f]||m[f]||o;return r?i.createElement(y,a(a({ref:t},l),{},{components:r})):i.createElement(y,a({ref:t},l))}));function y(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,a=new Array(o);a[0]=f;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p[u]="string"==typeof e?e:n,a[1]=p;for(var c=2;c<o;c++)a[c]=r[c];return i.createElement.apply(null,a)}return i.createElement.apply(null,r)}f.displayName="MDXCreateElement"},31289:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>m,frontMatter:()=>o,metadata:()=>p,toc:()=>c});var i=r(87462),n=(r(67294),r(3905));const o={},a=void 0,p={unversionedId:"glossary/primitive",id:"glossary/primitive",title:"primitive",description:"Definition",source:"@site/docs/04_glossary/primitive.md",sourceDirName:"04_glossary",slug:"/glossary/primitive",permalink:"/WOT-terms/docs/glossary/primitive",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"primary-root-of-trust",permalink:"/WOT-terms/docs/glossary/primary-root-of-trust"},next:{title:"promiscuous-mode",permalink:"/WOT-terms/docs/glossary/promiscuous-mode"}},s={},c=[{value:"Definition",id:"definition",level:2},{value:"Cryptographic primitive",id:"cryptographic-primitive",level:2},{value:"KERI related",id:"keri-related",level:2}],l={toc:c},u="wrapper";function m(e){let{components:t,...r}=e;return(0,n.kt)(u,(0,i.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h2",{id:"definition"},"Definition"),(0,n.kt)("p",null,"In general in computing a 'primitive' is the simplest type of programming language item. It may also refer to the smallest processing unit accessible by a programmer.\\\n",(0,n.kt)("a",{parentName:"p",href:"https://www.techopedia.com/definition/3860/primitive"},"Source")),(0,n.kt)("h2",{id:"cryptographic-primitive"},"Cryptographic primitive"),(0,n.kt)("p",null,"See ",(0,n.kt)("a",{parentName:"p",href:"/WOT-terms/docs/glossary/cryptographic-primitive"},"Cryptographic primitive")),(0,n.kt)("h2",{id:"keri-related"},"KERI related"),(0,n.kt)("p",null,"In KERI and ACDC it a serialization of a unitary value. A ",(0,n.kt)("a",{parentName:"p",href:"/WOT-terms/docs/glossary/cryptographic-primitive"},"cryptographic primitive")," is the KERI-suite sense is the serialization of a value associated with a cryptographic operation including but not limited to a digest (hash), a salt, a seed, a private key, a public key, or a signature. All primitives in KERI MUST be expressed in ",(0,n.kt)("a",{parentName:"p",href:"composable-event-streaming-representation-(CESR)"},"CESR"),"."))}m.isMDXComponent=!0}}]);