"use strict";(self.webpackChunkwot_terms_docusaurus=self.webpackChunkwot_terms_docusaurus||[]).push([[9166],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>m});var n=r(67294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},f="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),f=c(r),d=i,m=f["".concat(l,".").concat(d)]||f[d]||u[d]||a;return r?n.createElement(m,o(o({ref:t},p),{},{components:r})):n.createElement(m,o({ref:t},p))}));function m(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=r.length,o=new Array(a);o[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[f]="string"==typeof e?e:i,o[1]=s;for(var c=2;c<a;c++)o[c]=r[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},99335:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var n=r(87462),i=(r(67294),r(3905));const a={},o=void 0,s={unversionedId:"terms/glossary/self-framing",id:"terms/glossary/self-framing",title:"self-framing",description:"Definition",source:"@site/docs/terms/glossary/self-framing.md",sourceDirName:"terms/glossary",slug:"/terms/glossary/self-framing",permalink:"/WOT-terms/docs/terms/glossary/self-framing",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"self-certifying-identifier",permalink:"/WOT-terms/docs/terms/glossary/self-certifying-identifier"},next:{title:"self-sovereign-identity",permalink:"/WOT-terms/docs/terms/glossary/self-sovereign-identity"}},l={},c=[{value:"Definition",id:"definition",level:2},{value:"Detailed explanation",id:"detailed-explanation",level:2},{value:"Related to CESR",id:"related-to-cesr",level:2}],p={toc:c},f="wrapper";function u(e){let{components:t,...r}=e;return(0,i.kt)(f,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"definition"},"Definition"),(0,i.kt)("p",null,"a textual encoding that includes type, size, and value is self-framing.\\\nSource ",(0,i.kt)("a",{parentName:"p",href:"https://www.ietf.org/archive/id/draft-ssmith-cesr-02.txt"},"Samual M Smith")),(0,i.kt)("h2",{id:"detailed-explanation"},"Detailed explanation"),(0,i.kt)("p",null,"A self-framing text primitive may be parsed without needing any additional delimiting characters. Thus a stream of concatenated primitives may be individually parsed without the need to encapsulate the primitives inside textual delimiters or envelopes. Thus a textual self-framing encoding provides the core capability for a streaming text protocol like ",(0,i.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Streaming_Text_Oriented_Messaging_Protocol"},"STOMP")," or ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/RaetProtocol/raet"},"RAET"),"."),(0,i.kt)("h2",{id:"related-to-cesr"},"Related to CESR"),(0,i.kt)("p",null,"Although a first class textual encoding of cryptographic primitives is the primary motivation for the ",(0,i.kt)("a",{parentName:"p",href:"composable-event-streaming-representation-(CESR)"},"CESR")," protocol defined herein, CESR is sufficiently flexible and extensible to support other useful data types, such as, integers of various sizes, floating point numbers, date-times as well as generic text. Thus this protocol is generally useful to encode in text data data structures of all types not merely those that contain cryptographic primitives."))}u.isMDXComponent=!0}}]);