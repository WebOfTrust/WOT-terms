"use strict";(self.webpackChunkwot_terms_docusaurus=self.webpackChunkwot_terms_docusaurus||[]).push([[9634],{3905:(e,r,t)=>{t.d(r,{Zo:()=>l,kt:()=>d});var a=t(67294);function n(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function i(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);r&&(a=a.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?i(Object(t),!0).forEach((function(r){n(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function s(e,r){if(null==e)return{};var t,a,n=function(e,r){if(null==e)return{};var t,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],r.indexOf(t)>=0||(n[t]=e[t]);return n}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var p=a.createContext({}),c=function(e){var r=a.useContext(p),t=r;return e&&(t="function"==typeof e?e(r):o(o({},r),e)),t},l=function(e){var r=c(e.components);return a.createElement(p.Provider,{value:r},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var r=e.children;return a.createElement(a.Fragment,{},r)}},f=a.forwardRef((function(e,r){var t=e.components,n=e.mdxType,i=e.originalType,p=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),m=c(t),f=n,d=m["".concat(p,".").concat(f)]||m[f]||u[f]||i;return t?a.createElement(d,o(o({ref:r},l),{},{components:t})):a.createElement(d,o({ref:r},l))}));function d(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var i=t.length,o=new Array(i);o[0]=f;var s={};for(var p in r)hasOwnProperty.call(r,p)&&(s[p]=r[p]);s.originalType=e,s[m]="string"==typeof e?e:n,o[1]=s;for(var c=2;c<i;c++)o[c]=t[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}f.displayName="MDXCreateElement"},75756:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>p,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var a=t(87462),n=(t(67294),t(3905));const i={},o=void 0,s={unversionedId:"Terms/glossary/messagepack",id:"Terms/glossary/messagepack",title:"messagepack",description:"Definition",source:"@site/docs/Terms/glossary/messagepack.md",sourceDirName:"Terms/glossary",slug:"/Terms/glossary/messagepack",permalink:"/docs/Terms/glossary/messagepack",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"message",permalink:"/docs/Terms/glossary/message"},next:{title:"most-compact",permalink:"/docs/Terms/glossary/most-compact"}},p={},c=[{value:"Definition",id:"definition",level:2},{value:"More on Wikipedia",id:"more-on-wikipedia",level:3}],l={toc:c},m="wrapper";function u(e){let{components:r,...t}=e;return(0,n.kt)(m,(0,a.Z)({},l,t,{components:r,mdxType:"MDXLayout"}),(0,n.kt)("h2",{id:"definition"},"Definition"),(0,n.kt)("p",null,"MessagePack is a ",(0,n.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Computer"},"computer")," data interchange format. It is a binary form for representing simple ",(0,n.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Data_structure"},"data structures")," like ",(0,n.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Array_data_structure"},"arrays")," and ",(0,n.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Associative_array"},"associative arrays"),". MessagePack aims to be as compact and simple as possible. The official implementation is available in a variety of languages"),(0,n.kt)("h3",{id:"more-on-wikipedia"},"More on Wikipedia"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/MessagePack"},"MessagePack")))}u.isMDXComponent=!0}}]);