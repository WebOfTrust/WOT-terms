[
  {
    "organisation": "WebOfTrust",
    "term": "access controlled interaction",
    "url": "https://kerisse.org",
    "anchor": "access-controlled-interaction",
    "definition": "<h1>access controlled interaction</h1><h4>Definition</h4><p>Access controlled actions like submitting a report. If you already have that report then load balancer needs a mechanism to drop repeated requests.</p><p>Source: Samuel Smith / Daniel Hardman / Lance Byrd - Zoom meeting KERI Suite Jan 16 2024; discussion minute 30-60 min</p><h4>Replay attack prevention</h4><p>Replay attacks are less of a concern, other than DDoS attack using resubmissions. </p><h5>Also see</h5><p><a href=\"registration-interaction\">Registration Interaction</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "ACDC",
    "url": "https://kerisse.org",
    "anchor": "ACDC",
    "definition": "<h1>ACDC</h1><h4>See</h4><p><a href=\"authentic-chained-data-container\">authentic chained data container</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "ADC",
    "url": "https://kerisse.org",
    "anchor": "ADC",
    "definition": "<h1>ADC</h1><h4>See</h4><p><a href=\"authentic-data-container\">Authentic data container</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "ADR",
    "url": "https://kerisse.org",
    "anchor": "ADR",
    "definition": "<h1>ADR</h1><h4>See</h4><p><a href=\"architectural-decision-record\">Architectural Decision Record</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "agency",
    "url": "https://kerisse.org",
    "anchor": "agency",
    "definition": "<h1>agency</h1><h4>Definition</h4><p>Agents can be people, edge computers and the functionality within <a href=\"https://github.com/trustoverip/acdc/wiki/_new#digital-identity-wallet\">wallets</a>. The service an agent offers is <a href=\"agency\">agency</a>.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "agent",
    "url": "https://kerisse.org",
    "anchor": "agent",
    "definition": "<h1>agent</h1><h4>Definition</h4><p>A representative for an identity. MAY require the use of a wallet. MAY support transfer.</p><h5>KERIA Agent</h5><p>An agent in <a href=\"keria\">KERIA</a> terms is an instance of a keystore (<a href=\"hab\">Hab</a>) that runs in a given instance of the KERIA agent server.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "AID",
    "url": "https://kerisse.org",
    "anchor": "AID",
    "definition": "<h1>AID</h1><h4>See</h4><p><a href=\"autonomic-identifier\">Autonomic identifier</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "ambient verifiability",
    "url": "https://kerisse.org",
    "anchor": "ambient-verifiability",
    "definition": "<h1>ambient verifiability</h1><h4>Definition</h4><p>Verifiable by anyone, anywhere, at anytime. Although this seems a pretty general term, it was first used in the context of KERI by Sam Smith.</p><p>An example of ambient verifiability is <em>Ambient Duplicity Detection</em> that describes the possibility of detecting duplicity by anyone, anywhere, anytime.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "ample",
    "url": "https://kerisse.org",
    "anchor": "ample",
    "definition": "<h1>ample</h1><h4>Definition</h4><p>The minimum required number of participants in an event to have a <a href=\"supermajority\">supermajority</a> so that one and only one agreement or consensus on an event may be reached. This is a critical part of the <a href=\"KAACE\">KAACE</a> agreement algorithm (consensus) in KERI for establishing consensus between witnesses on the key state of a KERI identifier. This consensus on key state forms the basis for accountability for a KERI controller, or what a person who controls a KERI identifier may be held legally responsible for.</p><p>This supermajority is also called a <em>sufficient majority</em> that is labeled <em>immune</em> from certain kinds of attacks or faults. </p><p>From section <strong>11.4.2.4 Immune</strong> of v2.60 of the KERI whitepaper, </p><blockquote><p>Satisfaction of this constraint guarantees that at most one sufficient agreement occurs or none atall despite a dishonest controller but where at most F of the witnesses are potentially faulty.</p></blockquote><p>Ample Agreement Constraint:<br><img src=\"https://github.com/WebOfTrust/WOT-terms/assets/65027257/5c8733c1-4370-420c-83f0-f6e778a6b68f\" alt=\"image\"></p><p>Can apply to either</p><ol><li>a group of KERI witnesses for a witnessed event or </li><li>a group of KERI identifier controllers participating in a multi-signature group.</li></ol><h4>Problems avoided by using <code>ample</code></h4><p>Ample witnesses avoids problems of accidental lockout from a multisig group which would occur if the signing threshold for the multisig group was set lower than the &quot;ample&quot; number of participants.</p><h4>Table of minimum required, or ample, number of participants</h4><p>N = Number of total participants<br>M = Number of participants needed to get the guarantees of &quot;ample&quot;</p><p><img src=\"https://github.com/WebOfTrust/WOT-terms/assets/65027257/01363aeb-7055-4413-bbc4-8f89325e703a\" alt=\"image\"></p><h4>Code Example</h4><p>Python code implementation from <a href=\"https://github.com/WebOfTrust/keripy/blob/development/src/keri/core/eventing.py\">keri.core.eventing.py</a> of the <code>ample</code> algorithm used in <a href=\"KAACE\">KAACE</a>:</p><pre><code class=\"language-python\">def ample(n, f=None, weak=True):    &quot;&quot;&quot;    Returns int as sufficient immune (ample) majority of n when n &gt;=1        otherwise returns 0    Parameters:        n is int total number of elements        f is int optional fault number        weak is Boolean            If f is not None and                weak is True then minimize m for f                weak is False then maximize m for f that satisfies n &gt;= 3*f+1            Else                weak is True then find maximum f and minimize m                weak is False then find maximum f and maximize m        n,m,f are subject to        f &gt;= 1 if n &gt; 0        n &gt;= 3*f+1        (n+f+1)/2 &lt;= m &lt;= n-f    &quot;&quot;&quot;    n = max(0, n)  # no negatives    if f is None:        f1 = max(1, max(0, n - 1) // 3)  # least floor f subject to n &gt;= 3*f+1        f2 = max(1, ceil(max(0, n - 1) / 3))  # most ceil f subject to n &gt;= 3*f+1        if weak:  # try both fs to see which one has lowest m            return min(n, ceil((n + f1 + 1) / 2), ceil((n + f2 + 1) / 2))        else:            return min(n, max(0, n - f1, ceil((n + f1 + 1) / 2)))    else:        f = max(0, f)        m1 = ceil((n + f + 1) / 2)        m2 = max(0, n - f)        if m2 &lt; m1 and n &gt; 0:            raise ValueError(&quot;Invalid f={} is too big for n={}.&quot;.format(f, n))        if weak:            return min(n, m1, m2)        else:            return min(n, max(m1, m2))</code></pre>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "APC",
    "url": "https://kerisse.org",
    "anchor": "APC",
    "definition": "<h1>APC</h1><h4>See</h4><p><a href=\"authentic-provenance-chain\">Authentic provenance chain</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "API",
    "url": "https://kerisse.org",
    "anchor": "API",
    "definition": "<h1>API</h1><h4>See</h4><p><a href=\"application-programming-interface\">Application programming interface</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "append only event logs",
    "url": "https://kerisse.org",
    "anchor": "append-only-event-logs",
    "definition": "<h1>append only event logs</h1><h4>Definition</h4><p>Append-only is a property of computer data storage such that new data can be appended to the storage, but where existing data is immutable.</p><p>A blockchain is an example of an append-only log. The events can be transactions. Bitcoin is a well-known Append only log where the events are <em>totally ordered</em> and signed transfers of control over unspent transaction output.</p><p>More on <a href=\"https://en.wikipedia.org/wiki/Append-only\">Wikipedia</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "application programming interface",
    "url": "https://kerisse.org",
    "anchor": "application-programming-interface",
    "definition": "<h1>application programming interface</h1><h4>Definition</h4><p>An application programming interface (API) is a way for two or more <a href=\"https://en.wikipedia.org/wiki/Computer_program\">computer programs</a> to communicate with each other. It is a type of software <a href=\"https://en.wikipedia.org/wiki/Interface_(computing)\">interface</a>, offering a service to other pieces of <a href=\"https://en.wikipedia.org/wiki/Software\">software</a>. </p><h4>API specification</h4><p>A document or standard that describes how to build or use such a connection or interface is called an API specification. A computer system that meets this standard is said to implement or expose an API. The term <a href=\"API\">API</a> may refer either to the specification or to the implementation.</p><p>More on <a href=\"https://en.wikipedia.org/wiki/API\">source</a> Wikipedia.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "architectural decision record",
    "url": "https://kerisse.org",
    "anchor": "architectural-decision-record",
    "definition": "<h1>architectural decision record</h1><h4>Definition</h4><p>Is a justified software design choice that addresses a functional or non-functional requirement that is architecturally significant.<br><a href=\"https://adr.github.io/\">Source adr.github.io</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "attributional trust",
    "url": "https://kerisse.org",
    "anchor": "attributional-trust",
    "definition": "<h1>attributional trust</h1><h4>Definition</h4><p>KERI offers cryptographic root-of-trust to establish attributional trust. In the real world you&#39;d also need <a href=\"reputational-trust\">reputational trust</a>. You can&#39;t have reputation without attributional trust.<br>Read more in source <a href=\"https://github.com/SmithSamuelM/Papers/blob/master/whitepapers/IdentifierTheory_web.pdf\">Universal Identifier Theory</a></p><h4>OOBI</h4><p><a href=\"out-of-band-introduction\">Out-of-band Introduction</a>s (OOBIs) to establish attributional trust, like its done with OOBIs in KERI, is not the same as the high friction costs of establishing reputational trust by going through the heavy lifting of <a href=\"identity-assurance\">identity assurance</a> by a to be trusted middle-men party, like <a href=\"GLEIF\">GLEIF</a>.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "authentic chained data container",
    "url": "https://kerisse.org",
    "anchor": "authentic-chained-data-container",
    "definition": "<h1>authentic chained data container</h1><h4>Definition</h4><p>In brief, an ACDC or <a href=\"authentic-data-container\">ADC</a> proves digital data consistency and authenticity in one go. An ACDC cryptographically secures commitment to data contained, and its identifiers are self-addressing, which means they point to themselves and are also contained ìn the data.</p><img src=\"https://hackmd.io/_uploads/HJDwDAUsq.png\" width=\"418\" height=\"317\"/>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "authentic data",
    "url": "https://kerisse.org",
    "anchor": "authentic-data",
    "definition": "<h1>authentic data</h1><h4>Definition</h4><p><a href=\"integrity\">Integer</a> and <a href=\"provenance\">Provenanced</a> data. Source: Timothy Ruff #IIW37</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "authentic data container",
    "url": "https://kerisse.org",
    "anchor": "authentic-data-container",
    "definition": "<h1>authentic data container</h1><h4>Definition</h4><p>A mechanism for conveying data that allows the <a href=\"authenticity\">authenticity</a> of its content to be proved.</p><h4>Instance</h4><p>A <a href=\"https://w3.org/TR/vc-data-model/\">Verifiable Credential</a> is an ACDC</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "authentic provenance chain",
    "url": "https://kerisse.org",
    "anchor": "authentic-provenance-chain",
    "definition": "<h1>authentic provenance chain</h1><h4>Definition</h4><p>Interlinked presentations of evidence that allow data to be tracked back to its origin in an objectively verifiable way.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "authentic web",
    "url": "https://kerisse.org",
    "anchor": "authentic-web",
    "definition": "<h1>authentic web</h1><h4>Definition</h4><p>The authentic web is the internet as a whole giant verifiable data structure. Also called <em>Web5</em>. The web will be one big graph. That&#39;s the mental model of the &#39;authentic web&#39;.</p><h4>Related</h4><ul><li><code>Signed at rest</code> - the data never throws away any signature of data. Because otherwise we can&#39;t validate data in the future</li><li><code>Key state at rest</code> - you need to solve this hard problem too. This is the hard problem <a href=\"KERI\">KERI</a> solves.</li><li><code>Signed in motion</code> - signatures get thrown away. You use ephemeral identifiers. You have to do everything anew every time you want to reconstruct a verifiable data structure. Therefore we need &#39;Signed at rest&#39;.</li></ul><h4>Scalability of Key state at rest</h4><ul><li>You can append to any part of the (directed-acyclic) <a href=\"directed-acyclic-graph\">graph</a></li><li>You can hop into the graph to verify any fragment of the graph</li><li>You don&#39;t have to sign the data,you just have to sign hashes of this data</li><li>Every tree that gets integrated in this giant graph-forest has its own <a href=\"root-of-trust\">Root of Trust</a></li></ul><h4>KERI related</h4><p>KERI solves all hard problems of the authentic web in a scalable manner.</p><h4>Technically oriented deep dive</h4><p>See more in <a href=\"https://weboftrust.github.io/WOT-terms/docs/concepts/concepts?level=2\">Concepts</a> behind KERI</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "authenticity",
    "url": "https://kerisse.org",
    "anchor": "authenticity",
    "definition": "<h1>authenticity</h1><h4>Definition</h4><p>The quality of having an objectively verifiable origin ; contrast <a href=\"veracity\">veracity</a>. When a newspaper publishes a story about an event, every faithful reproduction of that story may be <em>authentic</em> &mdash; but that does not mean the story was <em>true</em> (has <em>veracity</em>).</p><p>Authenticity is strongly related to digital <a href=\"security\">security</a>. Ideally it should be <a href=\"verifiable\">verifiable</a> (to a <a href=\"root-of-trust\">root-of-trust</a>). The future picture therein is the <a href=\"authentic-web\">Authentic Web</a>.</p><h4>KERI related</h4><p>The three properties, authenticity, confidentiality, and privacy inhabit a trade space. ...One can have any two of the three (privacy, authenticity, confidentiality) at the highest level but not all three.<br>The trilemma insists that one must make a trade-off by prioritizing one or two properties over a third.</p><p>The ToIP <a href=\"https://github.com/trustoverip/TechArch/blob/main/spec.md#61-design-goals\">design goals</a> reflect that trade-off and provide an order of importance. The design goals indicate that one should start with high authenticity, then high confidentiality, and then as high as possible privacy, given there is no trade-off with respect to the other two.</p><p>More on <a href=\"https://github.com/SmithSamuelM/Papers/blob/master/whitepapers/SPAC_Message.md\">Source</a> Samuel Smith SPAC whitepaper.</p><h4>Also see</h4><ul><li><a href=\"confidentiality\">confidentiality</a></li><li><a href=\"privacy\">privacy</a></li></ul>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "authoritative",
    "url": "https://kerisse.org",
    "anchor": "authoritative",
    "definition": "<h1>authoritative</h1><h4>Definition</h4><p>Established control <a href=\"authority\">authority</a> over an identifier, that has received attestations to it, e.g. control over the identifier has been verified to its root-of-trust. So the (control over the) identifier is &#39;authoritative&#39; because it can be considered accurate, renowned, honourable and / or respected.<br>Also used to describe <a href=\"PKI\">PKI</a> key pairs that have this feature.</p><h4>Four A’s of secure data control</h4><ol><li>Author: creator, <a href=\"source-of-truth\">source-of-truth</a> </li><li>Authentic: provable origin, <a href=\"root-of-trust\">root-of-trust</a> </li><li>Authorized: consent, <a href=\"loci-of-control\">loci-of-control</a> </li><li><strong>Authoritative: accurate, reputable</strong></li></ol><p>&quot;A4&quot; data control securely is established via <a href=\"self-certifying-identifier\">self-certifying</a> pseudonymous identifiers<br><a href=\"https://youtu.be/L82O9nqHjRE\">Source</a> Samuel M. Smith</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "authority",
    "url": "https://kerisse.org",
    "anchor": "authority",
    "definition": "<h1>authority</h1><h4>See ToIP glossary</h4>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "authorization",
    "url": "https://kerisse.org",
    "anchor": "authorization",
    "definition": "<h1>authorization</h1><h4>Definition</h4><p>Is the function of specifying access rights/privileges to resources, which is related to general <a href=\"https://en.wikipedia.org/wiki/Information_security\">information security</a> and <a href=\"https://en.wikipedia.org/wiki/Computer_security\">computer security</a>, and to <a href=\"https://en.wikipedia.org/wiki/Access_control\">access control</a> in particular.</p><p>More formally, &quot;to authorize&quot; is to define an access policy.</p><h4>KERI specific</h4><p>Authorizations have the form of a signed authorization statement where the statement typically includes the <a href=\"autonomic-identifier\">AID</a> under which the authorization is issued. A <a href=\"verifier\">verifier</a> may then <a href=\"verify\">verify</a> the authorization by verifying the attached signature using the keys that were authoritative at the time the authorization was issued. These authorizations are secure to the extent that the established control authority is secure. The authorizations inherit their <a href=\"security\">security</a> from their associated AID.</p><h5>W3C VC form</h5><p>Authorizations may take many forms. One form of particular interest is the <em>W3C Verifiable Credential</em> <a href=\"VC\">VC</a> standard. Verifiable credentials use the W3C Decentralized Identifier <a href=\"DID\">DID</a> standard. The DID standard provides name spacing syntax for decentralized identifiers that is evocative of URIs. A given DID may be a type of AID but <strong>not all DIDs are AIDs</strong>. Furthermore, because AIDs may use other name space syntax standards besides DIDs, <strong>not all AIDs are DIDs</strong>. KERI itself is name space agnostic so may be used to support AIDs in any name space that accepts <a href=\"pseudo-random-number\">pseudo-random</a> strings as an element.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "authorized vlei representative",
    "url": "https://kerisse.org",
    "anchor": "authorized-vlei-representative",
    "definition": "<h1>authorized vlei representative</h1><h4>Definition</h4><p>Also &#39;AVR&#39;. This a representative of a Legal Entity that are authorized by the <a href=\"DAR\">DAR</a> of a Legal Entity to request issuance and revocation of:</p><ul><li>vLEI Legal Entity Credentials</li><li>Legal Entity Official Organizational Role vLEI Credentials (<a href=\"official-organizational-role\">OOR</a> vLEI Credentials)</li><li>Legal Entity Engagement Context Role vLEI Credentials (<a href=\"engagement-context-role\">ECR</a> vLEI Credentials).</li></ul><p>Paraphrased by @henkvancann from <a href=\"https://www.gleif.org/vlei/introducing-the-vlei-ecosystem-governance-framework/2022-02-07_verifiable-lei-vlei-ecosystem-governance-framework-glossary-draft-publication_v0.9-draft.pdf\">source</a> Draft vLEI Ecosystem Governance Framework Glossary.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "autonomic computing systems",
    "url": "https://kerisse.org",
    "anchor": "autonomic-computing-systems",
    "definition": "<h1>autonomic computing systems</h1><h4>Definition</h4><p>Self managing computing systems using algorithmic governance, from the 90&#39;s way way way before DAOs. KERI creator Sam Smith worked at funded Navy research in the 90&#39;s on autonomic survivable systems as in &quot;self-healing&quot; systems: &quot;We called them autonomic way back then&quot;.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "autonomic identifier",
    "url": "https://kerisse.org",
    "anchor": "autonomic-identifier",
    "definition": "<h1>autonomic identifier</h1><h4>Definition</h4><p>An identifier that is <a href=\"self-certifying-identifier\">self-certifying</a> and <a href=\"self-sovereign-identity\">self-sovereign</a> (or <em>self-managing</em>).</p><h4>KERI related requirements</h4><p>A self-managing <a href=\"cryptonym\">cryptonym</a>ous identifier that MUST be self-certifying (self-authenticating) and MUST be encoded in CESR as a <a href=\"qualified\">qualified</a> cryptographic primitive. An AID MAY exhibit other self-managing properties such as transferable control using key <a href=\"pre-rotation\">pre-rotation</a> which enables control over such an AID to persist in spite of key weakness or compromise due to exposure. <a href=\"authoritative\">Authoritative</a> control over the identifier persists in spite of the evolution of the key-state.<br>Source Samuel M. Smith, <a href=\"https://github.com/WebOfTrust/ietf-keri/blob/main/draft-ssmith-keri.md\">ietf-keri draft</a></p><h4>Autonomic Identifier more general</h4><p>Autonomic Identifiers have been pretty well described in this piece as opposed to centralised (administrative) and blockchain-based (algorithmic) identifier systems: <strong>Architectural types of Identity Systems</strong>; originally by Phil Windley in this <a href=\"https://www.windley.com/archives/2020/09/the_architecture_of_identity_systems.shtml\">article</a>. </p><p>A summarizing comparison table might say more than a hundred words:</p><img src=\"https://hackmd.io/_uploads/HyOi3r81j.png\" width=\"500\" alt=\"summarising the trust bases of administrative, algorithmic and autonomic identifier systems\" />"
  },
  {
    "organisation": "WebOfTrust",
    "term": "autonomic identity system",
    "url": "https://kerisse.org",
    "anchor": "autonomic-identity-system",
    "definition": "<h1>autonomic identity system</h1><h4>Definition</h4><p>There&#39;s nobody that can intervene with the establishment of the authenticity of a control operation because you can verify all the way back to the root-of-trust.</p><img src=\"https://raw.githubusercontent.com/WebOfTrust/keri/main/images/ais.png\" width=\"500\" height=\"371\"/>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "autonomic namespace",
    "url": "https://kerisse.org",
    "anchor": "autonomic-namespace",
    "definition": "<h1>autonomic namespace</h1><h4>Definition</h4><p>A namespace that is self-certifying and hence self-administrating. ANs are therefore portable = truly self sovereign.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "autonomic trust basis",
    "url": "https://kerisse.org",
    "anchor": "autonomic-trust-basis",
    "definition": "<h1>autonomic trust basis</h1><h4>Definition</h4><p>When use an <a href=\"AID\">AID</a> as the <a href=\"root-of-trust\">root-of-trust</a> we form a so-called <em>autonomic trust basis</em>. This is diagrammed as follows:</p><p><img src=\"https://github.com/weboftrust/WOT-terms/static/img/autonomic-trust-basis.png\" alt=\"\"> </p><h4>Other trust bases</h4><p>Two other trust bases are in common use for identifier systems. One we call <em>algorithmic</em>, the other is . </p><p>An algorithmic trust basis relies on some network of nodes running some type of Byzantine fault tolerant totally ordering distributed consensus algorithm for its root-of-trust. These networks are more commonly known as a shared ledger or blockchain such as Bitcoin, Ethereum, or Sovrin</p><p>The other commonly used trust basis in identifier systems is an <em>administrative</em> or organizational <em>trust basis</em>, i.e. a trusted entity. This is neither <a href=\"security\">secure</a> nor <a href=\"decentralized-identifier\">decentralized</a>.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "AVR",
    "url": "https://kerisse.org",
    "anchor": "AVR",
    "definition": "<h1>AVR</h1><h4>See</h4><p><a href=\"authorized-vlei-representative\">Authorized vLEI Representative</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "backer",
    "url": "https://kerisse.org",
    "anchor": "backer",
    "definition": "<h1>backer</h1><h4>Definition</h4><p>The terms Backer and <a href=\"https://github.com/trustoverip/acdc/wiki/witness\">Witness</a> are closely related in KERI. Backers include both regular KERI witnesses and ledger-registered backers.</p><img src=\"https://raw.githubusercontent.com/WebOfTrust/keri/main/images/backer-witness.png\" width=\"350\"/>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "BADA",
    "url": "https://kerisse.org",
    "anchor": "BADA",
    "definition": "<h1>BADA</h1><h4>See</h4><p><a href=\"best-available-data-acceptance-mechanism\">Best available data acceptance mechanism</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "base media type",
    "url": "https://kerisse.org",
    "anchor": "base-media-type",
    "definition": "<h1>base media type</h1><h4>Definition</h4><p><code>credential</code> plus <code>ld</code> plus <code>json</code>.</p><p>Other media types of credentials are allowed by must provide either unidirectional or bidirectional transformations.  So for example we would create credential+acdc+json and provide a unidirectional transformation to credential+ld+json.</p><p>We are going for <code>credential</code> plus <code>acdc</code> plus <code>json</code> without <code>@context</code>. The main objection to use <code>@context</code> is that it can change the meaning of a credential. The other way around: ACDCs will include W3C credentials.</p><p>Media types will be used to differentiate between types of credentials and verifiable credentials.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "base64",
    "url": "https://kerisse.org",
    "anchor": "base64",
    "definition": "<h1>base64</h1><h4>Definition</h4><p>In <a href=\"https://en.wikipedia.org/wiki/Computer_programming\">computer programming</a>, Base64 is a group of <a href=\"https://en.wikipedia.org/wiki/Binary-to-text_encoding\">binary-to-text encoding</a> schemes that represent <a href=\"https://en.wikipedia.org/wiki/Binary_data\">binary data</a> (more specifically, a sequence of 8-bit bytes) in sequences of 24 bits that can be represented by four 6-bit Base64 digits.</p><p>More on source <a href=\"https://en.wikipedia.org/wiki/Base64\">Wikipedia</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "bespoke credential",
    "url": "https://kerisse.org",
    "anchor": "bespoke-credential",
    "definition": "<h1>bespoke credential</h1><h4>Definition</h4><p>It&#39;s an <a href=\"issuance-event\">issuance</a> of the disclosure or presentation of other ACDCs. <em>Bespoke</em> means <em>Custom</em> or <em>tailor made</em>.A bespoke credential serves as an on-the-fly contract with the issuee; it&#39;s a self-referencing and self-contained contract between the issuer and the verifier. Mind you, here the issuer and issuee are merely the discloser and disclosee of another (set of) ACDC(s).</p><h4>Example</h4><p>If I want consent terms attached to a presentation of an (set of) ACDC(s).<br>Consider a disclosure-specific ACDC, aka tailor made, custom or bespoke. The Issuer is the Discloser, the Issuee is the Disclosee. The rule section includes a context-specific (anti) assimilation clause that limits the use of the information to a single one-time usage purpose, that is for example, admittance to a restaurant. The ACDC includes an edge that references some other ACDC that may for example be a coupon or gift card. The attribute section could include the date and place of admittance.<br>For the code of this example, see this <a href=\"https://weboftrust.github.io/ietf-acdc/draft-ssmith-acdc.html#section-11.1\">section 11.1 in Github</a></p><h4>Advantage</h4><p>We can use all the tools available for issuance and presentation we already have.</p><h4>How the process work</h4><p>Similar to a presentation exchange, a verifier will first be asked for what they are looking for, secondly the discloser creates the dataset and publishes only the structure and the fields. To accomplish this, thirdly a compact ACDC will be issued (you publish the fields, not the content) and then issuer asks to sign it first. After signing, the disclosee can get the content associated with the on-the-fly contract.</p><p>More at <a href=\"https://weboftrust.github.io/ietf-acdc/draft-ssmith-acdc.html#name-disclosure-specific-bespoke\">Github source</a> </p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "best available data acceptance mechanism",
    "url": "https://kerisse.org",
    "anchor": "best-available-data-acceptance-mechanism",
    "definition": "<h1>best available data acceptance mechanism</h1><h4>Definition</h4><p>The BADA security model provides a degree of <a href=\"replay-attack\">replay attack</a> protection. The attributate originator (issuer, author, source) is provided by an attached signature couple or quadruple. A single reply could have multiple originators. When used as an <a href=\"authorization\">authorization</a> the reply attributes may include the identifier of the authorizer and the logic for processing the associated route may require a matching attachment.BADA is part of <a href=\"KERI\">KERI</a>&#39;s <a href=\"https://hackmd.io/Qsrfj7Y-TIGl5ESvrxWGxw\">Zero Trust Computing Architecture for Data Management</a>: How to support Secure Async Data Flow Routing in KERI enabled Applications.</p><h4>See also</h4><ul><li><a href=\"run-off-the-crud\">Run off the crud</a></li><li><a href=\"read-update-nullify\">RUN</a></li></ul>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "bexter",
    "url": "https://kerisse.org",
    "anchor": "bexter",
    "definition": "<h1>bexter</h1><h4>Definition</h4><p>The class variable length text that is used in CESR and preserves the round-trip transposability using Base64 URL safe-only encoding even though the text variable length.</p><h4>More details</h4><p>From <a href=\"https://keripy.readthedocs.io/en/latest/?badge=latest\">readthedocs.io</a></p><p>Bexter is subclass of Matter, cryptographic material, for variable length strings that only contain Base64 URL safe characters, i.e. Base64 text (bext).</p><p>When created using the &#39;bext&#39; paramaeter, the encoded matter in qb64 format in the text domain is more compact than would be the case if the string were passed in as raw bytes. The text is used as is to form the value part of theqb64 version not including the leader.</p><p>Due to ambiguity that arises from pre-padding bext whose length is a multiple of three with one or more &#39;A&#39; chars. Any bext that starts with an &#39;A&#39; and whose length is either a multiple of 3 or 4 may not round trip. Bext with a leading &#39;A&#39; whose length is a multiple of four may have the leading &#39;A&#39; stripped when round tripping.</p><ul><li>Bexter(bext=&#39;ABBB&#39;).bext == &#39;BBB&#39;</li><li>Bexter(bext=&#39;BBB&#39;).bext == &#39;BBB&#39;</li><li>Bexter(bext=&#39;ABBB&#39;).qb64 == &#39;4AABABBB&#39; == Bexter(bext=&#39;BBB&#39;).qb64</li></ul><p>To avoid this problem, only use for applications of base 64 strings that never start with &#39;A&#39;</p><p>Examples: base64 text strings:</p><ul><li>bext = &quot;&quot;</li><li>qb64 = &#39;4AAA&#39;</li><li>bext = &quot;-&quot;</li><li>qb64 = &#39;6AABAAA-&#39;</li><li>bext = &quot;-A&quot;</li><li>qb64 = &#39;5AABAA-A&#39;</li><li>bext = &quot;-A-&quot;</li><li>qb64 = &#39;4AABA-A-&#39;</li><li>bext = &quot;-A-B&quot;</li><li>qb64 = &#39;4AAB-A-B&#39;</li></ul><h6>Example uses:</h6><ul><li>CESR encoded paths for nested SADs and SAIDs</li><li>CESR encoded fractionally weighted threshold expressions</li></ul><h6>Attributes</h6><p>Inherited Properties:  (See Matter)    .pad  is int number of pad chars given raw    .code is  str derivation code to indicate cypher suite    .raw is bytes crypto material only without code    .index is int count of attached crypto material by context (receipts)    .qb64 is str in Base64 fully qualified with derivation code + crypto mat    .qb64b is bytes in Base64 fully qualified with derivation code + crypto mat    .qb2  is bytes in binary with derivation code + crypto material    .transferable is Boolean, True when transferable derivation code False otherwiseProperties:    .text is the Base64 text value, .qb64 with text code and leader removed.Hidden:    ._pad is method to compute  .pad property    ._code is str value for .code property    ._raw is bytes value for .raw property    ._index is int value for .index property    ._infil is method to compute fully qualified Base64 from .raw and .code    ._exfil is method to extract .code and .raw from fully qualified Base64Methods:&quot;&quot;&quot;    </p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "BFT",
    "url": "https://kerisse.org",
    "anchor": "BFT",
    "definition": "<h1>BFT</h1><h4>See</h4><p><a href=\"byzantine-fault-tolerance\">Byzantine fault tolerance</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "binding",
    "url": "https://kerisse.org",
    "anchor": "binding",
    "definition": "<h1>binding</h1><h4>Definition</h4><p>In short, the technique of connecting two data elements together. In the context of <a href=\"key-event-receipt-infrastructure\">KERI</a> it&#39;s the association of data or an <a href=\"identifier\">identifier</a> with another identifier or a subject (a person, organization or machine), thereby lifting the privacy of the subject through that connection, i.e. <strong>binding</strong>.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "bis",
    "url": "https://kerisse.org",
    "anchor": "bis",
    "definition": "<h1>bis</h1><h4>Definition</h4><p>bis = backed vc issue, registry-backed transaction event log credential issuance</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "bivalent",
    "url": "https://kerisse.org",
    "anchor": "bivalent",
    "definition": "<h1>bivalent</h1><h4>Definition</h4><p>A nested set of layered delegations in a <a href=\"delegation\">delegation</a> tree, wraps each layer with compromise recovery protection of the next higher layer. This maintains the security of the root layer for compromise recovery all the way out to the leaves in spite of the leaves using less secure key management methods.  </p><p><img src=\"https://github.com/weboftrust/WOT-terms/static/img/bivalent-key-management-infrastructure.png\" alt=\"bivalent-key-management-infrastructure\"></p><p>To elaborate, in a <a href=\"cooperative-delegation\">cooperative delegation</a>, the key generation and storage functions of the delegator and delegate, in terms of the controlling private keys, may be completely isolated from each other. This means that each may use its own independent key management infrastructure with no movement of private keys between the two infrastructures. We call this a <strong>bivalent</strong> key management infrastructure.</p><p>Source <a href=\"https://github.com/SmithSamuelM/Papers/blob/master/whitepapers/IdentifierTheory_web.pdf\">Universal Identifier Theory</a> by Samuel Smith</p><h4>Also see</h4><p><a href=\"multi-valent\">Multivalent</a><a href=\"univalent\">Univalent</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "blake3",
    "url": "https://kerisse.org",
    "anchor": "blake3",
    "definition": "<h1>blake3</h1><h4>Definition</h4><p>BLAKE3 is a relatively young (2020) cryptographic hash function based on Bao and BLAKE2.</p><h4>Features and programming languages</h4><p>BLAKE3 is a single algorithm with many desirable features (parallelism, XOF, KDF, PRF and MAC), in contrast to BLAKE and BLAKE2, which are algorithm families with multiple variants. BLAKE3 has a <a href=\"https://en.wikipedia.org/wiki/Binary_tree\">binary tree</a> structure, so it supports a practically unlimited degree of parallelism (both SIMD and multithreading) given long enough input. </p><p>The official <a href=\"https://en.wikipedia.org/wiki/Rust_(programming_language)\">Rust</a> and <a href=\"https://en.wikipedia.org/wiki/C_(programming_language)\">C</a> implementations<a href=\"https://en.wikipedia.org/wiki/BLAKE_(hash_function)?wprov=srpw1_0#cite_note-BLAKE3-repo-24\">[24]</a> are <a href=\"https://en.wikipedia.org/wiki/Multi-licensing\">dual-licensed</a> as public domain (<a href=\"https://en.wikipedia.org/wiki/CC0\">CC0</a>) and the <a href=\"https://en.wikipedia.org/wiki/Apache_License\">Apache License</a>.</p><h4>Fast, parallel and streaming</h4><p>BLAKE3 is designed to be as fast as possible. It is consistently a few times faster than BLAKE2. The BLAKE3 compression function is closely based on that of BLAKE2s, with the biggest difference being that the number of rounds is reduced from 10 to 7, a change based on the assumption that current cryptography is too conservative. In addition to providing parallelism, the Merkle tree format also allows for verified streaming (on-the-fly verifying) and incremental updates.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "blind oobi",
    "url": "https://kerisse.org",
    "anchor": "blind-oobi",
    "definition": "<h1>blind oobi</h1><h4>Definition</h4><p>A blind <a href=\"OOBI\">OOBI</a> means that you have some mechanisms in place for verifying the <a href=\"AID\">AID</a> instead of via the OOBI itself. A blind OOBI is essentially a <a href=\"URL\">URL</a>. It&#39;s called &quot;blind&quot; because the witness is not in the OOBI itself. You haves other ways of verifying the AID supplied. </p><h4>Example</h4><p>A blind OOBI through an AID that is on some witness list and has been verified to root-of-trust already. So you know the human being behind this referred AID. Because it&#39;s an AID that has a <a href=\"KEL\">KEL</a> out there, which has been securely established, you can trust it. So a blind OOBI makes a via-via commitment. </p><h4>The working</h4><p>A natural person that you trust is an owner of an AID. Then you cryptographically commit this AID to another AID through some mechanism (e.g. a witness list).</p><blockquote><p>&quot;Here&#39;s my public key and here&#39;s my AID and because this in an another witness list I trust it.&quot;</p></blockquote><h4>Unblind</h4><p>A &#39;blind&#39; AID becomes &quot;unblind&quot; when you establish a direct relationship with human being who controls the referenced AID. You shortcut the blind OOBI because you established a direct OOBI to the formerly reference AID.</p><h4>Why is a blind OOBI interesting</h4><p>type 2 authentication: minimise the friction| TBW prio 3 |</p><h4>Related terms</h4><p>Authentication by reference, latent authenticity</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "blinded revocation registry",
    "url": "https://kerisse.org",
    "anchor": "blinded-revocation-registry",
    "definition": "<h1>blinded revocation registry</h1><h4>Definition</h4><p>The current state of a <a href=\"transaction-event-log\">transaction event log</a> (TEL) <strong>may be hidden or blinded</strong> such that <em>the only way</em> for a potential verifier of the state to observe that state is <em>when the controller of a designated AID discloses it</em> at the time of presentation.</p><p>| TBW: BE CAREFUL WITH THE REST, JUST TEXT SNIPPETS TYPED IN FROM A CONVERSATION |</p><p>No information can be obtained via a <a href=\"rainbow-table-attack\">rainbow table attack</a> because the hash has enough <a href=\"entropy\">entropy</a> added to it.</p><p>| TBW  | on the basis of the last half hour of the recording ACDC meetup Dec 6 }</p><p>The issuer creates and signs the bulk issuance set of credentials and shares a salt with the presenters.The shared salt correlates between the issuer and the issuee, but that is the worst problem we have to consider, which is acceptable.</p><p>See more in the section <a href=\"https://github.com/trustoverip/tswg-acdc-specification/blob/main/draft-ssmith-acdc.md#blindable-state-tel\">blindable state tel</a></p><h4>Important observation</h4><p>The presenter does the decomposition in a way that allows a verifier to conclude: &quot;Yes that was an approved schema issued by the issuer!&quot;</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "BOLA",
    "url": "https://kerisse.org",
    "anchor": "BOLA",
    "definition": "<h1>BOLA</h1><h4>See</h4><p><a href=\"broken-object-level-authorization\">Broken Object Level Authorization</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "bran",
    "url": "https://kerisse.org",
    "anchor": "bran",
    "definition": "<h1>bran</h1><h4>Definition</h4><p>A cryptographic string used as a primary input, a seed, for creating key material for and <a href=\"autonomic-identifier\">autonomic-identifier</a>. </p><h4>Usages</h4><p>This is used in Signify TS:</p><ul><li><code>Controller</code> <a href=\"https://github.com/WebOfTrust/signify-ts/blob/516539f8bb68c8504e10221bf144a54b8c507dc3/src/keri/app/controller.ts#L104C77-L104C89\">constructor argument</a><pre><code class=\"language-javascript\">constructor(bran: string, tier: Tier, ridx: number = 0, state: any | null = null) {     this.bran = MtrDex.Salt_128 + &#39;A&#39; + bran.substring(0, 21)  // qb64 salt for seed     this.stem = &quot;signify:controller&quot;     this.tier = tier     this.ridx = ridx     this.salter = new Salter({ qb64: this.bran, tier: this.tier })...</code></pre></li></ul><h4>Sources</h4><p>Quote, a Zoom chat message, from Dr. Sam Smith on 8/22/23 in the Tuesday morning KERI &amp; ACDC ToIP specification discussion call:</p><blockquote><p>We already use seed and salt for something else so bran is related to seed so we used a term that was evocative of its use but not conflict with already used seed</p></blockquote>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "branch",
    "url": "https://kerisse.org",
    "anchor": "branch",
    "definition": "<h1>branch</h1><h4>Definition</h4><p>In software development a &#39;branch&#39; refers to the result of branching: the duplication of an object under version control for further separate modification.</p><h4>More info on Wikipedia</h4><p>Branching, in <a href=\"https://en.wikipedia.org/wiki/Version_control\">version control</a> and <a href=\"https://en.wikipedia.org/wiki/Software_configuration_management\">software configuration management</a>, is the duplication of an object under version control (such as a <a href=\"https://en.wikipedia.org/wiki/Source_code\">source code</a> file or a <a href=\"https://en.wikipedia.org/wiki/Directory_tree\">directory tree</a>). Each object can thereafter be modified separately and in parallel so that the objects become different. In this context the objects are called branches. The users of the version control system can branch any branch.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "broken object level authorization",
    "url": "https://kerisse.org",
    "anchor": "broken-object-level-authorization",
    "definition": "<h1>broken object level authorization</h1><h4>Definition</h4><p>Refers to <a href=\"security\">security</a> flaws where users can access data they shouldn&#39;t, due to inadequate permission checks on individual (sub)objects.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "brv",
    "url": "https://kerisse.org",
    "anchor": "brv",
    "definition": "<h1>brv</h1><h4>Definition</h4><p>brv = backed vc revoke, registry-backed transaction event log credential revocation</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "byzantine agreement",
    "url": "https://kerisse.org",
    "anchor": "byzantine-agreement",
    "definition": "<h1>byzantine agreement</h1><h4>Definition</h4><p>(non PoW) Byzantine Agreement is <a href=\"byzantine-fault-tolerance\">Byzantine fault tolerance</a> of distributed computing systems that enable them to come to consensus despite arbitrary behavior from a fraction of the nodes in the network. BA consensus makes no assumptions about the behavior of nodes in the system. Practical Byzantine Fault Tolerance (pBFT) is the prototypical model for Byzantine agreement, and it can reach consensus fast and efficiently while concurrently decoupling consensus from resources (i.e., financial stake in PoS or electricity in PoW).</p><h4>Stellar</h4><p><a href=\"https://blockonomi.com/stellar-consensus-protocol/\">More</a> about the Stellar consensus protocol</p><pre><code>&quot;What if PBFT and Stellar had a baby?that was missing liveness and total ordering but had safety and was completely decentralized, portable, and permission-less? It would be named KERI.&quot;SamMSmith</code></pre>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "byzantine fault tolerance",
    "url": "https://kerisse.org",
    "anchor": "byzantine-fault-tolerance",
    "definition": "<h1>byzantine fault tolerance</h1><h4>Definition</h4><p>A Byzantine fault (also interactive consistency, source congruency, error avalanche, <a href=\"byzantine-agreement\">Byzantine agreement</a> problem, Byzantine generals problem, and Byzantine failure) is a condition of a computer system, particularly distributed computing systems, where components may fail and there is imperfect information on whether a component has failed. The term takes its name from an allegory, the &quot;Byzantine Generals Problem&quot;, developed to describe a situation in which, in order to avoid catastrophic failure of the system, the system&#39;s actors must agree on a concerted strategy, but some of these actors are unreliable.In a Byzantine fault, a component such as a server can inconsistently appear both failed and functioning to failure-detection systems, presenting different symptoms to different observers. It is difficult for the other components to declare it failed and shut it out of the network, because they need to first reach a consensus regarding which component has failed in the first place.Byzantine fault tolerance (BFT) is the dependability of a fault-tolerant computer system to such conditions.</p><h4>Consensus two third</h4><p>A system has Byzantine Fault Tolerance (BFT) when it can keep functioning correctly as long as two-thirds of the network agree or reaches consensus. BFT is a property or characteristic of a system that can resist up to one-third of the nodes failing or acting maliciously.</p><p>The pBFT model primarily focuses on providing a practical Byzantine state machine replication that tolerates Byzantine faults (malicious nodes) through an assumption that there are independent node failures and manipulated messages propagated by specific, independent nodes.The algorithm is designed to work in asynchronous systems and is optimized to be high-performance with an impressive overhead runtime and only a slight increase in latency. More on wikipedia about</p><h4>More on Wikipedia</h4><ul><li><a href=\"https://en.wikipedia.org/wiki/Byzantine_fault\">Byzantine Fault</a></li><li><a href=\"https://en.bitcoinwiki.org/wiki/PBFT\">pBFT</a> : An article that explains practical BFT. </li><li><a href=\"https://blockonomi.com/practical-byzantine-fault-tolerance/\">Here</a>&#39;s a complete beginners guide.</li></ul>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "CBOR",
    "url": "https://kerisse.org",
    "anchor": "CBOR",
    "definition": "<h1>CBOR</h1><h4>See</h4><p><a href=\"concise-binary-object-representation\">Concise Binary Object Representation</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "certificate transparency",
    "url": "https://kerisse.org",
    "anchor": "certificate-transparency",
    "definition": "<h1>certificate transparency</h1><h4>Definition</h4><p>Certificate Transparency (CT) is an Internet security standard and open source framework for monitoring and auditing digital certificates. The standard creates a system of public logs that seek to eventually record all certificates issued by publicly trusted certificate authorities, allowing efficient identification of mistakenly or maliciously issued certificates. As of 2021, Certificate Transparency is mandatory for all SSL/TLS certificates.</p><h4>2011 Diginotar Attack</h4><p>Certificate Transparency was a response to the 2011 attack on DigiNotar and other Certificate Authorities. These attacks showed that the lack of transparency in the way CAs operated was a significant risk to the Web Public Key Infrastructure. It led to the creation of this ambitious project to improve security online by bringing accountability to the system that protects HTTPS. </p><h4>More information</h4><p>More on <a href=\"https://certificate.transparency.dev/\">certificate.transparency.dev</a> and <a href=\"https://en.wikipedia.org/wiki/Certificate_Transparency\">Wikipedia</a>.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "CESR",
    "url": "https://kerisse.org",
    "anchor": "CESR",
    "definition": "<h1>CESR</h1><h4>See</h4><p><a href=\"composable-event-streaming-representation\">composable event streaming representation</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "cesr proof signatures",
    "url": "https://kerisse.org",
    "anchor": "cesr-proof-signatures",
    "definition": "<h1>cesr proof signatures</h1><h4>Definition</h4><p>CESR Proof Signatures are an extension to the Composable Event Streaming Representation [CESR] that provide transposable cryptographic signature attachments on self-addressing data (SAD) [SAID]. Any SAD, such as an Authentic Chained Data Container (ACDC) Verifiable Credential [ACDC] for example, may be signed with a CESR Proof Signature and streamed along with any other CESR content. In addition, a signed SAD can be embedded inside another SAD and the CESR proof signature attachment can be transposed across envelope boundaries and streamed without losing any cryptographic integrity.<br>(Philip Feairheller, IETF-cesr-proof)</p><img src=\"https://hackmd.io/_uploads/ByxcPBQT5.png\" width=\"600\" height=\"350\"/>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "cesride",
    "url": "https://kerisse.org",
    "anchor": "cesride",
    "definition": "<h1>cesride</h1><h4>Definition</h4><p>is concerned with parsing CESR primitives.</p><p>Cesride is built from cryptographic primitives that are named clearly and concisely. There are:</p><ul><li><a href=\"diger\">Diger</a></li><li><a href=\"verfer\">Verfer</a></li><li><a href=\"signer\">Signer</a> </li><li><a href=\"siger\">Siger</a></li><li><a href=\"cigar\">Cigar</a></li><li><a href=\"salter\">Salter</a></li></ul><p>Each primitive will have methods attached to it that permit one to generate and parse the qualified base2 or <a href=\"base64\">base64</a> representation. Common methods you&#39;ll find:</p><ul><li><code>.qb64()</code> - qualified base-64 representation of cryptographic material as a string</li><li><code>.qb64b()</code> - qualified base-64 representation of cryptographic material as octets (bytes)</li><li><code>.qb2()</code> - qualified base-2 representation of cryptographic material as octets (bytes)</li><li><code>.code()</code> - qualifying code (describes the type of cryptographic material)</li><li><code>.raw()</code> - raw cryptographic material (unqualified) as octets (bytes)</li></ul><p><a href=\"https://github.com/WebOfTrust/cesride#terminology\">Source</a> by Jason Colburne</p><h4>Related</h4><p><a href=\"parside\">Parside</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "chain link confidentiality",
    "url": "https://kerisse.org",
    "anchor": "chain-link-confidentiality",
    "definition": "<h1>chain link confidentiality</h1><h4>Definition</h4><p>Chains together a sequence of <a href=\"disclosee\">Disclosees</a> which may also include a set of constraints on data usage by both second and third parties expressed in legal language such that the constraints apply to all recipients of the disclosed data thus the phrase &quot;chain link&quot; confidentiality. Each Disclosee in the sequence in turn is the <a href=\"discloser\">Discloser</a> to the next Disclosee.</p><p>This is the primary mechanism of granting digital data rights through binding information exchange to confidentiality laws. Confidentiality is dynamically negotiated on a per-event, per-data exchange basis according to the data that is being shared in a given exchange.</p><h4>Contrast</h4><p>Disclosures via <a href=\"presentation-exchange\">Presentations Exchanges</a> may be contractually protected by Chain-Link Confidentiality (i.e. a Chain-Link Confidential disclosure). The chaining in this case is different from the chaining described above between Issuances in a <a href=\"directed-acyclic-graph\">DAG</a> of chained Issuances. Chain-link confidentiality, in contrast, chains together a sequence of Disclosees.<br>More info at <a href=\"https://github.com/WebOfTrust/ietf-ipex/blob/main/draft-ssmith-ipex.md#chain-link-confidentiality\">source</a></p><h4>Article Woodrow Hartzog</h4><p>An important article on the topic can be found here:<br><a href=\"https://papers.ssrn.com/sol3/papers.cfm?abstract_id=2045818\">Woodrow Hartzog “Chain-Link Confidentiality”</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "chain of custody",
    "url": "https://kerisse.org",
    "anchor": "chain-of-custody",
    "definition": "<h1>chain of custody</h1><h4>Definition</h4><p>From Wikipedia (<a href=\"https://en.wikipedia.org/wiki/Chain_of_custody\">Source</a>):Chain of custody (CoC), in legal contexts, is the chronological documentation or <a href=\"https://en.wiktionary.org/wiki/paper_trail\">paper trail</a> that records the sequence of custody, control, transfer, analysis, and disposition of materials, including physical or electronic <a href=\"https://en.wikipedia.org/wiki/Evidence\">evidence</a>. Of particular importance in criminal cases, the concept is also applied in civil litigation and more broadly in drug testing of athletes and in <a href=\"https://en.wikipedia.org/wiki/Supply_chain_management\">supply chain management</a>, e.g. to improve the <a href=\"https://en.wikipedia.org/wiki/Traceability\">traceability</a> of food products, or to provide assurances that wood products originate from <a href=\"https://en.wikipedia.org/wiki/Sustainable_forest_management\">sustainably managed forests</a>.</p><h4>New technology shortens CoC</h4><p>It is often a tedious process that has been required for evidence to be shown legally in court. Now, however, with new portable technology that allows accurate laboratory quality results from the scene of the crime, the chain of custody is often much shorter which means evidence can be processed for court much faster.<br>(<a href=\"https://en.wikipedia.org/wiki/Chain_of_custody\">Source</a>)</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "cigar",
    "url": "https://kerisse.org",
    "anchor": "cigar",
    "definition": "<h1>cigar</h1><h4>Definition</h4><p>An <strong><em>un</em></strong><a href=\"indexed-signature\">indexed signature</a>.<br><a href=\"https://github.com/WebOfTrust/cesride#terminology\">Source</a> by Jason Colburne</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "claim",
    "url": "https://kerisse.org",
    "anchor": "claim",
    "definition": "<h1>claim</h1><h4>Definition</h4><p>An assertion of the truth of something, typically one which is disputed or in doubt. A set of claims might convey personally identifying information: name, address, date of birth and citizenship, for example. (<a href=\"https://www.identityblog.com/?p=352\">Source</a>).</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "CLC",
    "url": "https://kerisse.org",
    "anchor": "CLC",
    "definition": "<h1>CLC</h1><h4>See</h4><p><a href=\"chain-link-confidentiality\">Chain link confidential</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "clone",
    "url": "https://kerisse.org",
    "anchor": "clone",
    "definition": "<h1>clone</h1><h4>Definition</h4><p>A copy of a system that is - and works exactly as the original</p><h4>More detail</h4><p>In <a href=\"https://en.wikipedia.org/wiki/Computing\">computing</a>, a clone is <a href=\"https://en.wikipedia.org/wiki/Computer_hardware\">hardware</a> or <a href=\"https://en.wikipedia.org/wiki/Software\">software</a> that is designed to function in exactly the same way as another system.</p><p>A specific subset of clones are remakes (or remades), which are revivals of old, obsolete, or discontinued products.<br><a href=\"https://en.wikipedia.org/wiki/Clone_(computing)\">Source Wikipedia</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "cloud agent",
    "url": "https://kerisse.org",
    "anchor": "cloud-agent",
    "definition": "<h1>cloud agent</h1><h4>Definition</h4><p>Cloud agent is software that is installed on the cloud server instances in order to provide security, monitoring, and analysis solutions for the cloud. They actually provide information and helps to provide control over cloud entities.<br><em>Paraphrased by @henkvancann based on <a href=\"https://www.cloudopedia.com/cloud-agent/\">source</a></em>.<br>Also see <a href=\"agent\">Agent</a>.</p><h4>Cloud computing</h4><p>Cloud computing<a href=\"https://en.wikipedia.org/wiki/Cloud_computing?wprov=srpw1_1#cite_note-urlAn_Introduction_to_Dew_Computing:_Definition''',_Concept_and_Implications_-_IEEE_Journals_&_Magazine-1\">[1]</a> is the on-demand availability of <a href=\"https://en.wikipedia.org/wiki/Computer\">computer</a> <a href=\"https://en.wikipedia.org/wiki/System_resource\">system resources</a>, especially data storage (<a href=\"https://en.wikipedia.org/wiki/Cloud_storage\">cloud storage</a>) and <a href=\"https://en.wikipedia.org/wiki/Computing_power\">computing power</a>, without direct active management by the user.<br><a href=\"https://en.wikipedia.org/wiki/Cloud_computing\">More</a> at source on Wikipedia</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "code table",
    "url": "https://kerisse.org",
    "anchor": "code-table",
    "definition": "<h1>code table</h1><h4>Definition</h4><p>a code table is the Internet&#39;s most comprehensive yet simple resource for browsing and searching for <a href=\"https://www.codetable.net/altkeycodes\">alt codes</a>, <a href=\"https://www.codetable.net/asciikeycodes\">ascii codes</a>, <a href=\"https://www.codetable.net/entitiesinhtml\">entities in html</a>, <a href=\"https://www.codetable.net/unicodecharacters\">unicode characters</a>, and <a href=\"https://www.codetable.net/groups\">unicode groups and categories</a>.<br><a href=\"https://www.codetable.net\">Source</a></p><h5>Example text code table from CESR</h5><img src=\"https://hackmd.io/_uploads/H1LHEQDfj.png\" width=\"600\" /><h4>CESR related</h4><p>Multiple text and binary code tables exist to pre-pend characters before the respective stream parts to characterize (<a href=\"self-framing\">self-framing</a>) them or group them.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "code table selector",
    "url": "https://kerisse.org",
    "anchor": "code-table-selector",
    "definition": "<h1>code table selector</h1><h4>Definition</h4><p>the first character in the text code of <a href=\"composable-event-streaming-representation\">CESR stream</a> that determines which <a href=\"code-table\">code table</a> to use, either a default code table or a code table selector character when not the default code table. Thus the 1 character text code table must do double duty. It must provide selectors for the different text code tables and also provide type codes for the most popular primitives that have a pad size of 1 that appear is the default code table.</p><h4>Selector code table</h4><p>See row 1.<img src=\"https://hackmd.io/_uploads/H1LHEQDfj.png\" width=\"600\" /></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "cold start stream parsing",
    "url": "https://kerisse.org",
    "anchor": "cold-start-stream-parsing",
    "definition": "<h1>cold start stream parsing</h1><h4>Definition</h4><p>After a reboot (or cold start), a stream processor looks for framing information to know how to parse groups of elements in the stream. </p><p>If that framing information is ambiguous then the parser may become confused and require yet another cold start. While processing a given stream a parser may become confused especially if a portion of the stream is malformed in some way. This usually requires flushing the stream and forcing a cold start to resynchronize the parser to subsequent stream elements. </p><h4>re-synchronization</h4><p>Better than flushing the stream and forcing a cold start is a re-synchronization mechanism that does not require flushing the in-transit buffers but merely skipping to the next well-defined stream element boundary in order to execute a cold start.<br><em>See an example</em> in the <a href=\"https://github.com/WebOfTrust/ietf-cesr/blob/main/draft-ssmith-cesr.md#cold-start-stream-parsing-problem\">source</a></p><h4>CESR related</h4><p>Special CESR count codes support re-synchronization at each boundary between interleaved CESR and other serializations like JSON, CBOR, or MGPK.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "collective signature",
    "url": "https://kerisse.org",
    "anchor": "collective-signature",
    "definition": "<h1>collective signature</h1><h4>Definition</h4><p>a group signature scheme, that (i) is shared by a set of signing groups and (ii) combined collective signature shared by several signing groups and several individual signers. The protocol of the first type is constructed and described in detail. It is possible to modify the described protocol which allows transforming the protocol of the first type into the protocol of the second type. The proposed collective signature protocols have significant merits, one of which is connected with possibility of their practical using on the base of the existing public key infrastructures.<br><a href=\"https://link.springer.com/chapter/10.1007/978-981-10-7512-4_20\">Source</a></p><p>Collective signature have a variable length as a function of the number of signers.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "collision",
    "url": "https://kerisse.org",
    "anchor": "collision",
    "definition": "<h1>collision</h1><h4>Definition</h4><p>In cryptography and identity <em>collision</em> generally refers to something going wrong because an identical result has been produced but it refers to - or points to - different sources or assets backing this result.</p><p>E.g. two hashes collide, meaning two different digital sources produce the same hash.<br>Another example is <a href=\"https://en.wikipedia.org/wiki/Naming_collision\">name(space) collision</a>.</p><h4>Naming collision</h4><p>A circumstance where two or more identifiers in a given <a href=\"namespace\">namespace</a> or a given scope cannot be unambiguously resolved.<br><a href=\"https://en.wikipedia.org/wiki/Naming_collision\">Source Wikipedia</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "compact variant",
    "url": "https://kerisse.org",
    "anchor": "compact-variant",
    "definition": "<h1>compact variant</h1><h4>Definition</h4><p>Either a <a href=\"most-compact\">most compact</a> version of an ACDC or the <a href=\"fully-compact\">fully compact</a> version of an ACDC. An <a href=\"issuer\">Issuer</a> commitment via a signature to any variant of ACDC (compact, full, etc) makes a cryptographic commitment to the top-level section fields shared by all variants of that ACDC because the value of a <a href=\"top-level-section\">top level section field</a> is either the <a href=\"SAD\">SAD</a> or the <a href=\"SAID\">SAID</a> of the SAD of the associated section.</p><h4>Relation</h4><p>All the variants of an <a href=\"authentic-chained-data-container\">ACDC</a> are various degrees of expansion of the compact variant.<br>More at <a href=\"https://github.com/WebOfTrust/ietf-ipex/blob/main/draft-ssmith-ipex.md\">source</a></p><h4>Also see</h4><p><a href=\"fully-expanded\">Fully (expanded)</a> version of an ACDC<br><a href=\"fully-compact\">Fully compact(ed)</a> version of an ACDC<br><a href=\"most-compact\">Most compact</a> version of an ACDC.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "complementary integrity verification",
    "url": "https://kerisse.org",
    "anchor": "complementary-integrity-verification",
    "definition": "<h1>complementary integrity verification</h1><h4>Definition</h4><p>A mechanism that can verify integrity independent of needing access to a previous instance or reference version of the information for comparison.<br>Source: Neil Thomson</p><h4>Complementary nature</h4><p>Independent Integrity Verification is what is achieved by use of a public key from the data &quot;controller&quot; such that it does not need to compare received data/messages against the sent data/message.</p><p>The already verified chain up to a certain point in time in the past (previous instance or reference version) no longer needs to be verified.</p><blockquote><p>Example: The tail of a <a href=\"key-event-log\">KEL</a> that has been verified to its <a href=\"root-of-trust\">root-of-trust</a> on a certain date and time, can be cut off. You don&#39;t need to verify this any more from this date.</p></blockquote><h4>See also</h4><p><a href=\"integrity\">integrity</a><br><a href=\"verified-integrity\">verified integrity</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "composability",
    "url": "https://kerisse.org",
    "anchor": "composability",
    "definition": "<h1>composability</h1><h4>See</h4><p><a href=\"text-binary-concatenation-composability\">Text binary concatenation composability</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "composable",
    "url": "https://kerisse.org",
    "anchor": "composable",
    "definition": "<h1>composable</h1><h4>See</h4><p><a href=\"composable\">Composability</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "composable event streaming representation",
    "url": "https://kerisse.org",
    "anchor": "composable-event-streaming-representation",
    "definition": "<h1>composable event streaming representation</h1><h4>Definition</h4><p>Also called &#39;CESR&#39;. This compact encoding scheme fully supports both textual and binary streaming applications of attached crypto material of all types. This approach includes <a href=\"composability\">composability</a> in both the textual and binary streaming domains. The primitives may be the minimum possible but still composable size. </p><p>Making composability a guaranteed property allows future extensible support of new compositions of streaming formats based on pre-existing core primitives and compositions of core primitives. This enables optimized stream processing in both the binary and text domains.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "concatenation",
    "url": "https://kerisse.org",
    "anchor": "concatenation",
    "definition": "<h1>concatenation</h1><p>In <a href=\"https://en.wikipedia.org/wiki/Formal_language\">formal language theory</a> and <a href=\"https://en.wikipedia.org/wiki/Computer_programming\">computer programming</a>, string concatenation is the operation of joining <a href=\"https://en.wikipedia.org/wiki/Character_string_(computer_science)\">character strings</a> <a href=\"https://en.wiktionary.org/wiki/end-to-end\">end-to-end</a>. For example, the concatenation of &quot;snow&quot; and &quot;ball&quot; is &quot;snowball&quot;.<br>More on source <a href=\"https://en.wikipedia.org/wiki/Concatenation\">Wikipedia page</a></p><h4>KERI related</h4><p>In CESR Concatenation is an important property of CESR&#39;s <a href=\"composability\">Composability</a>; it is associative and may be applied to any two <a href=\"primitive\">primitives</a> or any two groups or sets of concatenated primitives.</p><p>The composability property of CESR allows us to create arbitrary compositions of primitives via concatenation in either the text or binary domain and then convert the composition en masse to the other domain and then de-concatenate the result without loss. The <a href=\"self-framing\">self-framing</a> property of the primitives enables de-concatenation.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "concise binary object representation",
    "url": "https://kerisse.org",
    "anchor": "concise-binary-object-representation",
    "definition": "<h1>concise binary object representation</h1><h4>Definition</h4><p>It is a binary data <a href=\"https://en.wikipedia.org/wiki/Serialization\">serialization</a> format loosely based on <a href=\"https://en.wikipedia.org/wiki/JSON\">JSON</a> authored by C. Bormann. Like JSON it allows the transmission of data objects that contain <a href=\"https://en.wikipedia.org/wiki/Attribute%E2%80%93value_pair\">name–value pairs</a>, but in a more concise manner. This increases processing and transfer speeds at the cost of <a href=\"https://en.wikipedia.org/wiki/Human-readable_medium\">human readability</a>. </p><h5>IETF specification</h5><p>It is defined in IETF <a href=\"https://en.wikipedia.org/wiki/RFC_(identifier)\">RFC</a> <a href=\"https://datatracker.ietf.org/doc/html/rfc8949\">8949</a>.<a href=\"https://en.wikipedia.org/wiki/CBOR#cite_note-:0-1\">[1]</a></p><h5>MessagePack</h5><p>CBOR was inspired by <a href=\"https://en.wikipedia.org/wiki/MessagePack\">MessagePack</a>, which was developed and promoted by Sadayuki Furuhashi. CBOR extended MessagePack, particularly by allowing to distinguish text strings from byte strings, which was implemented in 2013 in MessagePack.<a href=\"https://en.wikipedia.org/wiki/CBOR#cite_note-4\">[4]</a><a href=\"https://en.wikipedia.org/wiki/CBOR#cite_note-rfc8949-5\">[5]</a></p><h5>More on Wikipedia</h5><p><a href=\"https://en.wikipedia.org/wiki/CBOR\">CBOR</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "confidentiality",
    "url": "https://kerisse.org",
    "anchor": "confidentiality",
    "definition": "<h1>confidentiality</h1><h4>Definition</h4><p>All statements in a conversation are only known by the parties to that conversation. Source: Samuel Smith, at IIW-37, Oct 2023.</p><p>Confidentiality involves a set of rules or a promise usually executed through <a href=\"https://en.wikipedia.org/wiki/Confidentiality_agreements\">confidentiality agreements</a> that limits the access or places restrictions on certain types of information.<br>More on source <a href=\"https://en.wikipedia.org/wiki/Confidentiality\">Wikipedia</a></p><h4>KERI related</h4><p>The three properties, authenticity, confidentiality, and privacy inhabit a trade space. ...One can have any two of the three (privacy, authenticity, confidentiality) at the highest level but not all three.<br>The trilemma insists that one must make a trade-off by prioritizing one or two properties over a third.</p><p>The ToIP <a href=\"https://github.com/trustoverip/TechArch/blob/main/spec.md#61-design-goals\">design goals</a> reflect that trade-off and provide an order of importance. The design goals indicate that one should start with high authenticity, then high confidentiality, and then as high as possible privacy, given there is no trade-off with respect to the other two.</p><p>More on <a href=\"https://github.com/SmithSamuelM/Papers/blob/master/whitepapers/SPAC_Message.md\">Source</a> Samuel Smith SPAC whitepaper.</p><h4>Also see</h4><ul><li><a href=\"authenticity\">authenticity</a></li><li><a href=\"privacy\">privacy</a></li></ul>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "configuration files",
    "url": "https://kerisse.org",
    "anchor": "configuration-files",
    "definition": "<h1>configuration files</h1><h4>Definition</h4><p>In <a href=\"https://en.wikipedia.org/wiki/Computing\">computing</a>, configuration files (commonly known simply as config files) are <a href=\"https://en.wikipedia.org/wiki/Computer_file\">files</a> used to configure the <a href=\"https://en.wikipedia.org/wiki/Parameter_(computer_programming)\">parameters</a> and <a href=\"https://en.wikipedia.org/wiki/Initialization_(programming)\">initial settings</a> for some <a href=\"https://en.wikipedia.org/wiki/Computer_program\">computer programs</a>. They are used for user <a href=\"https://en.wikipedia.org/wiki/Application_software\">applications</a>, <a href=\"https://en.wikipedia.org/wiki/Server_(computing)\">server processes</a> and <a href=\"https://en.wikipedia.org/wiki/Operating_system\">operating system</a> settings.</p><p>More on source <a href=\"https://en.wikipedia.org/wiki/Configuration_file\">Wikipedia</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "consensus mechanism",
    "url": "https://kerisse.org",
    "anchor": "consensus-mechanism",
    "definition": "<h1>consensus mechanism</h1><h4>Definition</h4><p>How groups of entitities come to decisions. In general to learn about consensus mechanisms read any textbook on decision making, automated reasoning, multi-objective decision making, operations research etc.</p><h4>Overall reliability</h4><p>A fundamental problem in distributed computing and multi-agent systems is to achieve overall system reliability in the presence of a number of faulty processes. This often requires coordinating processes to reach consensus, or agree on some data value that is needed during computation.</p><h4>More information</h4><p>More on <a href=\"https://en.wikipedia.org/wiki/Consensus_(computer_science)\">wikipedia</a> or in this <a href=\"https://cryptoresearch.report/crypto-research/consensus-mechanisms/\">2018 report</a> from the cryptocurrency field.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "content addressable hash",
    "url": "https://kerisse.org",
    "anchor": "content-addressable-hash",
    "definition": "<h1>content addressable hash</h1><h4>Definition</h4><p>Finding content by a hash of this content, generated by a one-way hash function applied to the content.</p><p>Content addressing is a way to find data in a network using its content rather than its location. The way we do is by taking the content of the content and hashing it. Try uploading an image to IPFS and get the hash using the below button. </p><h4>Content Addressable Storage</h4><p>Content Addressable Storage systems work by passing the content of the file through a <a href=\"https://en.wikipedia.org/wiki/Cryptographic_hash_function\">cryptographic hash function</a> to generate a unique key, the &quot;content address&quot;. The <a href=\"https://en.wikipedia.org/wiki/File_system\">file system</a>&#39;s <a href=\"https://en.wikipedia.org/wiki/Directory_(computing)\">directory</a> stores these addresses and a pointer to the physical storage of the content. Because an attempt to store the same file will generate the same key, CAS systems ensure that the files within them are unique, and because changing the file will result in a new key, CAS systems <em>provide assurance that the file is unchanged</em>.</p><h4>IPFS</h4><p>In the IPFS ecosystem, this hash is called Content Identifier, or CID.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "contextual linkability",
    "url": "https://kerisse.org",
    "anchor": "contextual-linkability",
    "definition": "<h1>contextual linkability</h1><h4>Definition</h4><p>Refers to the condition where vendors or other data capture points provide enough context at point of capture to be able to use statistical correlation with existing data sets to link any of a person&#39;s disclosed attributes to a set of already known data points about a given person. </p><p>This sort of linkability nullifies the perceived protection of selective disclosure through zero knowledge proofs since the disclosed data can be combined with context to easily link the disclosed data to an existing profile of the person.</p><p>These threats mainly focus on a subject (the entity) who wants to hide as much of his identifiable information (or at least make it as unlikable as possible). This can occur when the subject wants to authenticate himself to a certain service (multiple authentication principles are shown in the tree), but also during regular communication (browsing, client-server requests, etc.) by means of the contextual information connected or linked to the the activity or communication.<br>More at <a href=\"https://www.linddun.org/linkability\">source</a></p><p><a href=\"contractually-protected-disclosure\">Contractually protected disclosure</a> is the primary defense against contextual linkability.</p><h4>Example</h4><p>Cameras in stores are already able to identify you due to the extremely high prevalence of modern security systems who do facial recognition or mobile device ping recognition on each person entering the premises of a store. In the context of you buying stuff in their store they can capture data linked to you and then go and sell your data to third parties since there is an implicit grant of permission to use the data and also since there are no legal constraints on the distribution of that data.</p><h4>Dangers</h4><p>Just have a look at what &quot;they&quot; are doing:<br><a href=\"https://linkgraph.io/blog/how-to-contextual-link-building/\">https://linkgraph.io/blog/how-to-contextual-link-building/</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "contingent disclosure",
    "url": "https://kerisse.org",
    "anchor": "contingent-disclosure",
    "definition": "<h1>contingent disclosure</h1><h4>Definition</h4><p><a href=\"chain-link-confidentiality\">Chain link confidentiality</a> is a form of contingent disclosure.</p><p>| TBW prio 1 |</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "contractually protected disclosure",
    "url": "https://kerisse.org",
    "anchor": "contractually-protected-disclosure",
    "definition": "<h1>contractually protected disclosure</h1><h4>Definition</h4><p>Usage of schema-based and contract-based controls to limit the exchange of information to provide both mechanical and legal protection on the sharing of data. </p><p>Mechanical protection is composed of sharing the schema of the data to be shared prior to sharing the actual data contents. This mechanical protection is then combined through the IPEX protocol with disclosures of legal contracts to be agreed to prior to sharing the desired data contents.</p><p>Once the legal agreements have been met then the disclosure mechanism exchanges the desired data contents.</p><p>This is also the most elaborate form of disclosure by an <a href=\"IPEX\">IPEX</a>. Contractually protected disclosure includes both <a href=\"chain-link-confidentiality\">chain-link confidential</a> and <a href=\"contingent-disclosure\">contingent disclosure</a>.<br>Paraphrased by @henkvancann based on <a href=\"https://github.com/WebOfTrust/ietf-ipex/blob/main/draft-ssmith-ipex.md#discussion\">source</a></p><h4>Relation</h4><p>This <a href=\"IPEX\">IPEX</a> protocol leverages important features of <a href=\"ACDC\">ACDC</a>s and ancillary protocols such as <a href=\"CESR\">CESR</a>, <a href=\"SAID\">SAID</a>s, and <a href=\"cesr-proof-signatures\">CESR-Proofs</a> as well as <a href=\"ricardian-contract\">Ricardian contract</a>s and graduated disclosure (partial, selective, full) to enable contractually protected disclosure. Contractually protected disclosure includes both [chain-link confidential](chain-link confidential) and [contingent disclosure](contingent disclosure).</p><h4>Rule</h4><p>The disclosure performed by a presentation exchange MAY be <a href=\"graduated-disclosure\">graduated</a> and MAY be <a href=\"contractually-protected-disclosure\">contractually</a> protected.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "control authority",
    "url": "https://kerisse.org",
    "anchor": "control-authority",
    "definition": "<h1>control authority</h1><h4>Definition</h4><p>In identity systems Control Authority is who controls what and that is the primary factor in determining the basis for trust in them. The entity with <em>control authority</em> takes action through operations that affect the</p><ul><li>creation (inception)</li><li>updating</li><li>rotation</li><li>revocation</li><li>deletion</li><li>and delegation of the <strong>authentication factors and their relation to the identifier</strong>.</li></ul><h4>Source of truth</h4><p>How these events are ordered and their dependence on previous operations is important. The record of these operations is the source of truth for the identity system.</p><h4>Change control authority</h4><p>In the 2022 implementation of <a href=\"keripy\">KeriPy</a> two <a href=\"rotation-event\">rotations</a> were required to <em>change</em> control authority.In new rotation rules, you can rotate to new keys that aren&#39;t in the prior next key <a href=\"digest\">digests</a>. You just need to reach the appropriate thresholds of <em>prior-next-threshold</em> and <em>current-signing-threshold</em>. So you now only need one rotation to change control authority.<br><strong>Note</strong>: This change was the forcing function to require <a href=\"dual-indexed-codes\">dual indexed codes</a> in CESR.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "controller",
    "url": "https://kerisse.org",
    "anchor": "controller",
    "definition": "<h1>controller</h1><h4>Definition</h4><p>A controller is a controlling entity (person, organization, or autonomous software) of an identifier. For an <a href=\"autonomic-identifier\">autonomic identifier (AID)</a>, a controlling entity has the capability to make changes to the <a href=\"key-event-log\">key event log (KEL)</a> of the AID. This capability is typically asserted by the control of a set of cryptographic keys used by software acting on behalf of the controller, though it might also be asserted via other mechanisms.</p><p>At any point in time, an identifier has at least one but may have more than one controlling entity. This set of controlling entities constitutes the controller. Without loss of generality, when the context is unambiguous, the term controller may refer either to the whole set or a member of the set of controlling entities.</p><p>All <a href=\"key-event\">key events</a> on the identifier must include a signature from the sole controlling entity when there is only one controlling entity or at least one signature from one of the controlling entities when there is more than one. Typically, when there is more than one controlling entity, control is established via signatures from all or a subset of controlling entities. This is called <a href=\"multisig\">multi-signature (multi-sig)</a>. In a threshold multi-sig scheme, the control authority is split among the controlling entities, where each is assigned a weight. In this case, the control authority over the identifier is established via signatures from a subset of controlling entities whose combined weights exceed an agreed threshold. These thresholded multiple signatures may be expressed as a single collective threshold signature when a collective signing scheme is used.</p><p>The control authority over an identifier can also be divided into signing authority and rotation authority. The controller of the identifier may grant their authority to other entities. For example, in <a href=\"custodial-rotation\">custodial rotation</a>, the controller grants a designated custodial agent the signing authority while retaining their rotation authority. In the case of a <a href=\"delegated-identifier\">delegated identifier</a>, the delegated identifier is granted some degree of control authority from its delegating identifier.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "cooperative delegation",
    "url": "https://kerisse.org",
    "anchor": "cooperative-delegation",
    "definition": "<h1>cooperative delegation</h1><h4>Definition</h4><p>The way KERI addresses the <a href=\"security-cost-performance-architecture-trade-off\">security-cost-performance architecture trade-off</a> is via <a href=\"delegation\">delegation</a> of identifier prefixes. Delegation includes a delegator and a delegate. For this reason we may call this a cooperative delegation. This is a somewhat <strong>novel form of delegation</strong>. A major advantage of cooperative delegation is the delegator’s key management protects the delegate’s via recovery by the delegator. With cooperative delegation, any exploiter that compromises only the delegate’s authoritative keys may not capture control authority of the delegate. Any exploit of the delegate only is recoverable by the delegator. </p><p>Source <a href=\"https://github.com/SmithSamuelM/Papers/blob/master/whitepapers/IdentifierTheory_web.pdf\">Universal Identifier Theory</a> by Samuel Smith</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "coroutines",
    "url": "https://kerisse.org",
    "anchor": "coroutines",
    "definition": "<h1>coroutines</h1><h4>Definition</h4><p>Computer programs that can be suspended and resumed at will.</p><h4>What is a coroutine exactly?</h4><p>Coroutines are <a href=\"https://en.wikipedia.org/wiki/Computer_program\">computer program</a> components that generalize <a href=\"https://en.wikipedia.org/wiki/Subroutine\">subroutines</a> for <a href=\"https://en.wikipedia.org/wiki/Non-preemptive_multitasking\">non-preemptive multitasking</a>, by allowing execution to be suspended and resumed. Coroutines are well-suited for implementing familiar program components such as <a href=\"https://en.wikipedia.org/wiki/Cooperative_multitasking\">cooperative tasks</a>, <a href=\"https://en.wikipedia.org/wiki/Exception_handling\">exceptions</a>, <a href=\"https://en.wikipedia.org/wiki/Event_loop\">event loops</a>, <a href=\"https://en.wikipedia.org/wiki/Iterator\">iterators</a>, <a href=\"https://en.wikipedia.org/wiki/Lazy_evaluation\">infinite lists</a> and <a href=\"https://en.wikipedia.org/wiki/Pipeline_(software)\">pipes</a>.<br>More on source <a href=\"https://en.wikipedia.org/wiki/Coroutine\">Wikipedia</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "correlation",
    "url": "https://kerisse.org",
    "anchor": "correlation",
    "definition": "<h1>correlation</h1><h4>Definition</h4><p>In our scope this is an identifier used to indicate that external parties have observed how wallet contents are related. </p><h4>Example</h4><p>When a public key is reused, it conveys that some common entity is controlling both identifiers. Tracking correlation allows for software to warn when some new information might be about to be exposed, for example: &quot;Looks like you are about to send cryptocurrency, from an account you frequently use to a new account you just created.&quot;</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "count code",
    "url": "https://kerisse.org",
    "anchor": "count-code",
    "definition": "<h1>count code</h1><h4>See</h4><p><a href=\"group-framing-code\">Group framing code</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "credential",
    "url": "https://kerisse.org",
    "anchor": "credential",
    "definition": "<h1>credential</h1><h4>Definition</h4><p>Evidence of authority, status, rights, entitlement to privileges, or the like.<br>(<a href=\"https://github.com/trustoverip/tswg-acdc-specification/blob/main/draft-ssmith-acdc.md#introduction\">source</a>)<br>A credential has its current state and a history, which is captured in a doc or a graph.</p><h4>ACDC specific</h4><p>The credential is the whole graph.<br>The pointers in the doc that contain the whole graph are universally globally distributable references via the SAIDs. Whereas in other credential systems pointers are only local in a credential doc.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "CRUD",
    "url": "https://kerisse.org",
    "anchor": "CRUD",
    "definition": "<h1>CRUD</h1><h4>Definition</h4><p>Is acronym for the traditional <em>client-server</em> database update policy is CRUD (<strong>Create, Read, Update, Delete</strong>). </p><p>CRUD as opposed to <a href=\"RUN\">RUN</a> which is the acronym for the new peer-to-peer end-verifiable monotonic update policy.</p><h4>OOBI related</h4><p>We <a href=\"run-off-the-crud\">RUN off the CRUD</a>, which means that because the source of truth for each data item is a decentralized controller Peer, a given database hosted by any Peer does not create records in the traditional sense of a server creating records for a client. </p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "crypto libraries",
    "url": "https://kerisse.org",
    "anchor": "crypto-libraries",
    "definition": "<h1>crypto libraries</h1><h4>Definition</h4><p>Cryptography libraries deal with cryptography algorithms and have API function calls to each of the supported features. </p><h4>Selection criteria</h4><p>Criteria to chose one or the other:</p><ul><li>Open Source (most of them are)</li><li>Compliant with standards</li><li>Key operations include key generation algorithms, key exchange agreements and public key cryptography standards.</li><li>Supported cryptographic hash functions</li><li>Implementations of message authentication code (MAC) algorithms</li><li>Implementations of block ciphers</li><li>Hardware-assisted support</li><li>Code size and code to comment ratio</li><li>Composable derivation codes</li></ul><p>See a <a href=\"https://en.wikipedia.org/wiki/Comparison_of_cryptography_libraries\">comparison here</a> at Wikipedia.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "cryptocurrency",
    "url": "https://kerisse.org",
    "anchor": "cryptocurrency",
    "definition": "<h1>cryptocurrency</h1><h4>Definition</h4><p>A digital asset designed to work as a medium of exchange wherein individual coin ownership records are stored in a digital ledger or computerized database using strong cryptography to secure transaction record entries, to control the creation of additional digital coin records.<br>See <a href=\"https://en.wikipedia.org/wiki/Cryptocurrency\">more</a> on source Wikipedia.</p><h4>KERI related</h4><p>KERI doesn&#39;t need total global ordering, whereas cryptocurrencies do need this. As a consequence has been designed, without the need of a consensus-based distributed ledger (blockchain).</p><p>KERI doesn&#39;t provide for a currency system, however a KERI-based system can be easily extended with a money - or token system.</p><p>See also Non Fungible Tokens.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "cryptographic commitment scheme",
    "url": "https://kerisse.org",
    "anchor": "cryptographic-commitment-scheme",
    "definition": "<h1>cryptographic commitment scheme</h1><h4>Definition</h4><p>is a cryptographic primitive that allows one to commit to a chosen value (or chosen statement) while keeping it hidden to others, with the ability to reveal the committed value later. </p><p>Commitment schemes are designed so that a party cannot change the value or statement after they have committed to it: that is, commitment schemes are <em>binding</em>.<br>More on <a href=\"https://en.wikipedia.org/wiki/Commitment_scheme\">wikipedia</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "cryptographic primitive",
    "url": "https://kerisse.org",
    "anchor": "cryptographic-primitive",
    "definition": "<h1>cryptographic primitive</h1><h4>Definition</h4><p>Cryptographic primitives are well-established, low-level <a href=\"https://en.wikipedia.org/wiki/Cryptography\">cryptographic</a> algorithms that are frequently used to build <a href=\"https://en.wikipedia.org/wiki/Cryptographic_protocol\">cryptographic protocols</a> for <a href=\"https://en.wikipedia.org/wiki/Computer_security\">computer security</a> systems. These routines include, but are not limited to, <a href=\"https://en.wikipedia.org/wiki/One-way_hash_function\">one-way hash functions</a> and <a href=\"https://en.wikipedia.org/wiki/Cipher\">encryption functions</a>.<br>More on source <a href=\"https://en.wikipedia.org/wiki/Cryptographic_primitive\">Wikipedia-page</a></p><h4>KERI related</h4><p>In KERI and ACDC it a serialization of a unitary value associated with a cryptographic operation including but not limited to a digest (hash), a salt, a seed, a private key, a public key, or a signature. All primitives in KERI MUST be expressed in <a href=\"composable-event-streaming-representation\">CESR</a>.</p><h4>See also</h4><p>The more general term <a href=\"primitive\">primitive</a>.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "cryptographic strength",
    "url": "https://kerisse.org",
    "anchor": "cryptographic-strength",
    "definition": "<h1>cryptographic strength</h1><h4>Definition</h4><p>The term &quot;cryptographically strong&quot; is often used to describe an encryption algorithm, and implies, in comparison to some other algorithm (which is thus cryptographically weak), greater resistance to attack. But it can also be used to describe hashing and unique identifier and filename creation algorithms.<br>More on <a href=\"https://en.wikipedia.org/wiki/Strong_cryptography\">Wikipedia</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "cryptonym",
    "url": "https://kerisse.org",
    "anchor": "cryptonym",
    "definition": "<h1>cryptonym</h1><h4>Definition</h4><p>A code name, call sign or cryptonym is a <a href=\"https://en.wikipedia.org/wiki/Code_word_(figure_of_speech)\">code word</a> or name used, sometimes clandestinely, to refer to another name, word, project, or person.<br>Source <a href=\"https://en.wikipedia.org/wiki/Code_name\">Wikipedia</a></p><h4>KERI related</h4><p>A cryptographic pseudonymous identifier represented by a string of characters derived from a random or pseudo-random secret seed or salt via a one-way cryptographic function with a sufficiently high degree of cryptographic strength (e.g. 128 bits, see appendix on <a href=\"cryptographic-strength\">cryptographic strength</a>. A cryptonym is a type of primitive.<br>Due the <a href=\"entropy\">entropy</a> in its derivation, a cryptonym is a universally unique identifier and only the <a href=\"controller\">controller</a> of the secret <a href=\"salt\">salt</a> or <a href=\"seed\">seed</a> from which the cryptonym is derived may prove control over the cryptonym. Therefore the derivation function MUST be associated with the cryptonym and MAY be encoded as part of the cryptonym itself.\\<br>Source <a href=\"https://github.com/WebOfTrust/ietf-keri/blob/main/draft-ssmith-keri.md\">Smith, ietf-keri draft</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "CSPRNG",
    "url": "https://kerisse.org",
    "anchor": "CSPRNG",
    "definition": "<h1>CSPRNG</h1><h4>Definition</h4><p>means &quot;Cryptographically Secure Pseudorandom Number Generator&quot; which means that a sequence of numbers (bits, bytes...) that is produced from an algorithm which is deterministic (the sequence is generated from some unknown internal state), hence pseudorandom, is also cryptographically secure, or not. </p><p>It is cryptographically secure if nobody can <em>reliably distinguish</em> the output from true randomness, even if the PRNG algorithm is perfectly known (but not its internal state). A non-cryptographically secure PRNG would fool basic statistical tests but can be distinguished from true randomness by an intelligent attacker.<br>(Source: <a href=\"https://crypto.stackexchange.com/questions/12436/what-is-the-difference-between-csprng-and-prng\">https://crypto.stackexchange.com/questions/12436/what-is-the-difference-between-csprng-and-prng</a>)</p><h4>See also</h4><p><a href=\"PRNG\">PRNG</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "CT",
    "url": "https://kerisse.org",
    "anchor": "CT",
    "definition": "<h1>CT</h1><h4>See</h4><p><a href=\"certificate-transparency\">Certificate transparency</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "custodial agent",
    "url": "https://kerisse.org",
    "anchor": "custodial-agent",
    "definition": "<h1>custodial agent</h1><h4>Definition</h4><p>An <a href=\"agent\">agent</a> owned by an individual who has granted <a href=\"signing-authority\">signing authority</a> to a custodian who is usually also the host of the running agent software. Using <a href=\"partial-rotation\">partial rotation</a> to facilitate custodial key management the owner of the identifier retains <a href=\"rotation-authority\">rotational authority</a> and thus the ability to &quot;fire&quot; the custodian at any time without requiring the cooperation of the custodian.</p><h4>Importance</h4><p>Custodial Agents are important for individuals who may not be comfortable managing their own <a href=\"digital-signature\">signing keys</a> and agent software but still want to participate in a decentralized identity ecosystem and they enable a software as a service business model without centralizing control on the service provider.<br>(Source: Philip Feairheller)</p><h4>Key functionality</h4><p>Since ninety-nine percent of people in the world might not feel comfortable taking responsibility for their own practical <a href=\"key-management\">key management</a> but still want to be stay in control over their assets and be able to hire and fire service providers, this functionality is considered a key feature for KERI and ACDC.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "custodial rotation",
    "url": "https://kerisse.org",
    "anchor": "custodial-rotation",
    "definition": "<h1>custodial rotation</h1><h4>Definition</h4><p>Rotation based on control authority that is split between two key sets. The first for signing authority and the second (pre-roateted) for rotation authority the associated thresholds and key list can be structured in such a way that a designated custodial agent can hold signing authority while the original controller can hold exclusive rotation authority.</p><p><a href=\"partial-rotation\">Partial pre-rotation</a> supports the important use case that of custodial key rotation to authorize a <a href=\"custodial-agent\">custodial agent</a>.<br>Paraphrased by @henkvancann on the bases of the <a href=\"https://github.com/WebOfTrust/ietf-keri/blob/main/draft-ssmith-keri.md\">IETF-KERI draft 2022</a> by Samual Smith.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "DAG",
    "url": "https://kerisse.org",
    "anchor": "DAG",
    "definition": "<h1>DAG</h1><h4>See</h4><p><a href=\"directed-acyclic-graph\">Directed acyclic graph</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "DAR",
    "url": "https://kerisse.org",
    "anchor": "DAR",
    "definition": "<h1>DAR</h1><h4>See</h4><p><a href=\"designated-authorized-representative\">Designated Authorized Representatives</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "data anchor",
    "url": "https://kerisse.org",
    "anchor": "data-anchor",
    "definition": "<h1>data anchor</h1><h4>Definition</h4><p>Data anchors are <a href=\"digest\">digests</a> of digital data, that uniquely identify this data. The digest is the anchor and can be used to identify - and point to the data at the same time. </p><h4>Anchoring data</h4><p>The act of creating the digest of arbitrary data and then hook (or reference) the digest to (in) another data structure is called &#39;anchoring data&#39;.</p><h4>KERI related</h4><p><a href=\"self-addressing-data\">SADs</a> are a type of data anchors.</p><h4>Beware</h4><p><a href=\"https://en.wikipedia.org/wiki/Hyperlink#Anchor_links\">Link anchors</a> are a totally different concepts.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "dead drop",
    "url": "https://kerisse.org",
    "anchor": "dead-drop",
    "definition": "<h1>dead drop</h1><h4>Definition</h4><p>| TBW | the presenter controls the disclosure so you can&#39;t re-identify the data</p><p>Tech meet KERI <a href=\"https://hackmd.io/-soUScAqQEaSw5MJ71899w#2023-06-27\">recording</a> from minute 55, date June 29 2023.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "decentralized identifier",
    "url": "https://kerisse.org",
    "anchor": "decentralized-identifier",
    "definition": "<h1>decentralized identifier</h1><h4>Definition</h4><p>Decentralized identifiers (DID) are a new type of identifier that enables verifiable, decentralized digital identity. A <em>DID</em> refers to any subject (e.g., a person, organization, thing, data model, abstract entity, etc.) as determined by the controller of the DID.<br><a href=\"https://www.w3.org/TR/did-core/\">Source</a> W3C.org.</p><h4>Relation to federated identifiers</h4><p>In contrast to typical, federated identifiers, <em>DIDs</em> have been designed so that they may be <strong>decoupled from centralized registries</strong>, identity providers, and certificate authorities. Specifically, while other parties might be used to help enable the discovery of information related to a DID, the design enables the controller of a DID to prove control over it without requiring permission from any other party.<br><a href=\"https://www.w3.org/TR/did-core/\">Source</a> W3C.org.</p><h4>Technical presence</h4><p><em>DIDs</em> are <em>URIs</em> that associate a <em>DID subject</em> with a <em>DID document</em> allowing trustable interactions associated with that subject.<br><a href=\"https://www.w3.org/TR/did-core/\">Source</a> W3C.org.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "decentralized identity",
    "url": "https://kerisse.org",
    "anchor": "decentralized-identity",
    "definition": "<h1>decentralized identity</h1><h4>Definition</h4><p>is a technology that uses cryptography to allow individuals to create and control their own unique identifiers. They can use these identifiers to obtain <code>Verifiable Credentials</code> from trusted organizations and, subsequently, present elements of these credentials as proof of claims about themselves. In this model, the individual takes ownership of their own identity and need not cede control to centralized service providers or companies.</p><p><code>KERI</code>s definition of decentralization (centralization) is about <em>control</em> not <em>spatial distribution</em>. In our definition <em>decentralized</em> is not necessarily the same as <em>distributed</em>. By distributed we mean that activity happens at more than one site. Thus decentralization is about <em>control</em> and distribution is about <em>place</em>. To elaborate, when we refer to decentralized infrastructure we mean infrastructure under decentralized (centralized) control no matter its spatial distribution. Thus <em>decentralized infrastructure</em> is infrastructure sourced or controlled by more than one <code>entity</code>.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "decentralized key management infrastructure",
    "url": "https://kerisse.org",
    "anchor": "decentralized-key-management-infrastructure",
    "definition": "<h1>decentralized key management infrastructure</h1><h4>Definition</h4><p>Decentralized Public Key Infrastructure (<a href=\"https://ldapwiki.com/wiki/DPKI\">DPKI</a> or <a href=\"https://ldapwiki.com/wiki/Decentralized%20Key%20Management%20System\">Decentralized Key Management System</a> (<a href=\"https://ldapwiki.com/wiki/DKMS\">DKMS</a>) goal is to ensure that no single <a href=\"https://ldapwiki.com/wiki/Third-party\">third-party</a> can compromise the <a href=\"https://ldapwiki.com/wiki/Integrity\">integrity</a> and <a href=\"https://ldapwiki.com/wiki/Security\">security</a> of the system as as whole.<br><a href=\"https://ldapwiki.com/wiki/Decentralized%20Public%20Key%20Infrastructure\">Source</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "DEL",
    "url": "https://kerisse.org",
    "anchor": "DEL",
    "definition": "<h1>DEL</h1><h4>See</h4><p><a href=\"duplicitous-event-log\">Duplicitous event log</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "delegated identifier",
    "url": "https://kerisse.org",
    "anchor": "delegated-identifier",
    "definition": "<h1>delegated identifier</h1><h4>Definition</h4><p>Matches the act of <a href=\"delegation\">delegation</a> with the appropriate digital twin. Consequently when applied recursively, delegation may be used to compose arbitrarily complex trees of hierarchical (delegative) key management event streams. This is a most powerful capability that may provide an essential building block for a generic universal decentralized key management infrastructure (DKMI) that is also compatible with the demand of generic event streaming applications.</p><p>More in the <a href=\"https://github.com/SmithSamuelM/Papers/blob/master/whitepapers/KERI_WP_2.x.web.pdf\">whitepaper</a></p><h4>More KERI context</h4><p>The KERI design approach is to build composable primitives instead of custom functionality that is so typical of other DKMI approaches:</p><ul><li><a href=\"transferable-identifier\">transferable identifiers</a></li><li><a href=\"non-transferable-identifier\">non-transferable identifiers</a></li><li>delegated identifiers</li></ul>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "delegation",
    "url": "https://kerisse.org",
    "anchor": "delegation",
    "definition": "<h1>delegation</h1><h4>Definition</h4><p>A person or group of persons officially elected or appointed to represent another or others.</p><h4>Assign tasks but stay in control</h4><p>Delegation can be defined as “the act of empowering to act for another”. With this bestowed power, a person, usually a subordinate, is able to carry out specific activities (normally given by a manager or supervisor). Delegation is a management tool designed to increase the efficiency of an organization. It allows for the goals of the organization to be broken down into tasks and assigned to the team member best suited for the duty.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "derivation code",
    "url": "https://kerisse.org",
    "anchor": "derivation-code",
    "definition": "<h1>derivation code</h1><h4>Definition</h4><p>To properly extract and use the <a href=\"public-key-infrastructure\">public key</a> embedded in a <a href=\"self-certifying-identifier\">self-certifying identifier</a> we need to know the cryptographic <em>signing scheme</em> used by the <a href=\"key-pair\">key pair</a>. KERI includes this very compactly in the identifier, by replacing the pad character (a character used to fill a void to able to always end up with a fixed length public key) with a special character that encodes the derivation process. We call this the <em>derivation code</em>.</p><h5>Example</h5><blockquote><p>For example suppose that the 44 character Base-64 with trailing pad character for the public key is as follows:<code>F5pxRJP6THrUtlDdhh07hJEDKrJxkcR9m5u1xs33bhp=</code>If B is the value of the derivation code then the resultant self-contained string is as follows:<code>BF5pxRJP6THrUtlDdhh07hJEDKrJxkcR9m5u1xs33bhp</code></p></blockquote><h5>Relation with KERI</h5><p>All crypto material appears in <code>KERI</code> in a fully <a href=\"qualified\">qualified</a> representation. This includes a derivation code prepended to the crypto-material.<img src=\"https://github.com/WebOfTrust/keri/blob/main/images/derivation-code.png\" alt=\"\"></p><h6>Example KERI derivation codes</h6><p><img src=\"https://raw.githubusercontent.com/WebOfTrust/WOT-terms/main/static/img/derivation-code.png\" alt=\"example derivation code in KERI\"></p><h4>Beware</h4><p><a href=\"https://en.wikipedia.org/wiki/Key_derivation_function\">Key derivation functions</a> are not related to the pre-pended derivation codes used in KERI.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "designated aliases",
    "url": "https://kerisse.org",
    "anchor": "designated-aliases",
    "definition": "<h1>designated aliases</h1><h4>Definition</h4><p>An AID controller can designate aliases which are AID controlled identifiers such as a did:keri, did:webs, etc. The <a href=\"AID\">AID</a> controller issues a designated aliases attestation (no issuee) that lists the identifiers and manages the status through a registry anchored to their KEL. See the <a href=\"https://weboftrust.github.io/schema/desig-aliases\">designated aliases docs</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "designated authorized representative",
    "url": "https://kerisse.org",
    "anchor": "designated-authorized-representative",
    "definition": "<h1>designated authorized representative</h1><h4>Definition</h4><p>Also &#39;DAR&#39;. These are representatives of a Legal Entity that are authorized by the Legal Entity to act officially on behalf of the Legal Entity. DARs can authorize:</p><ol><li>vLEI Issuer Qualification Program Checklists</li><li>execute the vLEI Issuer Qualification Agreement</li><li>provide designate/replace Authorized vLEI Representatives (<a href=\"authorized-vlei-representative\">AVR</a>s).</li></ol><p>Paraphrased by @henkvancann from <a href=\"https://www.gleif.org/vlei/introducing-the-vlei-ecosystem-governance-framework/2022-02-07_verifiable-lei-vlei-ecosystem-governance-framework-glossary-draft-publication_v0.9-draft.pdf\">source</a> Draft vLEI Ecosystem Governance Framework Glossary.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "DHT",
    "url": "https://kerisse.org",
    "anchor": "DHT",
    "definition": "<h1>DHT</h1><h4>See</h4><p><a href=\"distributed-hash-table\">Distributed hash table</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "DID",
    "url": "https://kerisse.org",
    "anchor": "DID",
    "definition": "<h1>DID</h1><h4>See</h4><p><a href=\"https://github.com/trustoverip/acdc/wiki/decentralized-identifier\">Decentralized Identifier</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "diger",
    "url": "https://kerisse.org",
    "anchor": "diger",
    "definition": "<h1>diger</h1><h4>Definition</h4><p>A <em>primitive</em> that represents a <a href=\"digest\">digest</a>. It has the ability to <a href=\"verify\">verify</a> that an input hashes to its raw value.<br><a href=\"https://github.com/WebOfTrust/cesride#terminology\">Source</a> by Jason Colburne</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "digest",
    "url": "https://kerisse.org",
    "anchor": "digest",
    "definition": "<h1>digest</h1><h4>Definition</h4><p>verifiable cryptographic commitment. It&#39;s a collision resistant hash of content.</p><p>From Wikipedia (<a href=\"https://en.wikipedia.org/wiki/Cryptographic_hash_function\">Source</a>):</p><p>A <strong>digest</strong> is a cryptographic hash function (CHF) is a mathematical <a href=\"https://en.wikipedia.org/wiki/Algorithm\">algorithm</a> that <a href=\"https://en.wikipedia.org/wiki/Map_(mathematics)\">maps</a> data of an arbitrary size (often called the &quot;message&quot;) to a <a href=\"https://en.wikipedia.org/wiki/Bit_array\">bit array</a> of a fixed size (the &quot;<a href=\"https://en.wikipedia.org/wiki/Hash_value\">hash value</a>&quot;, &quot;hash&quot;, or &quot;message digest&quot;). It is a <a href=\"https://en.wikipedia.org/wiki/One-way_function\">one-way function</a>, that is, a function for which it is practically infeasible to invert or reverse the computation.<a href=\"https://en.wikipedia.org/wiki/Message_digest#cite_note-MrThfd-1\">[1]</a></p><h4>Digest and ACDCs</h4><p>An important property of high-strength cryptographic digests is that a verifiable cryptographic commitment (such as a digital signature) to the digest of some data is equivalent to a commitment to the data itself. <a href=\"authentic-chained-data-container\">Authentic Chained Data Containers (ACDCs)</a> leverage this property to enable compact chains of ACDCs that anchor data via digests. The data contained in an ACDC may therefore be merely its equivalent anchoring digest. The anchored data is thereby equivalently authenticated or authorized by the chain of ACDCs.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "digital signature",
    "url": "https://kerisse.org",
    "anchor": "digital-signature",
    "definition": "<h1>digital signature</h1><h4>Definition</h4><p>A <em>digital</em> signature is a mathematical scheme for verifying the authenticity of digital messages or documents. A valid digital signature, where the prerequisites are satisfied, gives a recipient very strong reason to believe that the message was created by a known sender (authentication), and that the message was not altered in transit (integrity).</p><h4>Electronic signatures</h4><p>There are <code>digital signatures</code> and <a href=\"electronic-signature\">Electronic signatures</a>, the latter are quite different in purpose and practical use.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "dip",
    "url": "https://kerisse.org",
    "anchor": "dip",
    "definition": "<h1>dip</h1><h4>Definition</h4><p>dip = delcept, delegated inception</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "direct mode",
    "url": "https://kerisse.org",
    "anchor": "direct-mode",
    "definition": "<h1>direct mode</h1><h4>Definition</h4><p>Two primary trust modalities motivated the KERI design, One of these is the <em>direct</em> (one-to-one) mode, in which the identity controller establishes control via verified signatures of the controlling key-pair. The direct mode doesn&#39;t use witnesses nor <a href=\"key-event-receipt-log\">KERL</a>s, but has direct (albeit intermittent) network contact with the validator.</p><h4>Operational mode</h4><p>To protect a <a href=\"validator\">validator</a> when engaging with some other controller’s identifier, be it <a href=\"verification\">verification</a>, control authority establishment, or <a href=\"duplicity\">duplicity</a> detection, are based on an ability to <em>replay</em> the sequence of key events (key event history or log) of that identifier. There are two main operational modes for providing replay capability that are distinguished by the degree of availability of the identifier’s controller when creating and promulgating the key events.<br>With direct mode, the promulgation of events to a validator does not happen unless the controller is attached to the network and able to communicate directly with a validator.<br>Direct mode assumes that the controller may have intermittent network availability, it also assumes that these mechanism may not be trusted in any persistent sense to promulgate key events. Nonetheless, direct mode is important as it is compatible with the use of mobile internet devices such as cell phones. A single direct mode identifier may be re-used in multiple one-to-one relationships as part of a select group.<br>More in <a href=\"https://github.com/SmithSamuelM/Papers/blob/master/whitepapers/KERI_WP_2.x.web.pdf\">Source: chapter Protocol Operational Modes in KERI white paper</a></p><h4>Security concerns</h4><p>The protocol may operate in two basic modes, called direct and indirect. The availability and consistency attack surfaces are different for the two modes and hence the mitigation properties of the protocol are likewise mode specific.</p><h4>Also see</h4><p><a href=\"indirect-mode\">Indirect mode</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "directed acyclic graph",
    "url": "https://kerisse.org",
    "anchor": "directed-acyclic-graph",
    "definition": "<h1>directed acyclic graph</h1><h4>Definition</h4><p>From Wikipedia (<a href=\"https://en.wikipedia.org/wiki/Directed_acyclic_graph\">source</a>):</p><p>In <a href=\"https://en.wikipedia.org/wiki/Mathematics\">mathematics</a>, particularly <a href=\"https://en.wikipedia.org/wiki/Graph_theory\">graph theory</a>, and <a href=\"https://en.wikipedia.org/wiki/Computer_science\">computer science</a>, a directed acyclic graph (DAG <a href=\"https://en.wikipedia.org/wiki/Help:IPA/English\">/ˈdæɡ/</a> (<a href=\"https://upload.wikimedia.org/wikipedia/commons/5/5a/En-us-DAG.ogg\">listen</a>)) is a <a href=\"https://en.wikipedia.org/wiki/Directed_graph\">directed graph</a> with no <a href=\"https://en.wikipedia.org/wiki/Cycle_graph#Directed_cycle_graph\">directed cycles</a>. That is, it consists of <a href=\"https://en.wikipedia.org/wiki/Vertex_(graph_theory)\">vertices</a> and <a href=\"https://en.wikipedia.org/wiki/Edge_(graph_theory)\">edges</a> (also called arcs), with each edge directed from one vertex to another.</p><img src=\"https://hackmd.io/_uploads/rywIzRLo5.png\" width=\"219\" height=\"300\" alt=\"A directed acyclic graph (DAG)\"/><h4>Why a directed acyclic graph (DAG)</h4><p>Following directions in a DAG will never form a closed loop. Steps through a DAG are finite. That&#39;s the main reason to choose for a DAG.</p><h4>Unique properties</h4><p>From Wikipedia (<a href=\"https://en.wikipedia.org/wiki/Directed_acyclic_graph\">source</a>):</p><p>A directed graph is a DAG if and only if it can be <a href=\"https://en.wikipedia.org/wiki/Topological_ordering\">topologically ordered</a>, by arranging the vertices as a linear ordering that is consistent with all edge directions. </p><h4>Applications</h4><p>From Wikipedia (<a href=\"https://en.wikipedia.org/wiki/Directed_acyclic_graph\">source</a>):</p><p>DAGs have numerous scientific and computational applications, ranging from biology (evolution, family trees, epidemiology) to information science (citation networks) to computation (scheduling).</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "disclosee",
    "url": "https://kerisse.org",
    "anchor": "disclosee",
    "definition": "<h1>disclosee</h1><h4>Definition</h4><p>an ACDC in a disclosure is disclosed to the Disclosee</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "discloser",
    "url": "https://kerisse.org",
    "anchor": "discloser",
    "definition": "<h1>discloser</h1><h4>Definition</h4><p>An <a href=\"authentic-chained-data-container\">ACDC</a> in a disclosure is disclosed by the Discloser.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "discovery",
    "url": "https://kerisse.org",
    "anchor": "discovery",
    "definition": "<h1>discovery</h1><h4>Definition</h4><p>A mechanism that helps systems or devices find each other automatically, often used in networks to identify services or resources. In decentralized identifier systems it helps to locate and verify digital identities without relying on a central authority.</p><h4>Related but not the same</h4><p><a href=\"percolated-information-discovery\">Percolated information discovery</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "distributed hash table",
    "url": "https://kerisse.org",
    "anchor": "distributed-hash-table",
    "definition": "<h1>distributed hash table</h1><h4>Definition</h4><p>It is a distributed system that provides a lookup service similar to a hash table: key-value pairs are stored in a DHT, and any participating node can efficiently retrieve the value associated with a given key. The main advantage of a DHT is that nodes can be added or removed with minimum work around re-distributing keys. Keys are unique identifiers which map to particular values, which in turn can be anything from addresses, to documents, to arbitrary data.<br>(Source: <a href=\"https://en.wikipedia.org/wiki/Distributed_hash_table\">Wikipedia</a>)</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "DKMI",
    "url": "https://kerisse.org",
    "anchor": "DKMI",
    "definition": "<h1>DKMI</h1><h4>See</h4><p><a href=\"decentralized-key-management-infrastructure\">Decentralized key management infrastructure</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "dnd",
    "url": "https://kerisse.org",
    "anchor": "dnd",
    "definition": "<h1>dnd</h1><h4>Definition</h4><p>Do Not Delegate is a flag / attribute for a AID and this is default set to you can delegate.</p><p>| TBW |</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "domain",
    "url": "https://kerisse.org",
    "anchor": "domain",
    "definition": "<h1>domain</h1><h4>See</h4><p><a href=\"trust-domain\">Trust domain</a> and / or <a href=\"domain-name\">Domain name</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "domain name",
    "url": "https://kerisse.org",
    "anchor": "domain-name",
    "definition": "<h1>domain name</h1><h4>Definition</h4><p>A domain name is a <a href=\"https://en.wikipedia.org/wiki/String_(computer_science)\">string</a> that identifies a realm of administrative autonomy, authority or control within the <a href=\"https://en.wikipedia.org/wiki/Internet\">Internet</a>. Domain names are used in various networking contexts and for application-specific naming and addressing purposes.<br>More on <a href=\"https://en.wikipedia.org/wiki/Domain_name\">Source Wikipedia</a>.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "double spend proof",
    "url": "https://kerisse.org",
    "anchor": "double-spend-proof",
    "definition": "<h1>double spend proof</h1><h4>Definition</h4><p>Total global ordering of transaction so that value can’t be spend twice at the same time from the unit of value. Or in common language: you can&#39;t spend your money twice. </p><p>| TBW |</p><h5>KERI related</h5><p>The most important feature of a <a href=\"cryptocurrency\">cryptocurrency</a> is that it must be double spend proof. Because KERI&#39;s key event operations are idempotent they do not need to be double spend proofed, so we can greatly simplify the distributed consensus algorithm in KERI. Which makes KERI relatively more attractive for many applications including IoT applications by comparison.<br>As a result of the relaxation of double spend proofing, KERI is able to break the distributed consensus algorithm into two halves and simplify it in the process. The two halves are the <em>promulgation</em> half (by witnesses) and the <em>confirmation</em> half (by valdators).</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "DPKI",
    "url": "https://kerisse.org",
    "anchor": "DPKI",
    "definition": "<h1>DPKI</h1><h4>See</h4><p><a href=\"decentralized-key-management-infrastructure\">Decentralized key management infrastructure</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "drt",
    "url": "https://kerisse.org",
    "anchor": "drt",
    "definition": "<h1>drt</h1><h4>Definition</h4><p>drt = deltate, delegated rotation</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "dual indexed codes",
    "url": "https://kerisse.org",
    "anchor": "dual-indexed-codes",
    "definition": "<h1>dual indexed codes</h1><h4>Definition</h4><p>a context-specific coding scheme, for the common use case of thresholded multi-signature schemes in <a href=\"CESR\">CESR</a>.</p><h4>Related to CESR</h4><p>One way to compactly associated each signature with its public key is to include in the text code for that signature the index into the ordered set of public keys.A popular signature raw binary size is 64 bytes which has a pad size of 2. This gives two code characters for a compact text code. The first character is the selector and type code. The second character is the Base64 encoded integer index. </p><p>More at source <a href=\"https://github.com/WebOfTrust/ietf-cesr/blob/main/draft-ssmith-cesr.md\">Github Repo Ietf-CESR</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "dual text binary encoding format",
    "url": "https://kerisse.org",
    "anchor": "dual-text-binary-encoding-format",
    "definition": "<h1>dual text binary encoding format</h1><h4>Definition</h4><p>An encoding format that allows for both text and binary encoding format, which is fully interchangeable. The <a href=\"composability\">composability</a> property enables the round trip conversion en-masse of concatenated primitives between the text domain and binary domain while maintaining the separability of individual primitives.<br>Read more in <a href=\"https://github.com/trustoverip/tswg-cesr-specification/blob/main/draft-ssmith-cesr.md\">source</a> of Samuel Smith</p><h4>Related</h4><ul><li><a href=\"CESR\">CESR</a></li><li><a href=\"composability\">composability</a></li></ul>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "duplicitous event log",
    "url": "https://kerisse.org",
    "anchor": "duplicitous-event-log",
    "definition": "<h1>duplicitous event log</h1><h4>Definition</h4><p>This is a record of inconsistent event messages produced by a given controller or witness with respect to a given <a href=\"key-event-receipt-log\">KERL</a>. The duplicitous events are indexed to the corresponding event in a KERL. A duplicitous event is represented by a set of two or more provably mutually <a href=\"inconsistency\">inconsistent</a> event messages with respect to a KERL. Each <a href=\"juror\">juror</a> keeps a duplicitous event log (DEL) for each <a href=\"controller\">controller</a> and all designated witness with respect to a KERL. Any <a href=\"validator\">validator</a> may confirm <a href=\"duplicity\">duplicity</a> by examining a DEL.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "duplicity",
    "url": "https://kerisse.org",
    "anchor": "duplicity",
    "definition": "<h1>duplicity</h1><h4>Duplicity</h4><p><em>Duplicity</em> is used to describe external inconsistency. Publication of two or more versions of a KEL, each of which is internally consistent is duplicity. Given that signatures are non-repudiable any duplicity is detectable and provable given possession of any two mutually inconsistent versions of a KEL. In KERI <a href=\"inconsistency\">consistency</a> is is used to described data that is internally consistent and cryptographically verifiably so.</p><h4>KERI related</h4><p>Duplicity means the existence of <strong>more than one version</strong> of a verifiable KEL for a given AID. Because every event in a KEL must be signed with non-repudiable signatures any inconsistency between any two instances of the KEL for a given AID is provable evidence of duplicity on the part of the signers with respect to either or both the key-state of that AID and/or any anchored data at a given key-state. A shorter KEL that does not differ in any of its events with respect to another but longer KEL is not duplicitous but merely incomplete. To clarify, duplicity evident means that duplicity is provable via the presentation of a set of two or more mutually inconsistent but independently verifiable instances of a KEL.Source <a href=\"https://github.com/WebOfTrust/ietf-keri/blob/main/draft-ssmith-keri.md#basic-terminology\">Sam Smith</a></p><h4>Outside world</h4><p>In common language &#39;duplicity&#39; has a slightly different connotation: &#39;two-facedness&#39;, &#39;dishonesty&#39;, &#39;deceitfulness&#39;, &#39;deviousness,&#39;two-facedness&#39;, &#39;falseness&#39;.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "duplicity detection",
    "url": "https://kerisse.org",
    "anchor": "duplicity-detection",
    "definition": "<h1>duplicity detection</h1><h4>Definition</h4><p>A mechanism to detect <a href=\"duplicity\">duplicity</a> in cryptographically secured event logs.</p><h4>KERI related</h4><p>Duplicity detection, which protects, <em>not against an external attacker</em>, but against a malicious <a href=\"controller\">controller</a> does require access to <a href=\"watcher\">watchers</a> that are also recording duplicitous events.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "E2E",
    "url": "https://kerisse.org",
    "anchor": "E2E",
    "definition": "<h1>E2E</h1><h4>See</h4><p><a href=\"end-to-end\">End-to-end</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "eclipse attack",
    "url": "https://kerisse.org",
    "anchor": "eclipse-attack",
    "definition": "<h1>eclipse attack</h1><h4>Definition</h4><p>An eclipse attack is a <a href=\"peer-to-peer\">P2P</a> network-based attack. Eclipse attack can only be performed on nodes that accept incoming connections from other nodes, and not all nodes accept incoming connections.</p><p>In a bitcoin network, by default, there are a maximum of 117 incoming TCP connections and 8 outgoing TCP connections.<br><a href=\"https://www.geeksforgeeks.org/what-is-an-eclipse-attack/\">Source</a></p><h4>KERI related</h4><p>The only attack on KERI possible is an eclipse attack, so the larger your watcher network reach is the better your protection from this type of attack. The only limitation is a resource constraint.<br><a href=\"https://hackmd.io/-soUScAqQEaSw5MJ71899w?view#2022-09-06\">Source Samuel Smith / Phil Feairheller</a></p><h4>Working of Eclipse Attack</h4><p>Eclipse attacks are possible because nodes within the network are unable to connect with all other nodes and can connect with a limited number of neighboring nodes. This limitation might make it seem convenient for attackers to isolate a node from the rest of the network, but it is not an easy task.<br>More at <a href=\"https://www.geeksforgeeks.org/what-is-an-eclipse-attack/\">Source GeeksforGeeks</a></p><img src=\"https://hackmd.io/_uploads/B1uNi0Egi.png\" alt=\"working of an eclipse attack\" width=\"300\" />"
  },
  {
    "organisation": "WebOfTrust",
    "term": "ECR",
    "url": "https://kerisse.org",
    "anchor": "ECR",
    "definition": "<h1>ECR</h1><h4>See</h4><p><a href=\"engagement-context-role\">Engagement context role</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "electronic signature",
    "url": "https://kerisse.org",
    "anchor": "electronic-signature",
    "definition": "<h1>electronic signature</h1><h4>Definition</h4><p>An electronic signature, or e-signature, refers to data in electronic form, which is logically associated with other data in electronic form and which is used by the signatory to sign. This type of signature has the same legal standing as a handwritten signature as long as it adheres to the requirements of the specific regulation under which it was created (e.g., eIDAS in the European Union, NIST-DSS in the USA or ZertES in Switzerland).</p><h4>Digital signature implementation of e-signatures</h4><p><em>Electronic</em> signatures are a legal concept <em>distinct</em> from <strong><a href=\"digital-signature\">digital signatures</a>, a cryptographic mechanism</strong> often used to implement electronic signatures. While an electronic signature can be as simple as a name entered in an electronic document, digital signatures are increasingly used in e-commerce and in regulatory filings to implement electronic signatures in a cryptographically protected way. </p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "encrypt sender sign receiver",
    "url": "https://kerisse.org",
    "anchor": "encrypt-sender-sign-receiver",
    "definition": "<h1>encrypt sender sign receiver</h1><h4>Definition</h4><p>An authenticated encryption approach, using <a href=\"PKI\">PKI</a>. It covers <a href=\"authenticity\">authenticity</a> and <a href=\"confidentiality\">confidentiality</a>.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "end role",
    "url": "https://kerisse.org",
    "anchor": "end-role",
    "definition": "<h1>end role</h1><h4>Definition</h4><p>An end role is an authorization for one <a href=\"AID\">AID</a> to serve in a role for another <a href=\"AID\">AID</a>.  </p><p>For example, declaring that your <a href=\"agent\">Agent</a> <a href=\"AID\">AID</a> is serving in the role of <a href=\"agent\">Agent</a> for your business AIDs.</p><p>Source: Phil Feairheller</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "end to end",
    "url": "https://kerisse.org",
    "anchor": "end-to-end",
    "definition": "<h1>end to end</h1><h4>Definition</h4><p>Inter-host communication and data flow transformations, considered in motion and at rest.1.\tE2E Security.  Inter-host communication must be end-to-end signed/encrypted and data must be stored signed/encrypted. Data is signed/encrypted in motion and at rest.<br>2.\tE2E Provenance.  Data flow transformations must be end-to-end provenanced using verifiable data items (verifiable data chains or VCs). Every change shall be provenanced.</p><p>Paraphrased from source <a href=\"https://github.com/SmithSamuelM/Papers/blob/master/whitepapers/IdentifierTheory_web.pdf\">Universal Identifier Theory</a> by Samuel Smith</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "end verifiable",
    "url": "https://kerisse.org",
    "anchor": "end-verifiable",
    "definition": "<h1>end verifiable</h1><h4>Definition</h4><p>When a log is <em>end verifiable</em>, it means that the log may be verified by any end user that receives a copy. No trust in intervening infrastructure is needed to verify the log and validate the content. </p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "engagement context role",
    "url": "https://kerisse.org",
    "anchor": "engagement-context-role",
    "definition": "<h1>engagement context role</h1><h4>Definition</h4><p>A person that represents the <a href=\"legal-entity\">Legal Entity</a> in a functional or in another context role and is issued an ECR <a href=\"vlei-credential\">vLEI Credential</a>.</p><h4>Issuance of credentials</h4><p>On the basis of <a href=\"legal-entity-engagement-context-role-vlei-credential-governance-framework\">Legal entity engagement context role vLEI credential governance framework</a> an ECR <a href=\"vlei-credential\">vLEI Credential</a> is <strong>issued to</strong> an engagement context role (ECR).</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "entity",
    "url": "https://kerisse.org",
    "anchor": "entity",
    "definition": "<h1>entity</h1><h4>See</h4><p><a href=\"https://trustoverip.github.io/essiflab/glossary#entity\">entity</a> in the <strong>#essiflab</strong> glossary.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "entropy",
    "url": "https://kerisse.org",
    "anchor": "entropy",
    "definition": "<h1>entropy</h1><h4>Definition</h4><p>Unpredictable information. Often used as a <em>secret</em> or as input to a <em>key</em> generation algorithm. </p><h5>More on Wikipedia</h5><p><a href=\"https://en.wikipedia.org/wiki/Entropy_(information_theory)\">Entropy</a></p><p>The term entropy is also used to describe the degree of unpredictability of a message. Entropy is then measured in bits. The degree or strength of randomness determines how difficult it would be for someone else to reproduce the same large random number. This is called <em>collision resistance</em>.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "ephemeral",
    "url": "https://kerisse.org",
    "anchor": "ephemeral",
    "definition": "<h1>ephemeral</h1><h4>Definition</h4><p>Lasting for a markedly brief time. Having a short lifespan.<br>In the context of identifiers is often referred to as identifiers for one time use; or throw-away identifiers.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "escrow",
    "url": "https://kerisse.org",
    "anchor": "escrow",
    "definition": "<h1>escrow</h1><h4>Definition</h4><p>&#39;Escrow&#39; <strong>as a noun</strong> is a (legal) arrangement in which a third party temporarily holds money or property until a particular condition has been met.</p><p>&#39;Escrow&#39; <strong>as a verb</strong>: we use it in protocol design to handle out of order events.  Store the event and wait for the other stuff to show up and then continue processing of the event. So <em>escrowing</em> is the process of storing this event. We root back to the event later. </p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "escrow state",
    "url": "https://kerisse.org",
    "anchor": "escrow-state",
    "definition": "<h1>escrow state</h1><h4>Definition</h4><p>The current state of all the temporary storage locations (what events are waiting for what other information) that KERI protocol needs to  keep track of, due to its fully asynchronous nature.</p><h4>Inner-working and motivation</h4><p>Since the KERI protocol is fully asynchronous, there is no way to guarantee that events will arrive in order to be processed successfully.  This includes things like anchoring events for transaction event logs for credentials (the TEL even could arrive before the anchoring event) and signatures arriving on a multisig event.<br>To account for this asynchronous nature, implementations need to &quot;escrow&quot; events (store them temporarily) while waiting for other events or additional signatures to show up.   The current state of all the temporary storage locations (what events are waiting for what other information) is called the &quot;escrow state&quot;.<br>Source: Philip Feairheller</p><h4>Beware</h4><p>An physical <a href=\"https://www.answers.com/Q/What_is_an_escrow_state\">Escrow State</a> that you might know from Real Estate transaction is not at all related to the one we define.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "ESSR",
    "url": "https://kerisse.org",
    "anchor": "ESSR",
    "definition": "<h1>ESSR</h1><h4>See</h4><p><a href=\"https://github.com/WebOfTrust/WOT-terms/wiki/encrypt-sender-sign-receiver\">Encrypt‐Sender‐Sign‐Receiver</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "establishment event",
    "url": "https://kerisse.org",
    "anchor": "establishment-event",
    "definition": "<h1>establishment event</h1><h4>Definition</h4><p>A key creation or rotation event that establishes or transfers control authority for an identifier. </p><p>Establishment events indicate which key pairs are authoritative (controlling) for an identifier at a given point in time.</p><p>The subset of a <a href=\"key-event-log\">key event log</a> (KEL) that are establishment events are an ordered subsequence of the full KEL.</p><p>For a non-transferable identifier this is one authoritative key pair and it never changes so there will only ever be one establishment event, the inception event.</p><p>For transferable identifiers there can be multiple establishment events which would include the initial rotation event and any subsequent rotation events.</p><p>Source <a href=\"https://github.com/WebOfTrust/ietf-keri/blob/main/draft-ssmith-keri.md#basic-terminology\">Sam Smith</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "exn",
    "url": "https://kerisse.org",
    "anchor": "exn",
    "definition": "<h1>exn</h1><h4>Definition</h4><p>exn = exchange</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "exp",
    "url": "https://kerisse.org",
    "anchor": "exp",
    "definition": "<h1>exp</h1><h4>Definition</h4><p>exp = expose, sealed data exposition</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "extensible business reporting language",
    "url": "https://kerisse.org",
    "anchor": "extensible-business-reporting-language",
    "definition": "<h1>extensible business reporting language</h1><h4>Definition</h4><p>XBRL is the open international standard for digital business reporting, managed by a global not for profit consortium, XBRL International. </p><h4>Practical</h4><p>XBRL provides a language in which reporting terms can be authoritatively defined. Those terms can then be used to uniquely represent the contents of financial statements or other kinds of compliance, performance and business reports. XBRL lets reporting information move between organisations rapidly, accurately and digitally.<br><a href=\"https://www.xbrl.org/the-standard/what/an-introduction-to-xbrl/\">Source</a></p><h4>Technical</h4><p>XBRL stands for <strong>eXtensible Business Reporting Language</strong>. It is one of a family of “XML” languages which is becoming a standard means of communicating information between businesses and on the internet.<br><a href=\"https://in.xbrl.org/about-us/what-is-xbrl/\">Source</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "FFI",
    "url": "https://kerisse.org",
    "anchor": "FFI",
    "definition": "<h1>FFI</h1><h4>See</h4><p><a href=\"foreign-function-interface\">Foreign Function Interface</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "field map",
    "url": "https://kerisse.org",
    "anchor": "field-map",
    "definition": "<h1>field map</h1><h4>Definition</h4><p>A traditional <code>key:value</code> pair renamed to avoid confusing with the cryptographic use of the term &#39;key&#39;.</p><p>To avoid confusion with the cryptographic use of the term key we instead use the term field to refer to a mapping pair and the terms <em>field label</em> and <em>field value</em> for each member of a pair. These pairs can be represented by two tuples e.g (<code>label, value</code>). We qualify this terminology when necessary by using the term <em>field map</em> to reference such a mapping.</p><h4>Nested field maps</h4><p>Field maps may be nested where a given field value is itself a reference to another field map. We call this nested set of fields a nested field map or simply a nested map for short.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "first seen",
    "url": "https://kerisse.org",
    "anchor": "first-seen",
    "definition": "<h1>first seen</h1><h4>Definition</h4><p>A &quot;First seen&quot; event in KERI refers to the first event received by validator such as a witness and that is valid and fits the available tail sequence number in the validator&#39;s KEL, and therefore is accepted into the validator&#39;s KEL. This rule has no effect on the timing of what has arrived in escrow for example; in escrow there can be garbage. Assuming a watched set of validators agree on the first-seen events and thus also agree on the KELs, the watchers of those validators will propagate only those first-seen events within microseconds.</p><h4>The rule</h4><p>From the perspective of a validator, the rule is &quot;First seen, always seen, never unseen&quot;.</p><h4>Key Compromise, Duplicity, and Recovery</h4><p>Different validators might have a different <em>first-seen</em> number for the same originating transaction event. In the case of duplicitous (inconsistent) interaction events originating from the controller (of the current signing key(s)), which might not be discovered until after a key rotation, a recovery process involving judges and jury may be triggered. More <a href=\"https://trustoverip.github.io/tswg-keri-specification/#superseding-rules-for-recovery-at-a-given-location-sn-sequence-number\">here</a>. Validators will not provide an outdated KEL or Event once an erroneous KEL has been corrected.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "foreign function interface",
    "url": "https://kerisse.org",
    "anchor": "foreign-function-interface",
    "definition": "<h1>foreign function interface</h1><h4>Definition</h4><p>Is a mechanism by which a program written in one, usually an <a href=\"https://en.wikipedia.org/wiki/Interpreted_(programming_languages)\">interpreted</a> (scripted), <a href=\"https://en.wikipedia.org/wiki/Programming_language\">programming language</a> that can call routines or make use of services written or compiled in another one.<br>More on Source: <a href=\"https://en.wikipedia.org/wiki/Foreign_function_interface\">https://en.wikipedia.org/wiki/Foreign_function_interface</a></p><h4>Relevance in CESR</h4><p>To have the output from RUST-based developed (e.g. cesride) consumed by higher level languages.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "frame code",
    "url": "https://kerisse.org",
    "anchor": "frame-code",
    "definition": "<h1>frame code</h1><h4>See</h4><p><a href=\"group-framing-code\">Group framing code</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "full disclosure",
    "url": "https://kerisse.org",
    "anchor": "full-disclosure",
    "definition": "<h1>full disclosure</h1><h4>Definition</h4><p>A disclosure of data in all its details.</p><p>When used in the context of <a href=\"selective-disclosure\">selective disclosure</a>, full disclosure means <em>detailed disclosure of the selectively disclosed attributes</em> not detailed disclosure of all selectively disclosable attributes. Whereas when used in the context of <a href=\"partial-disclosure\">partial disclosure</a>, full disclosure means <em>detailed disclosure of the <a href=\"field-map\">field map</a></em> that was so far only partially disclosed.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "fully compact",
    "url": "https://kerisse.org",
    "anchor": "fully-compact",
    "definition": "<h1>fully compact</h1><h4>definition</h4><p>The most compact form of an ACDC. This is the only signed variant of an ACDC and this signature is anchored in a transaction event log (TEL) for the ACDC.This is one valid choice for an ACDC schema.<br>This form is part of the graduated disclosure mechanism in ACDCs.</p><h4>Anchoring to the TEL</h4><p>The extra a fully compact version has to offer over a <a href=\"most-compact\">most compact</a> version is the anchoring to the <a href=\"transaction-event-log\">Tranaction event log</a>. Here were various proofs (<a href=\"distributed-hash-table\">hashes</a>) can be &quot;stored&quot; which are optional in all kind of <a href=\"ACDC\">ACDC</a> variants.</p><h4>See</h4><p><a href=\"fully-expanded\">Fully (expanded)</a> version of an ACDC<br><a href=\"most-compact\">Most compact</a> version of an ACDC.</p><h4>Analogy</h4><p>A fully compact ACDC is like the core of an onion and the fully expanded ACDC is like rest of the outer layers of the onion. Turn this onion inside-out: you only need to sign the core (most compact), and then the whole onion (expanded version) would verify. The complete (expanded) onion is the most user friendly information bulb you can get, and you don&#39;t need to peel off all the rings of the onion to securely attribute <em>all</em> the information to the controller of the <a href=\"SAID\">SAID</a> that signed the core.</p><p>You can present any version of the onion you like: only the core, one partially stripped back, one layer at a time, or the whole thing (fully expanded). This illustrates part of the rational for why ACDCs matter. They offer a layered, graduated disclosure mechanism of verifiable credentials never seen before in the SSI field.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "fully expanded",
    "url": "https://kerisse.org",
    "anchor": "fully-expanded",
    "definition": "<h1>fully expanded</h1><h4>Definition</h4><p>The most user-friendly version of an <a href=\"ACDC\">ACDC</a> credential. It doesn&#39;t need to be signed and typically is not signed since the most compact version which is signed can be computed from this form and then the signature can be looked up in the <a href=\"TEL\">transaction event log</a> of the ACDC in question. </p><p>Regarding the graduated disclosure objective this form is the one with the highest amount of disclosure for a given node of an ACDC graph.</p><h4>See also</h4><p><a href=\"fully-compact\">Fully compact(ed)</a> version of an ACDC<br><a href=\"most-compact\">Most compact</a> version of an ACDC.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "GAR",
    "url": "https://kerisse.org",
    "anchor": "GAR",
    "definition": "<h1>GAR</h1><h4>See</h4><p><a href=\"gleif-authorized-representative\">GLEIF authorized representative</a>  </p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "ghost credential",
    "url": "https://kerisse.org",
    "anchor": "ghost-credential",
    "definition": "<h1>ghost credential</h1><h4>Definition</h4><p>Is a valid credential within in a 90 days grace period (the revocation transaction time frame before it&#39;s booked to revocation registry). | TBW prio 3 |</p><h4>Design</h4><p>When a relationship needs to be terminated with a <a href=\"QVI\">QVI</a> and the QVI has not revoked their credentials (yet) then those credentials become ghost credentials.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "GLEIF",
    "url": "https://kerisse.org",
    "anchor": "GLEIF",
    "definition": "<h1>GLEIF</h1><h4>Definition</h4><p>Global Legal Entity Identifier Foundation</p><h4>More information</h4><p><a href=\"https://www.gleif.org/en\">https://www.gleif.org/en</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "gleif authorized representative",
    "url": "https://kerisse.org",
    "anchor": "gleif-authorized-representative",
    "definition": "<h1>gleif authorized representative</h1><h4>Definition</h4><p>A representative of GLEIF authorized to perform the identity verifications requirements needed to issue the <a href=\"QVI\">QVI</a> <a href=\"vLEI\">vLEI</a> Credential.</p><p>Source: <a href=\"https://www.gleif.org/media/pages/vlei/introducing-the-vlei-ecosystem-governance-framework/0349aa74c5-1678443743/2022-12-16_verifiable-lei-_vlei_-ecosystem-governance-framework-glossary_v1.0_final.pdf\">GLEIF Ecosystem Governance Framework v1.0 Glossary</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "GLEIS",
    "url": "https://kerisse.org",
    "anchor": "GLEIS",
    "definition": "<h1>GLEIS</h1><h4>Definition</h4><p>Global Legal Entity Identifier System</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "gnu privacy guard",
    "url": "https://kerisse.org",
    "anchor": "gnu-privacy-guard",
    "definition": "<h1>gnu privacy guard</h1><h4>Definition</h4><p>also GnuPG; is a free-software replacement for Symantec&#39;s PGP cryptographic software suite. It is compliant with RFC 4880, the IETF standards-track specification of OpenPGP. Modern versions of PGP are interoperable with GnuPG and other OpenPGP-compliant systems.<br>More on <a href=\"https://en.wikipedia.org/wiki/GNU_Privacy_Guard\">wikipedia</a><br>See more about the closely related and often-confusing term <a href=\"PGP\">PGP</a>.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "governance framework",
    "url": "https://kerisse.org",
    "anchor": "governance-framework",
    "definition": "<h1>governance framework</h1><h4>Definition</h4><p>Also called &#39;Governance structure&#39;. Governance frameworks are the structure of a government and reflect the interrelated relationships, factors, and other influences upon the institution. Governance frameworks structure and delineate power and the governing or <a href=\"https://en.wikipedia.org/wiki/Management\">management</a> roles in an organization. They also set rules, procedures, and other informational guidelines.<br>More in <a href=\"https://en.wikipedia.org/wiki/Governance_framework\">source</a> Wikipedia.</p><h4>Related to GLEIF and vLEI</h4><p>In addition, governance frameworks define, guide, and provide for enforcement of these processes. These frameworks are shaped by the goals, strategic mandates, financial incentives, and established power structures and processes of the organization.</p><p>Within GLEIF context, <em>governance frameworks</em> manifest in a document that details the requirements for vLEI credentials.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "GPG",
    "url": "https://kerisse.org",
    "anchor": "GPG",
    "definition": "<h1>GPG</h1><h4>See</h4><p><a href=\"gnu-privacy-guard\">Gnu privacy guard</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "graduated disclosure",
    "url": "https://kerisse.org",
    "anchor": "graduated-disclosure",
    "definition": "<h1>graduated disclosure</h1><h4>Definition</h4><p>Lifting confidentiality step by step: Selectively disclosing more data as time and/or necessity progresses, offering backwards verifiability of earlier issued cryptographic proofs.</p><h4>Example</h4><p>You proof your insurance policy without disclosing details, before enjoying extreme sports. Only when something goes wrong, e.g. 1 in a 100, you disclose the data. This way confidentiality is kept in 99% of the cases.</p><h4>KERI specific</h4><p>Disclosure performed by a presentation exchange that has cross-variant (see <a href=\"compact-variant\">compact variant</a>) Issuer commitment verifiability as an essential property. It supports graduated disclosure by the <a href=\"disclosee\">Disclosee</a> of any or all variants wether it be full, compact, metadata, partial, selective, bulk issued, or contractually protected.<br>Paraphrased by @henkvancann based on <a href=\"https://github.com/WebOfTrust/ietf-ipex/blob/main/draft-ssmith-ipex.md#discussion\">source</a></p><h4>Reuse</h4><p>The <a href=\"SAID\">SAID</a> of a given variant is useful even when it is not the SAID of the variant the <a href=\"issuer\">Issuer</a> signed because during graduated disclosure the <a href=\"discloser\">Discloser</a> MAY choose to sign that given variant to fulfil a given step in an IPEX graduated disclosure transaction. </p><h4>Rule</h4><p>The disclosure performed by a presentation exchange MAY be <a href=\"graduated-disclosure\">graduated</a> and MAY be <a href=\"contractually-protected-disclosure\">contractually</a> protected.</p><h4>Related terms</h4><ul><li><a href=\"https://github.com/trustoverip/acdc/wiki/partial-disclosure\">Partial Disclosure</a></li><li><a href=\"https://github.com/trustoverip/acdc/wiki/selective-disclosure\">Selective Disclosure</a></li><li><a href=\"https://github.com/trustoverip/acdc/wiki/full-disclosure\">Full Disclosure</a></li></ul><p>| TBW  | check prio 1</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "graph fragment",
    "url": "https://kerisse.org",
    "anchor": "graph-fragment",
    "definition": "<h1>graph fragment</h1><h4>Definition</h4><p>An ACDC is a verifiable data structure and <em>part of a graph</em>, consisting of a node property and one or two edge proporties.</p><img src=\"https://hackmd.io/_uploads/r1KDqKxzj.png\" width=\"300\" />"
  },
  {
    "organisation": "WebOfTrust",
    "term": "group code",
    "url": "https://kerisse.org",
    "anchor": "group-code",
    "definition": "<h1>group code</h1><h4>See</h4><p><a href=\"group-framing-code\">Group framing code</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "group framing code",
    "url": "https://kerisse.org",
    "anchor": "group-framing-code",
    "definition": "<h1>group framing code</h1><h4>Definition</h4><p>special framing codes can be specified to support groups of <a href=\"primitive\">primitives</a> in <a href=\"composable-event-streaming-representation\">CESR</a>. Grouping enables <a href=\"pipelining\">pipelining</a>. Other suitable terms for these special framing codes are <em>group codes</em> or <em>count codes</em> for short. These are suitable terms because these framing codes can be used to count characters, primitives in a group, or groups of primitives in a larger group when parsing and off-loading a stream of CESR primitives.\\<br><a href=\"https://github.com/WebOfTrust/ietf-cesr/blob/main/draft-ssmith-cesr.md#count-group-or-framing-codes\">Source</a></p><h4>Composability property</h4><p>One of the primary advantages of composable encoding is that we can use special framing code to support the above mentioned grouping.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "hab",
    "url": "https://kerisse.org",
    "anchor": "hab",
    "definition": "<h1>hab</h1><h4>Definition</h4><p>A Hab is a keystore for one identifier. The Python implementation in <a href=\"keripy\">KERIpy</a>, also used by <a href=\"keria\">KERIA</a> uses <a href=\"http://www.lmdb.tech/doc/\">LMDB</a> to store key material and all other data.</p><p>Many Habs are included within and managed by a <a href=\"habery\">Habery</a>.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "habery",
    "url": "https://kerisse.org",
    "anchor": "habery",
    "definition": "<h1>habery</h1><h4>Definition</h4><p>&#39;Hab&#39; comes from ‘Habitat’. It’s a place where multi-sigs and AIDs are linked. Habery manages a collection of Habs. A Hab is a datastructure (a Python object).</p><p>| TBW  |-prio2</p><h6>Beware</h6><p>The only hit (2022) in a Google search pointing to a github site &#39;habery DOT github DOT io&#39; is NOT related.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "hardware security module",
    "url": "https://kerisse.org",
    "anchor": "hardware-security-module",
    "definition": "<h1>hardware security module</h1><h4>Definition</h4><p>A HSM is a physical computing device that safeguards and manages secrets (most importantly <a href=\"https://en.wikipedia.org/wiki/Digital_keys\">digital keys</a>), performs <a href=\"https://en.wikipedia.org/wiki/Encryption\">encryption</a> and decryption functions for <a href=\"https://en.wikipedia.org/wiki/Digital_signature\">digital signatures</a>, strong <a href=\"authenticity\">authentication</a> and other cryptographic functions.<br>More in source <a href=\"https://en.wikipedia.org/wiki/Hardware_security_module\">Wikipedia</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "hierarchical asynchronous coroutines and input output",
    "url": "https://kerisse.org",
    "anchor": "hierarchical-asynchronous-coroutines-and-input-output",
    "definition": "<h1>hierarchical asynchronous coroutines and input output</h1><h4>Definition</h4><p>HIO is an acronym which stands for &#39;Weightless hierarchical asynchronous coroutines and I/O in Python&#39;.</p><p>It&#39;s Rich Flow Based Programming Hierarchical Structured Concurrency with Asynchronous IO. That mouthful of terms has been explained further on <a href=\"https://github.com/ioflo/hio\">Github</a>.</p><p>HIO builds on very early work on hierarchical structured concurrency with lifecycle contexts from <a href=\"https://ioflo.com/\">ioflo</a>, <a href=\"https://github.com/ioflo/ioflo\">ioflo github</a>, and <a href=\"https://github.com/ioflo/ioflo_manuals\">ioflo manuals</a>.</p><h5>More info on Github</h5><p><a href=\"https://github.com/ioflo/hio\">Repo ioflo hio</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "hierarchical composition",
    "url": "https://kerisse.org",
    "anchor": "hierarchical-composition",
    "definition": "<h1>hierarchical composition</h1><h4>Definition</h4><p>Encoding protocol that is composable in a hierarchy and enables <a href=\"pipelining\">pipelining</a> (multiplexing and de-multiplexing) of complex streams in either text or compact binary. This allows management at scale for high-bandwidth applications.</p><h4>Example</h4><p>| TBW prio2 |</p><h4>CESR related</h4><p>Because of <a href=\"count-code\">count codes</a> and the <a href=\"composability\">composability</a> - and <a href=\"concatenation\">concatenation</a> property in CESR, <a href=\"pipelining\">pipelining</a> is possible, which then uses <a href=\"multiplexing\">multiplexing</a> (combining <a href=\"self-framing\">self-framing</a> primitives) and <em>de-multiplexing</em> (unravelling self-framing <a href=\"primitive\">primitives</a>).</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "hierchical deterministic keys",
    "url": "https://kerisse.org",
    "anchor": "hierchical-deterministic-keys",
    "definition": "<h1>hierchical deterministic keys</h1><h4>Definition</h4><p>A HDK type is a type of deterministic bitcoin wallet derived from a known <a href=\"seed\">seed</a>, that allow for the creation of child keys from the parent key. Because the child key is generated from a known seed there is a relationship between the child and parent keys that is invisible to anyone without that seed. The HD protocol (BIP 32) can generate a near infinite number of child keys from a deterministically-generated seed (chain code) from its parent, providing the functionality of being able to recreate those exact same child keys as long as you have the seed.<br>More at <a href=\"https://www.w3.org/2016/04/blockchain-workshop/interest/robles.html\">W3 source</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "hio",
    "url": "https://kerisse.org",
    "anchor": "hio",
    "definition": "<h1>hio</h1><h4>Definition</h4><p>Weightless hierarchical asynchronous coroutines and I/O in Python.<br>Rich Flow Based Programming Hierarchical Structured Concurrency with Asynchronous IO.</p><h4>More on Github</h4><p>This very technical topic can best be studied further at the Github <a href=\"https://github.com/ioflo/hio\">Repository</a></p><h4>Relation to KERI</h4><p>Choosing HIO complies with the asynchronous nature of KERI, the minimal sufficient means design principle of KERI and the leading KERIpy implementation.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "Home",
    "url": "https://kerisse.org",
    "anchor": "Home",
    "definition": "<h1>Home</h1><h4>Welcome to the WebofTrust terms wiki!</h4><p>The wiki also serves the glossary terms for the underlying and related techniques to ACDC, like KERI, CESR and OOBI.</p><p>There are a few <a href=\"https://wiki.trustoverip.org/display/HOME/Terms+Wikis\">practical rules</a> from the originator ToIP to get these wiki terms through their equivalent <a href=\"https://github.com/WebOfTrust/WOT-terms/actions/workflows/content-fetch-and-deploy-update-glossary.yml\">github actions script</a>, please:</p><ol><li>beware all new wiki items you <strong>create</strong>, lead to new .md files. We&#39;d like to know</li><li>introduce lowercase names with spaces (they will convert into lower case names with dashes between the words)</li><li>start with <strong>## Definition</strong> header; <a href=\"https://github.com/WebOfTrust/WOT-terms/wiki/composable-event-streaming-representation\">example</a></li><li>start with uppercase abbreviations with only the &quot;<strong>## See</strong>&quot; header; <a href=\"https://github.com/WebOfTrust/WOT-terms/wiki/CESR\">example</a></li><li>don&#39;t <strong>delete</strong> items (i.e. .md files) but make clear they are depreciated and / or link to the new concept / term</li><li>don&#39;t change or <strong>update</strong> the name of an item single handed, for it might change the concept / meaning for other people and create dead links for those who <strong>read</strong> - or link to the term. Please open an issue or a PR to discuss first. </li><li>any other immediate updates and amendments welcome, the revisions are available for us to be able to (partially) revert if something unwanted or unexpected happens.</li></ol><h5>KERISSE reads this wiki</h5><p>The <em>weboftrust</em> wiki glossary is currently our input tool for our KERI Suite glossary. However, we regularly scrape the wiki into <a href=\"http://kerisse.org\">KERISSE</a>, we add features and metadata, we connect relevant matching terms from related glossaries and finally we index it for the KERI Suite Search Engine (KERISSE).</p><p><em>Have fun CRU-ing!</em><br>&#39;* CRU=Create Read Update</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "HSM",
    "url": "https://kerisse.org",
    "anchor": "HSM",
    "definition": "<h1>HSM</h1><h4>See</h4><p><a href=\"hardware-security-module\">Hardware security model</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "I O",
    "url": "https://kerisse.org",
    "anchor": "I-O",
    "definition": "<h1>I O</h1><h4>See</h4><p><a href=\"input-output\">Input output</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "IANA",
    "url": "https://kerisse.org",
    "anchor": "IANA",
    "definition": "<h1>IANA</h1><h4>See</h4><p><a href=\"internet-assigned-numbers-authority\">Internet assigned numbers authority</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "icp",
    "url": "https://kerisse.org",
    "anchor": "icp",
    "definition": "<h1>icp</h1><h4>Definition</h4><p>icp = incept, inception</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "identifier",
    "url": "https://kerisse.org",
    "anchor": "identifier",
    "definition": "<h1>identifier</h1><h4>Definition</h4><p>Something to uniquely identify (public) identities; pointing to something or someone else.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "identifier system",
    "url": "https://kerisse.org",
    "anchor": "identifier-system",
    "definition": "<h1>identifier system</h1><h4>Definition</h4><p>a system for uniquely identifying (public) identities</p><h5>Example identifier system</h5><p>The International Standard Name Identifier (ISNI) is an identifier system for uniquely identifying the public identities of contributors to media content such as books, television programmes, and newspaper articles. Such an identifier consists of 16 digits. It can optionally be displayed as divided into four blocks.More info on <a href=\"https://en.wikipedia.org/wiki/International_Standard_Name_Identifier\">Wikipedia page</a></p><h5>The properties of an identifier system:</h5><ol><li>Completeness. Every unique object must be assigned an identifier.</li><li>Uniqueness. Each identifier is a unique sequence.</li><li>Exclusivity. Each identifier is assigned to a unique object, and to no other object.</li><li>Authenticity. The objects that receive identification must be verified as the objects that they are intended to be.</li><li>Aggregation. There must be a mechanism to aggregate all of the data, and only that data, that is properly associated with the identifier (i.e., to bundle all of the data that belong to the uniquely identified object).</li><li>Permanence. The identifiers and the associated data must be permanent.</li><li>Reconciliation. There should be a mechanism whereby the data associated with a unique, identified object in one resource can be merged with the data held in another resource, for the same unique object. This process, which requires comparison, authentication, and merging, is known as reconciliation.</li><li>Immutability. In addition to being permanent (i.e., never destroyed or lost), the identifier must never change (</li><li>Security. The identifier system should be as little vulnerable to malicious attack as possible.</li><li>Documentation and quality assurance. Protocols must be written for establishing the identifier system, for assigning identifiers, for protecting the system, and for monitoring the system. </li><li>Centrality. The subject&#39;s identifier is the central &quot;key&quot; to which every event for the subject is attached.</li><li>Autonomy. An identifier system has a life of its own.<br>By (<em>@henkvancann</em>) based on this <a href=\"https://www.sciencedirect.com/topics/computer-science/identifier-system\">source</a></li></ol><h5>Relationship with KERI / ACDC plus example vLEI</h5><p>KERI is an thin-layered identifier system generator, offering globally portable identifiers, secure attribution to their root-of-trust, and chained verifiable credential containers (ACDC) to them.</p><h6>A first implementation of KERI and ACDC has been at GLEIF (.org)</h6><p>Verifiable Credentials (VCs) and the emerging role of the LEI: Verifiable Credentials are digitally signed credentials that are not only tamper-resistant but capable of being verified in decentralized manner. vLEIs are based on the Trust over IP Authentic Chained Data Container (ACDC) specification (based on the Key Event Receipt Infrastructure (KERI) protocol (<a href=\"http://github.com/WebOfTrust/keri\">github.com/WebOfTrust/keri</a>), both Internet Engineering Task Force (IETF) draft specifications).Verifiable Credentials are digitally signed credentials that are not only tamper-resistant but capable of being verified in decentralized manner. vLEIs are based on the Trust over IP Authentic Chained Data Container (ACDC) specification (based on the Key Event Receipt Infrastructure (KERI) protocol (<a href=\"http://github.com/WebOfTrust/keri\">github.com/WebOfTrust/keri</a>), both Internet Engineering Task Force (IETF) draft specifications).More info on <a href=\"https://www.gleif.org/en/vlei/introducing-the-verifiable-lei-vlei\">GLEIF site</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "identity",
    "url": "https://kerisse.org",
    "anchor": "identity",
    "definition": "<h1>identity</h1><h4>Definition</h4><p>A unique entity. Typically represented by a unique <a href=\"identifier\">identifier</a>.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "identity assurance",
    "url": "https://kerisse.org",
    "anchor": "identity-assurance",
    "definition": "<h1>identity assurance</h1><h4>Definition</h4><p>The heavy-lifting to be done by a trusted (middle-man) party to establish - and then offer reputational trust. An example of such a party is <a href=\"GLEIF\">GLEIF</a>. Instead, KERI is for <a href=\"attributional-trust\">attributional trust</a>. In the real world you need both.<br>Read more in source <a href=\"https://github.com/SmithSamuelM/Papers/blob/master/whitepapers/IdentifierTheory_web.pdf\">Universal Identifier Theory</a></p><h4>Out-of-band</h4><p>A trusted party might use out-of-band procedures to assure the identity of people (representing parties) but it&#39;s not the same as <a href=\"out-of-band-introduction\">Out-of-band Introduction</a>s (OOBIs) to establish attributional trust, which is done with KERI.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "inception",
    "url": "https://kerisse.org",
    "anchor": "inception",
    "definition": "<h1>inception</h1><h4>Definition</h4><p>The operation of creating an AID by binding it to the initial set of authoritative keypairs and any other associated information. This operation is made verifiable and duplicity evident upon acceptance as the inception event that begins the AID&#39;s KEL.<br>Source <a href=\"https://github.com/WebOfTrust/ietf-keri/blob/main/draft-ssmith-keri.md#basic-terminology\">Sam Smith</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "inception event",
    "url": "https://kerisse.org",
    "anchor": "inception-event",
    "definition": "<h1>inception event</h1><h4>Definition</h4><p>An inception event is an establishment key event that represents the creation operation of anidentifier including its derivation and its initial set of controlling keys as well as other inceptionor configuration data for supporting infrastructure.<br>This is the information needed to derive an <a href=\"AID\">AID</a> and establish its initial key-state.<br>There may be one and only one inception event operation performed on an identifier.<br>Source <a href=\"https://github.com/SmithSamuelM/Papers/blob/master/whitepapers/KERI_WP_2.x.web.pdf\">KERI Whitepaper</a><br>Source <a href=\"https://github.com/WebOfTrust/ietf-keri/blob/main/draft-ssmith-keri.md#basic-terminology\">Sam Smith</a></p><h5>Inception Statement</h5><img src=\"https://raw.githubusercontent.com/WebOfTrust/keri/7fc96da6c277d3921fb1248ce9235400a4ff6af7/images/inception-statement.png\" alt=\"inception statement\" border=\"0\" width=\"400\" /><p><strong>In brief: It&#39;s the signed version of a statement containing the inception event with some extra data.</strong><br>(<em>@henkvancann</em>)</p><h5>Components and self-contained</h5><p>The inception data must include the public key, the identifier derivation from that public key, and may include other configuration data. The identifier derivation may be simply represented by the <code>derivation code</code>. A statement that includes the inception data with attached signature made with the private key comprises a cryptographic commitment to the derivation and configuration of the identifier that may be cryptographically verified by any entity that receives it.<br>A KERI inception statement is completely self-contained. No additional infrastructure is needed or more importantly must be trusted in order to verify the derivation and initial configuration (inception) of the identifier. The initial trust basis for the identifier is simply the signed inception statement.<br>(<em>SamMSmith</em>)</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "inconsistency",
    "url": "https://kerisse.org",
    "anchor": "inconsistency",
    "definition": "<h1>inconsistency</h1><h4>Definition</h4><p>If a reason, idea, opinion, etc. is inconsistent, different parts of it do not agree, or it does not agree with something else. Data inconsistency occurs when similar data is kept in different formats in more than one file. When this happens, it is important to match the data between files.</p><h4>KERI related</h4><p>A data structure like a <a href=\"key-event-log\">KEL</a> can be internally <em>inconsistent</em> which is a clear indication that this data structure is not <a href=\"verifiable\">verifiable</a>.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "indexed signature",
    "url": "https://kerisse.org",
    "anchor": "indexed-signature",
    "definition": "<h1>indexed signature</h1><h4>Definition</h4><p>Also called <em>siger</em>. An indexed signature attachment is used when signing anything with a multi-key autonomic identifier. The index is included as part of the attachment, so a verifier knows which of the multiple public keys was used to generate a specific signature.<br>Source:Philip Feairheller</p><h4>Example working</h4><p>An indexed signature attachment would look something like:</p><pre><code>03.&lt;binary signature&gt;</code></pre><p>All encoded as <a href=\"qualified\">qualified</a> <a href=\"base64\">base64</a>.  A verifier would then know to use the AID’s public key located at index 3 in the list of public keys to verify the signature.<br>Source:Philip Feairheller</p><h4>Witness signatures indexed</h4><p>In addition, <a href=\"witness\">witness</a> signatures can also be attached as indexed signatures. So a verifier can determine which witness signed a particular <a href=\"receipt\">receipt</a>. This is useful when witnesses are receipting an event and only attaching their own signature. The <a href=\"controller\">controller</a> knows which witness signed the receipt by looking up the index in their list of witnesses for that event.<br>Source:Philip Feairheller</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "indirect mode",
    "url": "https://kerisse.org",
    "anchor": "indirect-mode",
    "definition": "<h1>indirect mode</h1><h4>Definition</h4><p>Two primary trust modalities motivated the KERI design, One these is the <em>indirect</em> (one-to-many) mode, which depends on witnessed key event receipt logs (KERL) as a secondary root-of-trust for validating events. This gives rise to the acronym KERI for key event receipt infrastructure.<br>The indirect mode extends that trust basis with witnessed key event receipt logs (<a href=\"key-event-receipt-log\">KERL</a>) for validating events. The security and accountability guarantees of indirect mode are provided by <a href=\"KA2CE\">KA2CE</a> or KERI’s Agreement Algorithm for Control Establishment among a set of witnesses.<br><a href=\"https://github.com/SmithSamuelM/Papers/blob/master/whitepapers/KERI_WP_2.x.web.pdf\">Source: Abstract KERI white paper</a></p><h4>Operational mode</h4><p>To protect a <a href=\"validator\">validator</a> when engaging with some other controller’s identifier, be it <a href=\"verification\">verification</a>, control authority establishment, or <a href=\"duplicity\">duplicity</a> detection, are based on an ability to <em>replay</em> the sequence of key events (key event history or log) of that identifier. There are two main operational modes for providing replay capability that are distinguished by the degree of availability of the identifier’s controller when creating and promulgating the key events.<br>With <em>indirect mode</em>, the promulgation of events to a validator may happen even when the <a href=\"controller\">controller</a> is not attached to the network and therefore not able to communicate directly with a <a href=\"validator\">validator</a>. Indirect mode supports high (nearly continuous) availability of the key event history to any validator. This means that other components must be trusted to promulgate key events when the controller is not attached to the network. Indirect mode is compatible with identifiers for one-to-many exchanges or any-wise relationships (a controller with any others). A single indirect mode identifier may be used for a public service or business or otherwise when building brand and reputation in that identifier is important. An indirect mode identifier may also be used for private one-to-one or select groups but where intermittent availability is not tolerable.<br>More in <a href=\"https://github.com/SmithSamuelM/Papers/blob/master/whitepapers/KERI_WP_2.x.web.pdf\">Source: chapter Protocol Operational Modes in KERI white paper</a></p><h4>Security concerns</h4><p>The protocol may operate in two basic modes, called direct and indirect. The availability and consistency attack surfaces are different for the two modes and hence the mitigation properties of the protocol are likewise mode specific.<a href=\"https://github.com/SmithSamuelM/Papers/blob/master/whitepapers/KERI_WP_2.x.web.pdf\">Source: chapter Security concerns in KERI white paper</a></p><h4>Also see</h4><p><a href=\"direct-mode\">Direct mode</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "input output",
    "url": "https://kerisse.org",
    "anchor": "input-output",
    "definition": "<h1>input output</h1><h4>Definition</h4><p>In <a href=\"https://en.wikipedia.org/wiki/Computing\">computing</a>, input/output (I/O, or informally io or IO) is the communication between an information processing system, such as a <a href=\"https://en.wikipedia.org/wiki/Computer\">computer</a>, and the outside world, possibly a human or another information processing system. <a href=\"https://en.wikipedia.org/wiki/Information\">Inputs</a> are the signals or <a href=\"https://en.wikipedia.org/wiki/Data_(computing)\">data</a> received by the system and outputs are the signals or data sent from it. The term can also be used as part of an action; to &quot;perform I/O&quot; is to perform an <a href=\"https://en.wikipedia.org/wiki/I/O_scheduling\">input or output operation</a>.</p><h4>More on source Wikipedia</h4><p><a href=\"https://en.wikipedia.org/wiki/Input/output\">Input/Output</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "inquisitor",
    "url": "https://kerisse.org",
    "anchor": "inquisitor",
    "definition": "<h1>inquisitor</h1><h4>Definition</h4><p>In the ACDC context it&#39;s a general term for someone (in a validating role) that launches an inquiry at some KERI <a href=\"witness\">witness</a>.</p><h4>More broadly accepted notion</h4><p>An inquisitor was an <a href=\"https://en.wikipedia.org/wiki/Official\">official</a> (usually with <a href=\"https://en.wikipedia.org/wiki/Judicial\">judicial</a> or investigative functions) in an <a href=\"https://en.wikipedia.org/wiki/Inquisition\">inquisition</a> – an organization or program intended to eliminate <a href=\"https://en.wikipedia.org/wiki/Heresy\">heresy</a> and other things contrary to the <a href=\"https://en.wikipedia.org/wiki/Doctrine\">doctrine</a> or teachings.<br>Source: <a href=\"https://en.wikipedia.org/wiki/Inquisitor\">Wikipedia</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "integrity",
    "url": "https://kerisse.org",
    "anchor": "integrity",
    "definition": "<h1>integrity</h1><h4>Definition</h4><p>Integrity (of a message or data) means that the information is whole, sound, and unimpaired (not necessarily correct). It means nothing is missing from the information; it is complete and in intended good order. (Source: Neil Thomson)</p><h4>KERI suite criteria</h4><p>In KERI&#39;s &quot;security first&quot; approach Authenticity includes <em>technical integrity</em> of data involved. This includes:</p><ol><li><a href=\"internal-inconsistency\">internal consistency</a></li><li>external consistency or <a href=\"duplicity\">duplicity</a> evident</li></ol><p>Integrity in ACDCs is &quot;self-verifying&quot;: the <a href=\"self-addressing-identifier\">SAID</a> that is contained in the data is also the of hash of the data.</p><p>The integrity of streaming data in <a href=\"composable-event-streaming-representation\">CESR</a> and <a href=\"cesr-proof-signatures\">CESR proof signatures</a> is established by code tables and verifiable by the mere (killer-)feature: round-robin <a href=\"composability\">composability</a>. If you can toggle between the text - and binary representation, <em>then that&#39;s the integrity proof</em>, if not, then it&#39;s provably lacking integrity.</p><p>A side-benefit of how integrity is implemented in KERI is <a href=\"non-repudiable\">non-repudiation</a> - done via a crypto-hash verification via the signer&#39;s public key - is not inherent in the meaning of integrity.</p><p>Furthermore for KERI integrity, as an assessment of the substance or the content itself, does not fall within its narrow definition. <strong>Our criterium is cryptographic verifiability</strong>. Once you can&#39;t verify, for KERI this type of non-technical integrity is not included in <code>integrity</code>. For the same reason we wouldn&#39;t use <a href=\"validate\">validation</a>* as a mechanism to prove integrity.</p><h4>ToIP related</h4><p>On today&#39;s Technology Architecture TF call,..., we defined authenticity to include integrity.<br><a href=\"https://github.com/trustoverip/TechArch/issues/10\">Source ToIP issue 10</a></p><p><a href=\"https://github.com/trustoverip/TechArch/issues/10\">message integrity</a> seems to be included in <code>technical integrity</code>.</p><p>The further separation of Authenticity and Integrity in the ToIP glossary can be largely adopted by KERI? | TBW prio 2 |</p><h4>See also</h4><p><a href=\"verified-integrity\">verified integrity</a><br><a href=\"complementary-integrity-verification\">(complementary) integrity verification</a></p><p>*Validation in relation to integrity, in KERI&#39;s view would be an assessment of what&#39;s been verified before; in a certain context from a certain angle. And this mechanism is too close to <em>veracity judgement</em>, to be an objective verdict over integrity of data.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "interaction event",
    "url": "https://kerisse.org",
    "anchor": "interaction-event",
    "definition": "<h1>interaction event</h1><p>Non-establishment Event that anchors external data to the key-state as established by the most recent prior establishment event.<br>Source <a href=\"https://github.com/WebOfTrust/ietf-keri/blob/main/draft-ssmith-keri.md#basic-terminology\">Sam Smith</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "interactive authentication design",
    "url": "https://kerisse.org",
    "anchor": "interactive-authentication-design",
    "definition": "<h1>interactive authentication design</h1><h4>Definition</h4><p>A group of approaches having an interactive mechanism that requires a set of requests and responses or challenge responses with challenge response replies for secure authentication.<br>More in <a href=\"https://hackmd.io/ZbVAbNK1SPyT90-oNwN_cw\">source</a> Keri Request Authentication Mechanism (KRAM) by Samuel Smith</p><h4>Related</h4><p><a href=\"non-interactive-authentication-design\">Non-interactive authentication design</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "interceptor",
    "url": "https://kerisse.org",
    "anchor": "interceptor",
    "definition": "<h1>interceptor</h1><h4>Definition</h4><p>a <a href=\"keria\">keria</a> class that allows to push events that are happening inside the cloud agent to other backend processes.It is similar to the notifier class but it is used to &quot;notify&quot; other web services.</p><h4>Origin</h4><p><a href=\"https://github.com/WebOfTrust/keria/pull/67\">https://github.com/WebOfTrust/keria/pull/67</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "interleaved serialisation",
    "url": "https://kerisse.org",
    "anchor": "interleaved-serialisation",
    "definition": "<h1>interleaved serialisation</h1><h4>Definition</h4><p>Serializations of different types interleaved in an overarching format</p><h4>CESR related</h4><p>One extremely useful property of CESR is that special <strong>count codes</strong> enable CESR to be interleaved with other serializations. For example, Many applications use <a href=\"https://weboftrust.github.io/ietf-cesr/draft-ssmith-cesr.html#JSON\">JSON</a> <a href=\"https://weboftrust.github.io/ietf-cesr/draft-ssmith-cesr.html#RFC4627\">RFC4627</a>, <a href=\"https://weboftrust.github.io/ietf-cesr/draft-ssmith-cesr.html#CBOR\">CBOR</a> <a href=\"https://weboftrust.github.io/ietf-cesr/draft-ssmith-cesr.html#RFC8949\">RFC8949</a>, or MsgPack (<a href=\"https://weboftrust.github.io/ietf-cesr/draft-ssmith-cesr.html#MGPK\">MGPK</a>) to serialize flexible self-describing data structures based on field maps, also known as <em>dictionaries</em> or <a href=\"distributed-hash-table\">hash tables</a>.<br><a href=\"https://weboftrust.github.io/ietf-cesr/draft-ssmith-cesr.html#section-3.5\">Source IETF-CESR</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "internal inconsistency",
    "url": "https://kerisse.org",
    "anchor": "internal-inconsistency",
    "definition": "<h1>internal inconsistency</h1><h4>Definition</h4><p>Internal is used to describe things that exist or happen inside an <a href=\"entity\">entity</a>. In our scope of digital <a href=\"identifier\">identifiers</a> its (in)consistency is considered within the defining data structures and related data stores.</p><p>In <a href=\"key-event-receipt-infrastructure\">KERI</a> we are protected against internal inconsistency by the hash chain datastructure of the <a href=\"key-event-log\">KEL</a>, because the only <a href=\"authority\">authority</a> that can sign the log is the <a href=\"controller\">controller</a> itself.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "internet assigned numbers authority",
    "url": "https://kerisse.org",
    "anchor": "internet-assigned-numbers-authority",
    "definition": "<h1>internet assigned numbers authority</h1><h4>Definition</h4><p>is the organization that oversees the allocation of <a href=\"https://www.techtarget.com/searchunifiedcommunications/definition/Internet-Protocol\">IP</a> addresses to internet service providers (<a href=\"https://www.techtarget.com/whatis/definition/ISP\">ISPs</a>).<br><a href=\"https://www.techtarget.com/whatis/definition/IANA-Internet-Assigned-Numbers-Authority\">Source</a></p><h5>What are IANA responsibilities?</h5><p>In addition to global <a href=\"https://www.techtarget.com/whatis/definition/IP-address-Internet-Protocol-Address\">IP addressing</a>, IANA is also responsible for domain name system (<a href=\"https://www.techtarget.com/searchnetworking/definition/domain-name-system\">DNS</a>) root zone management, autonomous system numbers and any &quot;unique parameters and protocol values&quot; for the internet community.<br><a href=\"https://www.techtarget.com/whatis/definition/IANA-Internet-Assigned-Numbers-Authority\">Source</a></p><h5>More information</h5><p><a href=\"https://en.wikipedia.org/wiki/Internet_Assigned_Numbers_Authority\">Wikipedia</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "interoperability",
    "url": "https://kerisse.org",
    "anchor": "interoperability",
    "definition": "<h1>interoperability</h1><h4>Definition</h4><p>Interoperability is a characteristic of a product or system to work with other products or systems. While the term was initially defined for <a href=\"https://en.wikipedia.org/wiki/Information_technology\">information technology</a> or <a href=\"https://en.wikipedia.org/wiki/Systems_engineering\">systems engineering</a> services to allow for information exchange.<br><a href=\"https://en.wikipedia.org/wiki/Interoperability\">More on source Wikipedia</a></p><h4>Types relevant for KERI and ACDC</h4><p><a href=\"https://www.doi.org/factsheets/Identifier_Interoper.html\">Identifier interoperability</a> enables users to re-use these identifiers (and their associated data) across different applications. Such interoperability of identifiers encompasses not only technical aspects of interoperability but consideration of the purpose and community of use of the identifiers.<br><a href=\"https://www.doi.org/factsheets/Identifier_Interoper.html\">Source</a></p><p>If two or more systems use common <a href=\"https://en.wikipedia.org/wiki/File_format\">data formats</a> and <a href=\"https://en.wikipedia.org/wiki/Communication_protocol\">communication protocols</a> and are capable of communicating with each other, they exhibit syntactic interoperability. <a href=\"https://en.wikipedia.org/wiki/XML\">XML</a> and <a href=\"https://en.wikipedia.org/wiki/SQL\">SQL</a> are examples of common data formats and protocols. Lower-level data formats also contribute to syntactic interoperability, ensuring that alphabetical characters are stored in the same <a href=\"https://en.wikipedia.org/wiki/ASCII\">ASCII</a> or a <a href=\"https://en.wikipedia.org/wiki/Unicode\">Unicode</a> format in all the communicating systems.<br><a href=\"https://en.wikipedia.org/wiki/Interoperability\">More on source Wikipedia</a></p><p>Beyond the ability of two or more computer systems to exchange information, <a href=\"https://en.wikipedia.org/wiki/Semantic_interoperability\">semantic interoperability</a> is the ability to automatically interpret the information exchanged meaningfully and accurately in order to produce useful results as defined by the end users of both systems.</p><p><a href=\"https://en.wikipedia.org/wiki/Cross-domain_interoperability\">Cross-domain interoperability</a> involves multiple social, organizational, political, legal entities working together for a common interest or information exchange.<br><a href=\"https://en.wikipedia.org/wiki/Interoperability\">More on source Wikipedia</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "interoperable",
    "url": "https://kerisse.org",
    "anchor": "interoperable",
    "definition": "<h1>interoperable</h1><h4>See</h4><p><a href=\"interoperability\">Interoperability</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "ip address",
    "url": "https://kerisse.org",
    "anchor": "ip-address",
    "definition": "<h1>ip address</h1><p>An Internet Protocol address (IP address) is a numerical label such as &#39;192.0.2.1&#39; that is connected to a <a href=\"https://en.wikipedia.org/wiki/Computer_network\">computer network</a> that uses the <a href=\"https://en.wikipedia.org/wiki/Internet_Protocol\">Internet Protocol</a> for communication. An IP address serves two main functions: network interface <a href=\"https://en.wikipedia.org/wiki/Identification_(information)\">identification</a> and location <a href=\"https://en.wikipedia.org/wiki/Network_address\">addressing</a>.</p><p>Much more on source <a href=\"https://en.wikipedia.org/wiki/IP_address\">Wikipedia</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "IPEX",
    "url": "https://kerisse.org",
    "anchor": "IPEX",
    "definition": "<h1>IPEX</h1><h4>See</h4><p><a href=\"issuance-and-presentation-exchange-protocol\">Issuance and presentation exchange protocol</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "iss",
    "url": "https://kerisse.org",
    "anchor": "iss",
    "definition": "<h1>iss</h1><h4>Definition</h4><p>iss = vc issue, verifiable credential issuance</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "issuance and presentation exchange protocol",
    "url": "https://kerisse.org",
    "anchor": "issuance-and-presentation-exchange-protocol",
    "definition": "<h1>issuance and presentation exchange protocol</h1><h4>Definition</h4><p>provides a uniform mechanism for the issuance and presentation of ACDCs in a securely attributable manner. </p><h4>Relation</h4><p>A single protocol is able to work for both types of exchanges (<a href=\"issuance-exchange\">issuance</a> and <a href=\"presentation-exchange\">presentation</a>) by recognizing that all exchanges (both issuance and presentation) may be modeled as the disclosure of information by a <a href=\"discloser\">Discloser</a> to a <a href=\"disclosee\">Disclosee</a>.<br>The <em>difference</em> between exchange types is <em>the information disclosed not the mechanism for disclosure</em>.</p><h4>More info at source</h4><p>(<a href=\"https://github.com/WebOfTrust/ietf-ipex/blob/main/draft-ssmith-ipex.md\">Source</a>)</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "issuance event",
    "url": "https://kerisse.org",
    "anchor": "issuance-event",
    "definition": "<h1>issuance event</h1><h4>Definition</h4><p>The initial transaction event log event anchored to the issuing AID’s key event log that represents the issuance of an ACDC credential.<br>Source: Philip Feairheller.</p><p>It&#39;s a sort of &quot;<a href=\"inception-event\">inception event</a>&quot; of a verifiable credential.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "issuance exchange",
    "url": "https://kerisse.org",
    "anchor": "issuance-exchange",
    "definition": "<h1>issuance exchange</h1><h4>Definition</h4><p>A special case of a <a href=\"presentation-exchange\">presentation exchange</a> where the <a href=\"discloser\">Discloser</a> is the <a href=\"issuer\">Issuer</a> of the origin (Primary) ACDC of the <a href=\"directed-acyclic-graph\">DAG</a> formed by the set of chained <a href=\"authentic-chained-data-container\">ACDC</a>s so disclosed.</p><p>In an issuance exchange, when the origin ACDC has an <a href=\"issuee\">Issuee</a>, the <a href=\"disclosee\">Disclosee</a> MAY also be the origin ACDC&#39;s Issuee.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "issuee",
    "url": "https://kerisse.org",
    "anchor": "issuee",
    "definition": "<h1>issuee</h1><h4>Definition</h4><p>An <a href=\"authentic-chained-data-container\">ACDC</a> is optionally issued to the Issuee. When present, the Issuee identifier (<a href=\"autonomic-identifier\">AID</a>) appears at the top level of the attribute section or in the attribute list at the top level of the attribute aggregate section of the ACDC.</p><h4>Rule</h4><p>Each ACDC MUST have an <a href=\"issuer\">Issuer</a> and MAY have an <a href=\"issuee\">Issuee</a>. The set of <a href=\"ACDC\">ACDC</a>s so disclosed in a presentation exchange MUST be chained. This set of chained ACDCs define a <a href=\"directed-acyclic-graph\">directed acyclic graph</a> that MUST have at least one vertex and MAY have zero or more edges pointing to other vertices.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "issuer",
    "url": "https://kerisse.org",
    "anchor": "issuer",
    "definition": "<h1>issuer</h1><h4>Definition</h4><p>An <a href=\"authentic-chained-data-container\">ACDC</a> is issued by the Issuer. The Issuer identifier (<a href=\"autonomic-identifier\">AID</a>) appears in the top level of the ACDC.</p><h4>Rule</h4><p>Each ACDC MUST have an <a href=\"issuer\">Issuer</a> and MAY have an <a href=\"issuee\">Issuee</a>. The set of <a href=\"ACDC\">ACDC</a>s so disclosed in a presentation exchange MUST be chained. This set of chained ACDCs define a <a href=\"directed-acyclic-graph\">directed acyclic graph</a> that MUST have at least one vertex and MAY have zero or more edges pointing to other vertices.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "ixn",
    "url": "https://kerisse.org",
    "anchor": "ixn",
    "definition": "<h1>ixn</h1><h4>Definition</h4><p><a href=\"JSON\">JSON</a> field name (attribute) for Interaction Event; its content (value) contains a hash pointer. All <a href=\"transaction-event-log\">TEL</a> events are anchored in a <a href=\"key-event-log\">KEL</a> in either ixn (<a href=\"interaction-event\">interaction</a>) or <a href=\"rot\">rot</a> (<a href=\"rotation-event\">rotation event</a>s). This is the foundation enabling a verifiable credential protocol to be built on top of KERI.<br><a href=\"https://kentbull.com/2023/03/09/keri-tutorial-series-treasure-hunting-in-abydos-issuing-and-verifying-a-credential-acdc/\">Source</a> Kent Bull 2023</p><h4>Also see</h4><p><a href=\"rot\">rot</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "javascript object notation (JSON)",
    "url": "https://kerisse.org",
    "anchor": "javascript-object-notation-(JSON)",
    "definition": "<h1>javascript object notation (JSON)</h1><h4>Definition</h4><p>JSON (JavaScript Object Notation, pronounced <a href=\"https://en.wikipedia.org/wiki/Help:IPA/English\">/ˈdʒeɪsən/</a>; also <a href=\"https://en.wikipedia.org/wiki/Help:IPA/English\">/ˈdʒeɪˌsɒn/</a>) is an <a href=\"https://en.wikipedia.org/wiki/Open_standard\">open standard</a> <a href=\"https://en.wikipedia.org/wiki/File_format\">file format</a> and <a href=\"https://en.wikipedia.org/wiki/Electronic_data_interchange\">data interchange</a> format that uses <a href=\"https://en.wikipedia.org/wiki/Human-readable_medium\">human-readable</a> text to store and transmit data objects consisting of <a href=\"https://en.wikipedia.org/wiki/Attribute%E2%80%93value_pair\">attribute–value pairs</a> and <a href=\"https://en.wikipedia.org/wiki/Array_data_type\">arrays</a> (or other <a href=\"https://en.wikipedia.org/wiki/Serialization\">serializable</a> values). It is a common data format with diverse uses in <a href=\"https://en.wikipedia.org/wiki/Electronic_data_interchange\">electronic data interchange</a>, including that of <a href=\"https://en.wikipedia.org/wiki/Web_application\">web applications</a> with <a href=\"https://en.wikipedia.org/wiki/Server_(computing)\">servers</a>.</p><h5>Language independent</h5><p>JSON is a <a href=\"https://en.wikipedia.org/wiki/Language-independent_specification\">language-independent</a> data format. It was derived from <a href=\"https://en.wikipedia.org/wiki/JavaScript\">JavaScript</a>, but many modern <a href=\"https://en.wikipedia.org/wiki/Programming_language\">programming languages</a> include code to generate and <a href=\"https://en.wikipedia.org/wiki/Parsing\">parse</a> JSON-format data. JSON filenames use the extension .json.</p><h5>More on Wikipedia</h5><p><a href=\"https://en.wikipedia.org/wiki/JSON\">JSON</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "javascript object signing and encryption",
    "url": "https://kerisse.org",
    "anchor": "javascript-object-signing-and-encryption",
    "definition": "<h1>javascript object signing and encryption</h1><h4>Definition</h4><p>is a framework intended to provide a method to securely transfer claims (such as authorization information) between parties. The JOSE framework provides a collection of specifications to serve this purpose. </p><h5>Related and more info</h5><p>Related: <code>JWK</code>, <code>JWT</code>. <a href=\"https://jose.readthedocs.io/en/latest/\">More info</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "JOSE",
    "url": "https://kerisse.org",
    "anchor": "JOSE",
    "definition": "<h1>JOSE</h1><h4>See</h4><p><a href=\"javascript-object-signing-and-encryption\">Javascript object signing and encryption</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "JSON",
    "url": "https://kerisse.org",
    "anchor": "JSON",
    "definition": "<h1>JSON</h1><h4>Definition</h4><p>JavaScript Object Notation. JSON is a <a href=\"https://en.wikipedia.org/wiki/Language-independent_specification\">language-independent</a> data format. It was derived from <a href=\"https://en.wikipedia.org/wiki/JavaScript\">JavaScript</a>. It&#39;s an <a href=\"https://en.wikipedia.org/wiki/Open_standard\">open standard</a> <a href=\"https://en.wikipedia.org/wiki/File_format\">file format</a> and <a href=\"https://en.wikipedia.org/wiki/Electronic_data_interchange\">data interchange</a> format that uses <a href=\"https://en.wikipedia.org/wiki/Human-readable_medium\">human-readable</a> text to store and transmit data objects consisting of <a href=\"https://en.wikipedia.org/wiki/Attribute%E2%80%93value_pair\">attribute–value pairs</a> and <a href=\"https://en.wikipedia.org/wiki/Array_data_type\">arrays</a> (or other <a href=\"https://en.wikipedia.org/wiki/Serialization\">serializable</a> values).<br>More on <a href=\"https://en.wikipedia.org/wiki/JSON\">source</a> Wikipedia</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "judge",
    "url": "https://kerisse.org",
    "anchor": "judge",
    "definition": "<h1>judge</h1><h4>Definition</h4><p>A judge is an entity or component that examines the entries of one or more <a href=\"key-event-receipt-log\">KERLs</a> and DELs of a given identifier to validate that the event history is from a non-<a href=\"duplicity\">duplicitous</a> controller and has been witnessed by a sufficient number of non-duplicitous <a href=\"witness\">witnesses</a> such that it may be trusted or conversely not-trusted by a <a href=\"validator\">validator</a>.</p><h4>Task and result</h4><p>A judge determines current [authoritative] key set for identifier from the <a href=\"key-event-receipt-log\">key event receipt logs</a> from a set of witnesses. Judges transmit the &#39;judgement&#39; of watchers concerning duplicity.</p><h4>Where judges run</h4><p>Example AT&amp;T vs T-Mobile. The only &quot;fault&quot; that is apparent, is an attack on the KEL. And that can only occur via key compromise. So a successful multi-threshold attack causing <a href=\"duplicity\">duplicity</a> is the only thing <a href=\"watcher\">watchers</a> are looking for. </p><h4>Competitor and common interest</h4><p>So even competitors will want to share across the entire ecosystem. Similar to certificate transparency, all competitors in the internet hosting space share the information with each other because it is in their best interest to eliminate fraud / duplicity.<br>Paraphrased by @henkvancann based on <a href=\"https://hackmd.io/-soUScAqQEaSw5MJ71899w?view#2022-09-06\">source Samuel Smith / Phil Feairheller</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "juror",
    "url": "https://kerisse.org",
    "anchor": "juror",
    "definition": "<h1>juror</h1><h4>Definition</h4><p>A juror has a simpler task of performing <a href=\"duplicity\">duplicity</a> detection on events and event receipts.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "jury",
    "url": "https://kerisse.org",
    "anchor": "jury",
    "definition": "<h1>jury</h1><h4>Definition</h4><p>The jury is the set of entities or components acting as <a href=\"juror\">jurors</a>.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "KA2CE",
    "url": "https://kerisse.org",
    "anchor": "KA2CE",
    "definition": "<h1>KA2CE</h1><h4>See</h4><p><a href=\"keri-agreement-algorithm-for-control-establishment\">KERI agreement algorithm for control establishment</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "KAACE",
    "url": "https://kerisse.org",
    "anchor": "KAACE",
    "definition": "<h1>KAACE</h1><h4>See</h4><p><a href=\"keri-agreement-algorithm-for-control-establishment\">KERI agreement algorithm for control establishment</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "KAPI",
    "url": "https://kerisse.org",
    "anchor": "KAPI",
    "definition": "<h1>KAPI</h1><h4>Definition</h4><p>Application programmer interfaces (APIs) for the various components in the KERI ecosystem such as Controllers, Agents, Witnesses, Watchers, Registrars etc need by which they can share information. The unique properties of the KERI protocol require APIs that preserve those properties. We call the set of APIs the KERI API.<br><a href=\"https://github.com/WebOfTrust/kapi/blob/main/kapi.md\">Source Kapi Repo</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "keep",
    "url": "https://kerisse.org",
    "anchor": "keep",
    "definition": "<h1>keep</h1><h4>Definition</h4><p>Is KERI&#39;s and ACDC&#39;s user interface that uses the keripy agent for its backend. It uses the REST API exposed from the keripy agent.<br>Source: Philip Feairheller</p><h4>Interface</h4><p>Keep is a task orientated application for managing <a href=\"https://github.com/WebOfTrust/ietf-keri\">AIDs</a> in ecosystems, e.g. the <a href=\"https://www.gleif.org/en/lei-solutions/gleifs-digital-strategy-for-the-lei/introducing-the-verifiable-lei-vlei\">vLEI Ecosystem</a>.</p><h4>Usecases</h4><p>Keep can be used to:</p><ul><li>establish and manage local AIDs</li><li>create, join and manage distributed Multi-Sig AIDs (with or without delegation)</li><li>issue and revoke credentials specified within the vLEI Ecosystem</li></ul><p>More info on <a href=\"https://github.com/WebOfTrust/keep\">Github repo</a> of Keep.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "KEL",
    "url": "https://kerisse.org",
    "anchor": "KEL",
    "definition": "<h1>KEL</h1><p>A Key Event Log.</p><h4>See</h4><p><a href=\"key-event-log\">Key Event Log</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "KERI",
    "url": "https://kerisse.org",
    "anchor": "KERI",
    "definition": "<h1>KERI</h1><h4>See</h4><p><a href=\"key-event-receipt-infrastructure\">Key event receipt infrastructure</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "keri agreement algorithm for control establishment",
    "url": "https://kerisse.org",
    "anchor": "keri-agreement-algorithm-for-control-establishment",
    "definition": "<h1>keri agreement algorithm for control establishment</h1><p>##DefinitionAgreement on an event in a key event log <a href=\"KEL\">KEL</a> means each <a href=\"witness\">witness</a> has observed the same version of the event and each witness’ <a href=\"receipt\">receipt</a> has been received by every other witness.</p><p>Control establishment means that the set of agreeing witnesses along with the controller, of the identifier and associated keypairs, create a verifiable way to establish control authority for an identifier by reading all of the events in the KEL that have been agreed upon by the witnesses and the controller.</p><p>Acronyms: &#39;KA<sup>2</sup>CE&#39; &#39;<a href=\"KA2CE\">KA2CE</a>&#39; and &#39;KAACE&#39;. </p><h1>Whitepaper definition:</h1><p>Agreement with KA2CE is as follows:&quot;... the controller first creates its own receipt of the event and then promulgates the receipted event to witnesses in order to gather their promulgated receipts.<br>In this algorithm, an agreement consists of a specific version of an event with verifiable receipts(signatures) from the controller and a set of witnesses.<br>A state of agreement about a version of an event with respect to set of witnesses means that each witness in that set has witnessed the same version of that event and each witness’ receipt in that set has been promulgated to every other witness in that set.&quot;<br>Source [KERI Whitepaper Section 11.4.2 Agreement]</p><h1>Additional Definition</h1><p>A newly invented algorithm that is a simplification of PBFT class algorithms, separation of control of distributed consensus using distinct promulgation (witness) and confirmation (watcher) networks (new invention) but many non-BFT consensus algorithms do something similar and one BFT algorithm Stellar does something similar but not the same.</p><p>What if PBFT and Stellar had a baby that was missing liveness and total ordering but had safety and was completely decentralized, portable, and permission less? It would be named KERI.<br>(SamMSmith)</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "keri command line interface",
    "url": "https://kerisse.org",
    "anchor": "keri-command-line-interface",
    "definition": "<h1>keri command line interface</h1><h4>Definition</h4><p>Command line tool used to create identifiers, manage keys, query for KELs and participate in delegated identifiers or multi-signature group identifiers.  It also includes operations for running witnesses, watchers and cloud agents to establish a cloud presence for any identifier.</p><p>Most commands require a “name” parameter which references a named Habitat (think wallet) for performing the operation.</p><h5>More information</h5><p><a href=\"https://docs.google.com/presentation/d/1RIMX7J-cdg8OctoG4JqxPOfqKZsVNodqajtpQ0oFIyE/edit#slide=id.gf2168aef68_0_5\">IIW34 presentation slides</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "keri event stream",
    "url": "https://kerisse.org",
    "anchor": "keri-event-stream",
    "definition": "<h1>keri event stream</h1><h4>Definition</h4><p>A stream of verifiable KERI data, consisting of the <a href=\"key-event-log\">key event log</a> and other data such as a <a href=\"transaction-event-log\">transaction event log</a>. This data is a CESR event stream (TODO: link to IANA application/cesr media type) and may be serialized in a file using <a href=\"composable-event-streaming-representation\">CESR</a> encoding. We refer to these <em>CESR stream resources</em> as KERI event streams to simplify the vocabulary.</p><p>Source <code>did:webs</code> <a href=\"https://trustoverip.github.io/tswg-did-method-webs-specification/index.html\">ToIP specification</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "keri improvement doc",
    "url": "https://kerisse.org",
    "anchor": "keri-improvement-doc",
    "definition": "<h1>keri improvement doc</h1><h4>Definition</h4><p>These docs are modular so teams of contributors can independently work and create PRs of individual KIDs; KIDs answer the question &quot;how we do it&quot;. We add commentary to the indivudual KIDs that elaborate on the why. It has been split from the how to not bother implementors with the why.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "keri ox",
    "url": "https://kerisse.org",
    "anchor": "keri-ox",
    "definition": "<h1>keri ox</h1><h4>Definition</h4><p>The RUST programming-language implementation of the <a href=\"https://github.com/trustoverip/acdc/wiki/KERI\">KERI</a> protocol.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "keri request authentication method",
    "url": "https://kerisse.org",
    "anchor": "keri-request-authentication-method",
    "definition": "<h1>keri request authentication method</h1><h4>Definition</h4><p>All requests from a web client must use KRAM (KERI Request Authentication Method) for replay attack protection. The method is essentially based on each request body needing to include a date time string field in ISO-8601 format that must be within an acceptable time window relative to the server&#39;s date time. See the <a href=\"https://github.com/WebOfTrust/kram/blob/main/README.md\">KRAM Github repo</a></p><p>Source <a href=\"https://github.com/WebOfTrust/skwa\">SKWA GitHub repo</a>, more info in <a href=\"https://hackmd.io/ZbVAbNK1SPyT90-oNwN_cw\">HackMD.io write-up</a></p><h4>Related</h4><p><a href=\"SKWA\">SKWA</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "keri suite",
    "url": "https://kerisse.org",
    "anchor": "keri-suite",
    "definition": "<h1>keri suite</h1><h4>Definition</h4><p>The <em>KERI suite</em> is the set of inter-related developments (KERI, ACDC, OOBI, CESR, IPEX, etc) under the Web-of -Trust user on Github</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "keri suite search engine",
    "url": "https://kerisse.org",
    "anchor": "keri-suite-search-engine",
    "definition": "<h1>keri suite search engine</h1><h4>Definition</h4><p>KERISSE is the Docusaurus <a href=\"https://weboftrust.github.io/WOT-terms/\">self-education site</a> of Web-of-Trust GitHub repo with Typesense search facilities. Because of its focus on well-versed developers in the field of <a href=\"SSI\">SSI</a> and the support of their journey to understand the structure of the code and how things work in the <a href=\"keri-suite\">KERI suite</a> it&#39;s more a search engine that drills down on documentation.</p><h4>Related kerific</h4><p><a href=\"kerific\">kerific</a> is a front-end tool that show all available glossary-definition in <a href=\"KERISSE\">KERISSE</a> for matching words in any web text; combined in the <a href=\"https://weboftrust.github.io/WOT-terms/docs/dictionary?level=2\">Dictionary SSI</a>. This is based on a large JSON file</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "keria",
    "url": "https://kerisse.org",
    "anchor": "keria",
    "definition": "<h1>keria</h1><h4>Definition</h4><p>KERI Agent in the cloud. The KERIA service will expose 3 separate HTTP endpoints on 3 separate network interfaces.</p><ol><li>Boot Interface - Exposes one endpoint for Agent Worker initialization.</li><li>Admin Interface - The REST API for command and control operations from the Signify Client.</li><li>KERI Protocol Interface - CESR over HTTP endpoint for KERI protocol interactions with the rest of the world.</li></ol><p>More at <a href=\"https://github.com/WebOfTrust/keria/blob/main/docs/protocol.md\">Source Github repo</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "keride",
    "url": "https://kerisse.org",
    "anchor": "keride",
    "definition": "<h1>keride</h1><h4>Definition</h4><p>is a <em>Rust</em> programming language library for <a href=\"key-event-receipt-infrastructure\">Key Event Receipt Infrastructure</a>. Among its features is <a href=\"CESR\">CESR</a>, signing, prefixing, pathing, and parsing.<br>More on <a href=\"https://github.com/WebOfTrust/keride\">Github repo</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "keridemlia",
    "url": "https://kerisse.org",
    "anchor": "keridemlia",
    "definition": "<h1>keridemlia</h1><h4>Definition</h4><p>It is a contraction of <a href=\"key-event-receipt-infrastructure\">KERI</a> and <a href=\"https://en.wikipedia.org/wiki/Kademlia\">Kademlia</a>. It&#39;s the distributed database of Witness IP-addresses based on a <a href=\"distributed-hash-table\">Distributed Hash Table</a>. It also does the CNAME - stuff that <a href=\"domain-name\">Domain Name</a> Services (DNS) offers for KERI: the mapping between an identifier and it&#39;s controller AID stored in the KEL to its current wittness AID and the wittness AID to the IP address.<br>(@henkvancann)</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "kerific",
    "url": "https://kerisse.org",
    "anchor": "kerific",
    "definition": "<h1>kerific</h1><h4>Definition</h4><p><em>kerific</em> is a front plugin or extension that currently only works for Chrome and Brave. It matches words in any text on the web that is parseable for kerific and offers buttons to various glossaries and definitions in the <a href=\"self-sovereign-identity\">SSI</a> field.</p><h4>Relation with KERISSE</h4><p>All glossaries that <a href=\"KERISSE\">KERISSE</a> is allowed to scrape are combined in the <a href=\"https://weboftrust.github.io/WOT-terms/docs/dictionary?level=2\">Dictionary SSI</a>. This is based on a large JSON file, which kerific uses to match words in any text and serve the combined glossaries.</p><h4>Download kerific</h4><p>It is in the <a href=\"https://chromewebstore.google.com/detail/kerific/ckbmkbbmnfbeecfmoiohobcdmopekgmp?hl=nl\">Chrome Webstore</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "KERIMask",
    "url": "https://kerisse.org",
    "anchor": "KERIMask",
    "definition": "<h1>KERIMask</h1><h4>Definition</h4><p>A wallet similar to <em>MetaMask</em>, the manifestation will be a browser extension and it will connect to KERIA servers in order for a person to control AIDs from their browser.</p><h4>Status</h4><p>As of October 2023 KERIMask is only planned.</p><h4>Related</h4><p><a href=\"signify-keria-request-authentication-protocol\">Signify keria request authentication protocol</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "keripy",
    "url": "https://kerisse.org",
    "anchor": "keripy",
    "definition": "<h1>keripy</h1><h4>Definition</h4><p>The Python programming-language implementation of the <a href=\"KERI\">KERI</a> protocol.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "KERISSE",
    "url": "https://kerisse.org",
    "anchor": "KERISSE",
    "definition": "<h1>KERISSE</h1><h4>See</h4><p><a href=\"keri-suite-search-engine\">KERI suite search engine</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "KERL",
    "url": "https://kerisse.org",
    "anchor": "KERL",
    "definition": "<h1>KERL</h1><h4>See</h4><p><a href=\"key-event-receipt-log\">Key event receipt log</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "kever",
    "url": "https://kerisse.org",
    "anchor": "kever",
    "definition": "<h1>kever</h1><h4>Definition</h4><p>Kever is a key event verifier.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "key",
    "url": "https://kerisse.org",
    "anchor": "key",
    "definition": "<h1>key</h1><h4>Definition</h4><p>In our digital scope it&#39;s a mechanism for granting or restricting access to something. MAY be used to issue and prove, MAY be used to transfer and control over <em>identity</em> and <em>cryptocurrency</em>. <a href=\"https://en.wikipedia.org/wiki/Key_(cryptography)\">More</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "key compromise",
    "url": "https://kerisse.org",
    "anchor": "key-compromise",
    "definition": "<h1>key compromise</h1><h4>Definition</h4><p>Basically there are three infrastructures that are included in “key management” systems that must be protected:</p><ul><li>Key pair creation and storage</li><li>Event signing</li><li>Event signature verificationSo when we say “key compromise” we really mean compromise of one of those three things.</li></ul><h5>More information</h5><p>More in the security sections of <a href=\"https://github.com/SmithSamuelM/Papers/blob/master/whitepapers/IdentifierTheory_web.pdf\">Universal Identifier Theory</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "key event",
    "url": "https://kerisse.org",
    "anchor": "key-event",
    "definition": "<h1>key event</h1><h4>Definition</h4><p>Concretely, the serialized data structure of an entry in the key event log for an AID. Abstractly, the data structure itself. Key events come in different types and are used primarily to establish or change the authoritative set of keypairs and/or anchor other data to the authoritative set of keypairs at the point in the key event log actualized by a particular entry.<br>Source <a href=\"https://github.com/WebOfTrust/ietf-keri/blob/main/draft-ssmith-keri.md#basic-terminology\">Sam Smith</a></p><h4>Loose definition in KERI</h4><p>Events happening to controlling keys of an identifier recorded in a Key Event Log (KEL).</p><h4>Data structure angle</h4><p>A <em>key event</em> is data structure that consist of a header (Key Event header), a configuration section (Key Event Data spans Header and configuration) and signatures (Key event Message spans Data and signatures)<br>(<em>@henkvancann</em>)</p><img src=\"https://github.com/WebOfTrust/keri/blob/main/images/Key-Event.png\" width=\"500\" />"
  },
  {
    "organisation": "WebOfTrust",
    "term": "key event log",
    "url": "https://kerisse.org",
    "anchor": "key-event-log",
    "definition": "<h1>key event log</h1><h4>Definition</h4><p>A verifiable data structure that is a backward and forward chained, signed, append-only log of key events for an AID. The first entry in a KEL MUST be the one and only Inception Event of that AID.<br>Source <a href=\"https://github.com/WebOfTrust/ietf-keri/blob/main/draft-ssmith-keri.md#basic-terminology\">Sam Smith</a></p><h5>Put differently</h5><p>KELs are hash-chained Key Events. These are blockchains in a narrow definition, but not in the sense of ordering (not ordered) or global consensus mechanisms (which is not needed). (SamMSmith)</p><p>A KEL is KERI&#39;s VDS: the proof of key state of its identifier.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "key event message",
    "url": "https://kerisse.org",
    "anchor": "key-event-message",
    "definition": "<h1>key event message</h1><h4>Definition</h4><p>Message whose body is a key event and whose attachments may include signatures on its body.<br>Source <a href=\"https://github.com/WebOfTrust/ietf-keri/blob/main/draft-ssmith-keri.md#basic-terminology\">Sam Smith</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "key event receipt",
    "url": "https://kerisse.org",
    "anchor": "key-event-receipt",
    "definition": "<h1>key event receipt</h1><h4>Definition</h4><p>Message whose body references a key event and whose attachments MUST include one or more signatures on that key event.<br>Source <a href=\"https://github.com/WebOfTrust/ietf-keri/blob/main/draft-ssmith-keri.md#basic-terminology\">Sam Smith</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "key event receipt infrastructure",
    "url": "https://kerisse.org",
    "anchor": "key-event-receipt-infrastructure",
    "definition": "<h1>key event receipt infrastructure</h1><h4>Definition</h4><p>Also <code>KERI</code>. It&#39;s a new approach to decentralized identifiers and decentralized key management that promises significant benefits for <code>SSI</code> (self-sovereign identity) and <code>ToIP</code> (Trust over IP) infrastructure.<br>(<em>@drummondreed</em>)</p><p>KERI is an identifier system that fixes the internet. It&#39;s a fully decentralized permission-less key management architecture. It solves the <code>secure attribution problem</code> to its identifiers and allows portability.<br>(<em>@henkvancann</em>)</p><h4>Trust spanning layer for the internet</h4><p>While attribution has always been a non-exact science, we could come as close to attribution as “beyond a reasonable doubt”, those days are over with KERI.<br>KERI provides a trust spanning layer for the internet, because <strong>the protocol solves the secure attribution problem</strong> in a general, portable, fully decentralized way. There are more types of trust IN KERI but they all depend on the most important <em>attributive</em> trust.From KERI we&#39;ve learned that <em>secure attribution</em> is the essential problem for <em>any</em> <code>identifier system</code> to solve.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "key event receipt log",
    "url": "https://kerisse.org",
    "anchor": "key-event-receipt-log",
    "definition": "<h1>key event receipt log</h1><h4>Definition</h4><p>Signed Key Events, keeping track of establishment events. To begin with the inception event and any number of rotation events. We call that the establishment subsequence.The Key Event Receipt Logs are built from receipts of events signed by the witnesses of those events (these are called commitments); these are also append-only but not hash-chained.(@henkvancann)</p><p><img src=\"https://github.com/WebOfTrust/keri/blob/main/images/inception-rotation.png\" alt=\"\"></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "key management",
    "url": "https://kerisse.org",
    "anchor": "key-management",
    "definition": "<h1>key management</h1><h4>Definition</h4><p>management of cryptographic keys in a crypto-system. This includes dealing with the generation, exchange, storage, use, crypto-shredding (destruction) and replacement of keys (also <a href=\"#key-rotation\">rotation</a>). It includes cryptographic protocol design, key servers, user procedures, and other relevant protocols.</p><p>Successful key management is critical to the <em>security</em> of a crypto-system. It is the more challenging side of cryptography in a sense that it involves aspects of social engineering such as system policy, user training, organizational and departmental interactions, and coordination between all of these elements, in contrast to pure mathematical practices that can be automated.</p><p>More on <a href=\"https://en.wikipedia.org/wiki/Key_management\">wikipedia</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "key pair",
    "url": "https://kerisse.org",
    "anchor": "key-pair",
    "definition": "<h1>key pair</h1><h4>Definition</h4><p>is a private key and its corresponding public key resulting from a one-way crypto-graphical function; a key pair is used with an asymmetric-key (public-key) algorithm in a so called <a href=\"public-key-infrastructure\">Public Key Infrastructure</a> (PKI).</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "key state",
    "url": "https://kerisse.org",
    "anchor": "key-state",
    "definition": "<h1>key state</h1><h4>Definition</h4><p>Includes the set of currently authoritative keypairs for an AID and any other information necessary to secure or establish control authority over an AID.<br>Source <a href=\"https://github.com/WebOfTrust/ietf-keri/blob/main/draft-ssmith-keri.md#basic-terminology\">Sam Smith</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "key stretching",
    "url": "https://kerisse.org",
    "anchor": "key-stretching",
    "definition": "<h1>key stretching</h1><h4>Definition</h4><p>In <a href=\"https://en.wikipedia.org/wiki/Cryptography\">cryptography</a>, key stretching techniques are used to make a possibly weak <a href=\"https://en.wikipedia.org/wiki/Key_(cryptography)\">key</a>, typically a <a href=\"https://en.wikipedia.org/wiki/Password\">password</a> or <a href=\"https://en.wikipedia.org/wiki/Passphrase\">passphrase</a>, more secure against a <a href=\"https://en.wikipedia.org/wiki/Brute-force_attack\">brute-force attack</a> by increasing the resources (time and possibly space) it takes to test each possible key. </p><h4>Humans are predictable</h4><p>Passwords or passphrases created by humans are often short or predictable enough to allow <a href=\"https://en.wikipedia.org/wiki/Password_cracking\">password cracking</a>, and key stretching is intended to make such attacks more difficult by complicating a basic step of trying a single password candidate. Key stretching also improves security in some real-world applications where the key length has been constrained, by mimicking a longer key length from the perspective of a brute-force attacker.</p><p>More on source <a href=\"https://en.wikipedia.org/wiki/Key_stretching\">Wikipedia</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "key transparency",
    "url": "https://kerisse.org",
    "anchor": "key-transparency",
    "definition": "<h1>key transparency</h1><h4>Definition</h4><p>provides a lookup service for generic records and a public, tamper-proof audit log of all record changes. While being publicly auditable, individual records are only revealed in response to queries for specific IDs.</p><h5>Use cases</h5><ul><li>Key Transparency can be used as a <em>public key discovery service</em> to authenticate users and provides a mechanism to keep the service accountable.</li><li>Key Transparency empowers account owners to reliably see what public keys have been associated with their account, and it can be used by senders to see how long an account has been active and stable before trusting it. <a href=\"https://github.com/google/keytransparency/\">Source</a></li></ul><h5>Merkle tree</h5><p>Key Transparency does this by using piece of blockchain technology called a Merkle Tree.<br>More on <a href=\"https://security.stackexchange.com/questions/149125/how-does-key-transparency-work\">Stackexchange</a> how key transparency works.<br>(<em>@henkvancann</em>)</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "keystore",
    "url": "https://kerisse.org",
    "anchor": "keystore",
    "definition": "<h1>keystore</h1><h4>Definition</h4><p>A keystore in KERI is the encrypted data store that hold the private keys for a collection of AIDs.<br>Source: Philip Feairheller.</p><h4>KERI related</h4><p>KERI explicitly distinguishes <a href=\"keystore\">keystore</a> and <a href=\"wallet\">wallet</a>; the latter being a superset of the former. <a href=\"keep\">Keep</a> is KERI&#39;s and ACDC&#39;s user interface with Keripy agent API as a back end.</p><h4>Beware</h4><p>A <a href=\"https://en.wikipedia.org/wiki/Java_KeyStore\">Java Keystore</a> is a non-related concept!</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "KID",
    "url": "https://kerisse.org",
    "anchor": "KID",
    "definition": "<h1>KID</h1><h4>See</h4><p><a href=\"keri-improvement-doc\">KERI improvement doc</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "kli",
    "url": "https://kerisse.org",
    "anchor": "kli",
    "definition": "<h1>kli</h1><h4>See</h4><p><a href=\"keri-command-line-interface\">KERI command line interface</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "KRAM",
    "url": "https://kerisse.org",
    "anchor": "KRAM",
    "definition": "<h1>KRAM</h1><h4>See</h4><p><a href=\"keri-request-authentication-method\">KERI Request Authentication Method</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "ksn",
    "url": "https://kerisse.org",
    "anchor": "ksn",
    "definition": "<h1>ksn</h1><h4>Definition</h4><p>ksn = state, key state notice</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "large language model",
    "url": "https://kerisse.org",
    "anchor": "large-language-model",
    "definition": "<h1>large language model</h1><h4>Definition</h4><p>A large language model (LLM) is a <a href=\"https://en.wikipedia.org/wiki/Language_model\">language model</a> consisting of a <a href=\"https://en.wikipedia.org/wiki/Artificial_neural_network\">neural network</a> with many parameters (typically billions of weights or more), trained on large quantities of unlabeled text using <a href=\"https://en.wikipedia.org/wiki/Self-supervised_learning\">self-supervised learning</a> or <a href=\"https://en.wikipedia.org/wiki/Semi-supervised_learning\">semi-supervised learning</a>.<br>More on <a href=\"https://en.wikipedia.org/wiki/Large_language_model\">Source Wikipedia</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "lead bytes",
    "url": "https://kerisse.org",
    "anchor": "lead-bytes",
    "definition": "<h1>lead bytes</h1><h4>Definition</h4><p>In order to avoid confusion with the use of the term <a href=\"pad\">pad</a> character, when <a href=\"pre-pad\">pre-pad</a>ding with bytes that are not replaced later, we use the term <strong>lead bytes</strong>. So lead-bytes are added &quot;pre-conversion&quot;.</p><h4>CESR related</h4><p>The term <a href=\"pad\">pad</a> may be confusing not merely because both ways use a type of padding but it is also true that the number of pad characters when padding <em>post-conversion</em> equals the number of lead bytes when padding <em>pre-conversion</em>.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "ledger backer",
    "url": "https://kerisse.org",
    "anchor": "ledger-backer",
    "definition": "<h1>ledger backer</h1><h4>Definition</h4><p>A <a href=\"witness\">witness</a> in KERI that is ledger-registered. It&#39;s a type of <a href=\"backer\">backer</a> that proof its authenticity by a signing key anchored to the public key of a data item on a (public) blockchain.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "legal entity",
    "url": "https://kerisse.org",
    "anchor": "legal-entity",
    "definition": "<h1>legal entity</h1><h4>Definition</h4><p>Unique parties that are legally or financially responsible for the performance of financial transactions or have the legal right in their jurisdiction to enter independently into legal contracts.</p><h4>More detailed and inclusive</h4><p>As defined in ISO 17442:2020, includes, but is not limited to, the unique parties above, regardless of whether they are incorporated or constituted in some other way (e.g., trust, partnership, contractual). It includes governmental organizations and supranationals and individuals when acting in a business capacity but excludes natural persons. It also includes international branches.</p><p>Paraphrased by @henkvancann from <a href=\"https://www.gleif.org/vlei/introducing-the-vlei-ecosystem-governance-framework/2022-02-07_verifiable-lei-vlei-ecosystem-governance-framework-glossary-draft-publication_v0.9-draft.pdf\">source</a> Draft vLEI Ecosystem Governance Framework Glossary.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "legal entity engagement context role vlei credential governance framework",
    "url": "https://kerisse.org",
    "anchor": "legal-entity-engagement-context-role-vlei-credential-governance-framework",
    "definition": "<h1>legal entity engagement context role vlei credential governance framework</h1><h4>Definition</h4><p>A document that details the requirements for <a href=\"vlei-role-credential\">vLEI Role Credentials</a> <strong>issued to</strong> representatives of a Legal Entity <em>in other than official roles</em> but in functional or other context of engagement.<br><a href=\"https://www.gleif.org/vlei/introducing-the-vlei-ecosystem-governance-framework/2022-02-07_verifiable-lei-vlei-ecosystem-governance-framework-glossary-draft-publication_v0.9-draft.pdf\">Source</a>: Draft vLEI Ecosystem Governance Framework Glossary.</p><h4>Related</h4><ul><li><a href=\"legal-entity\">Legal entity</a></li><li><a href=\"engagement-context-role\">Engagement context role (ECR)</a></li><li><a href=\"vlei-credential\">vLEI credential</a></li><li><a href=\"governance-framework\">Governance framework</a></li></ul>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "legal entity official organizational role vlei credential governance framework",
    "url": "https://kerisse.org",
    "anchor": "legal-entity-official-organizational-role-vlei-credential-governance-framework",
    "definition": "<h1>legal entity official organizational role vlei credential governance framework</h1><h4>Definition</h4><p>A document that details the requirements for <a href=\"vlei-role-credential\">vLEI Role Credentials</a> <strong>issued to</strong> official representatives of a Legal Entity.<br><a href=\"https://www.gleif.org/vlei/introducing-the-vlei-ecosystem-governance-framework/2022-02-07_verifiable-lei-vlei-ecosystem-governance-framework-glossary-draft-publication_v0.9-draft.pdf\">Source</a>: Draft vLEI Ecosystem Governance Framework Glossary.</p><h4>Related</h4><ul><li><a href=\"legal-entity\">Legal entity</a></li><li><a href=\"official-organizational-role\">Official organizational role (OOR)</a></li><li><a href=\"vlei-credential\">vLEI credential</a></li><li><a href=\"governance-framework\">Governance framework</a></li></ul>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "legal entity vlei credential governance framework",
    "url": "https://kerisse.org",
    "anchor": "legal-entity-vlei-credential-governance-framework",
    "definition": "<h1>legal entity vlei credential governance framework</h1><h4>Definition</h4><p>A <em>document</em> that details the requirements for vLEI Credential <strong>issued by</strong> a <a href=\"qualified-vlei-issuer\">Qualified vLEI Issuer</a> to a <a href=\"legal-entity\">Legal Entity</a>.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "legitimized human meaningful identifier",
    "url": "https://kerisse.org",
    "anchor": "legitimized-human-meaningful-identifier",
    "definition": "<h1>legitimized human meaningful identifier</h1><h4>Definition</h4><p>An <a href=\"AID\">AID</a> and its associated self-certifying trust basis gives rise to a trust domain for associated cryptographically verifiable non-repudiable statements. Every other type of identifier including human meaningful identifiers may then be secured in this resultant trust domain via an <a href=\"end-verifiable\">end-verifiable</a> <a href=\"authorization\">authorization</a>. This authorization legitimizes that human meaningful identifier as an LID through its association with an AID. The result is a secured trust domain specific identifier couplet of aid|lid.</p><h4>Problematic human meaningfulness</h4><p>Human meaningfulness has two limiting characteristics: <em>scarcity</em> and <em>security</em>. Scarcity exhibits itself in various undesirable ways such as name squatting, or race conditions to register or otherwise assert control. More importantly, there is no inherent security property of a human meaningful identifier. This makes them insecure by default. Happily an <a href=\"autonomic-identifier\">AID</a> comes to rescue.</p><h4>Couplet for scarcity and security</h4><p>The trust domain of an AID provides a context in which to interpret the appearance of any LID. The AID is implied by the context. This means that the AID may not need to be prepended or appear with the LID. This allows the human meaningfulness of the LID to exhibit itself without being encumbered by the AID.</p><p>This model of an <em>aid|lid couplet</em> unifies all desirable identifier properties into one identifier system model. The AID part provides the security infrastructure while the LID part provides the application specific human meaningfulness. The connection between the two is provided by a legitimizing authorization represented by the |.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "LEI",
    "url": "https://kerisse.org",
    "anchor": "LEI",
    "definition": "<h1>LEI</h1><h4>Definition</h4><p>Legal Entity Identifier</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "levels of assurance",
    "url": "https://kerisse.org",
    "anchor": "levels-of-assurance",
    "definition": "<h1>levels of assurance</h1><h4>Definition</h4><p>Identity and other trust decisions are often not binary. They are judgement calls. Any time that judgement is not a simple “Yes/No” answer, you have the option for levels of assurance. Also &#39;LoA&#39;.</p><h5>Relationship with KERI</h5><p>KERI has the same LOAs for entropy and trust in human behavior preserving the security of key pairs and preserving their own privacy. It has high LOAs for the cryptographic bindings of controllers and identifiers. Also the validation of witnesses and watchtowers has high a LOA.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "LID",
    "url": "https://kerisse.org",
    "anchor": "LID",
    "definition": "<h1>LID</h1><h4>See</h4><p><a href=\"legitimized-human-meaningful-identifier\">Legitimized human meaningful identifier </a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "listed identifier",
    "url": "https://kerisse.org",
    "anchor": "listed-identifier",
    "definition": "<h1>listed identifier</h1><h4>Definition</h4><p>Is a list in an <a href=\"authentic-chained-data-container\">ACDC</a> of authorised did:webs identifier + method; the list appears in the metadata of the did:webs DID-doc.<br>Source: paraphrased Samuel Smith, Zoom meeting <em>KERI dev</em> Thursday Nov 9 2023</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "liveness",
    "url": "https://kerisse.org",
    "anchor": "liveness",
    "definition": "<h1>liveness</h1><h4>Definition</h4><p>Liveness refers to a set of properties of concurrent systems, that require a system to make progress despite the fact that its concurrently executing components (&quot;processes&quot;) may have to &quot;take turns&quot; in critical sections, parts of the program that cannot be simultaneously run by multiple processes.</p><h5>Meaning</h5><p>A <em>liveness</em> property in concurrent systems states that &quot;something good will eventually occur&quot;.</p><p>Liveness guarantees are important properties in operating systems and distributed systems.<br>Unlike liveness properties, <a href=\"#safety-properties\">safety properties</a> can be violated by a finite execution of a distributed system. All properties can be expressed as the intersection of safety and liveness properties.<br>| TBW  | prio 2 how is liveness important in distributed systems? how does KERI guarantee liveness}</p><h5>More information</h5><p>On <a href=\"https://en.wikipedia.org/wiki/Liveness\">wikipedia</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "LLM",
    "url": "https://kerisse.org",
    "anchor": "LLM",
    "definition": "<h1>LLM</h1><h4>See <a href=\"large-language-model\">Large Language Model</a></h4>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "LoA",
    "url": "https://kerisse.org",
    "anchor": "LoA",
    "definition": "<h1>LoA</h1><h4>See</h4><p><a href=\"levels-of-assurance\">Levels of assurance</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "LoC",
    "url": "https://kerisse.org",
    "anchor": "LoC",
    "definition": "<h1>LoC</h1><h4>See</h4><p><a href=\"loci-of-control\">Loci of control</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "loci of control",
    "url": "https://kerisse.org",
    "anchor": "loci-of-control",
    "definition": "<h1>loci of control</h1><h4>Definition</h4><p>Locus of control is the degree to which people believe that they, as opposed to external forces (beyond their influence), have control over the outcome of events in their lives. Also &#39;LoC&#39;.<br>More on <a href=\"https://en.wikipedia.org/wiki/Locus_of_control\">wikipedia</a></p><h4>In SSI domain</h4><p>In SSI loci-of-control was decribed by Tim Bouma in 2019:<img src=\"https://github.com/WebOfTrust/keri/blob/main/images/loci-of-control.png?raw=true\" alt=\"\"></p><h4>KERI development</h4><p>In KERI this is further developed:  </p><ul><li>Key Event Promulgation Service = from the <code>controller</code>&#39;s point.</li><li>key event confirmation service = from the <code>validator</code>&#39;s point.</li></ul><p>The separation of promulgation and confirmation into two separate <em>loci-of-control</em>, one the controller’s, and the other the validator’s simplifies the interaction space between these two parties.<br>The design principle of separating the loci-of-control between controllers and validators removes one of the major drawbacks of total ordered distributed consensus algorithms, that is, shared governance over the pool of nodes that provide the consensus algorithm.<br>The primary purpose of the <a href=\"#keri-agreement-algorithm-for-control-establishment\">KA2CE</a> algorithm is to protect the controller’s ability to promulgate the authoritative copy of its key event history despite external attack. This includes maintaining a sufficient degree of availability such that any validator may obtain an authoritative copy on demand.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "locked state",
    "url": "https://kerisse.org",
    "anchor": "locked-state",
    "definition": "<h1>locked state</h1><h4>Definition</h4><p>The default status a KERI data store is in once it has been created using a <a href=\"passcode\">passcode</a>; it is by default encrypted.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "management TEL",
    "url": "https://kerisse.org",
    "anchor": "management-TEL",
    "definition": "<h1>management TEL</h1><h4>See</h4><p><a href=\"management-transaction-event-log\">Management transaction event log</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "management transaction event log",
    "url": "https://kerisse.org",
    "anchor": "management-transaction-event-log",
    "definition": "<h1>management transaction event log</h1><h4>Definition</h4><p>A &#39;management TEL&#39; will signal the creation of the <em>Virtual Credential Registry (VCR)</em> and track the list of <em>Registrars</em> that will act as <em>Backers</em> for the individual _ transaction event logs (TELs)_ for each virtual credential (VC).</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "media type",
    "url": "https://kerisse.org",
    "anchor": "media-type",
    "definition": "<h1>media type</h1><h4>Definition</h4><p>A Media type (formerly known as <em>MIME type</em>) is a standard way to indicate the nature and format of a file, like &#39;image/jpeg&#39; for JPEG images, used on the internet.</p><p>It is a two-part identifier for file formats and format contents transmitted on the internet. Their purpose is somewhat similar to file extensions in that they identify the intended data format.</p><p>The <a href=\"https://en.wikipedia.org/wiki/Internet_Assigned_Numbers_Authority\">Internet Assigned Numbers Authority (IANA)</a> is the official authority for the standardization and publication of these classifications.  </p><p>More on source <a href=\"https://en.wikipedia.org/wiki/Media_type\">Wikipedia</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "message",
    "url": "https://kerisse.org",
    "anchor": "message",
    "definition": "<h1>message</h1><h4>Definition</h4><p>serialized data structure event, an actionable message</p><h4>KERI details</h4><p>Consists of a serialized data structure that comprises its body and a set of serialized data structures that are its attachments. Attachments may include but are not limited to signatures on the body.<br>Source <a href=\"https://github.com/WebOfTrust/ietf-keri/blob/main/draft-ssmith-keri.md#basic-terminology\">Sam Smith</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "messagepack",
    "url": "https://kerisse.org",
    "anchor": "messagepack",
    "definition": "<h1>messagepack</h1><h4>Definition</h4><p>MessagePack is a <a href=\"https://en.wikipedia.org/wiki/Computer\">computer</a> data interchange format. It is a binary form for representing simple <a href=\"https://en.wikipedia.org/wiki/Data_structure\">data structures</a> like <a href=\"https://en.wikipedia.org/wiki/Array_data_structure\">arrays</a> and <a href=\"https://en.wikipedia.org/wiki/Associative_array\">associative arrays</a>. MessagePack aims to be as compact and simple as possible. The official implementation is available in a variety of languages</p><h5>More on Wikipedia</h5><p><a href=\"https://en.wikipedia.org/wiki/MessagePack\">MessagePack</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "MFA",
    "url": "https://kerisse.org",
    "anchor": "MFA",
    "definition": "<h1>MFA</h1><h4>See</h4><p><a href=\"multi-factor-authentication\">Multi-factor Authentication</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "MIME type",
    "url": "https://kerisse.org",
    "anchor": "MIME-type",
    "definition": "<h1>MIME type</h1><h4>See</h4><p><a href=\"media-type\">Media type</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "moobi",
    "url": "https://kerisse.org",
    "anchor": "moobi",
    "definition": "<h1>moobi</h1><h4>Definition</h4><p>Multi <a href=\"OOBI\">OOBI</a> would allow to share a bunch of different end-points (oobis) all at once. A way for a single store to share multiple endpoints for that store. </p><h4>Limitation</h4><p>Those oobis would still need a way to authorize the endpoint provider, the endpoint role, for each of the different things. A multi-sig becomes a messy collaboration effort, especially when you take into account signing at the edge. You would need an authorization record for each end-point. And then pass this to all the members and ask them to collaborate.</p><h4>Also see</h4><p>Source: Philip Feairheller <a href=\"https://github.com/WebOfTrust/keri/discussions/39\">KERI-dev meeting</a> July 27 2023</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "most compact",
    "url": "https://kerisse.org",
    "anchor": "most-compact",
    "definition": "<h1>most compact</h1><h4>Definition</h4><p>An <a href=\"ACDC\">ACDC</a> that, for a given level of disclosure, is as compact as it can be which means</p><ul><li>it has the <a href=\"SAID\">SAID</a>s for each section that are not disclosed </li><li>it has expanded sections that are disclosed</li></ul><p>Multiple forms of a single ACDC can be called the &quot;most compact&quot; version given that each level of graduated disclosure will have a &quot;most compacted&quot; version. If all the blocks are expanded of a most compact version then it becomes fully expanded. If all the blocks are replaced with SAIDs then it becomes fully compacted. </p><p>This form is a part of the graduated disclosure objective.</p><h4>See also</h4><p><a href=\"fully-expanded\">Fully (expanded)</a> version of an ACDC<br><a href=\"fully-compact\">Fully compact(ed)</a> version of an ACDC</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "multi factor authentication",
    "url": "https://kerisse.org",
    "anchor": "multi-factor-authentication",
    "definition": "<h1>multi factor authentication</h1><h4>Definition</h4><p>Authentication by combining multiple security factors. Well-known factors are <em>what you know</em>, <em>what you have</em> and <em>what you are</em>. </p><h4>Wikipedia citation</h4><p>Multi-factor authentication (MFA; two-factor authentication, or 2FA, along with similar terms) is an <a href=\"https://en.wikipedia.org/wiki/Electronic_authentication\">electronic authentication</a> method in which a user is granted access to a website or application only after successfully presenting two or more pieces of evidence (or factors) to an <a href=\"authenticity\">authentication</a> mechanism.<br><a href=\"https://en.wikipedia.org/wiki/Multi-factor_authentication\">Source Wikipedia</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "multi valent",
    "url": "https://kerisse.org",
    "anchor": "multi-valent",
    "definition": "<h1>multi valent</h1><h4>Definition</h4><p>A delegator may have multiple delegates thereby enabling elastic horizontal scalability. Multiple delegates from a single delegator. Furthermore, each delegate may act as a delegator for its own delegates to form a <em>nested delegation tree</em>.<br>This allows mapping key management infrastructures to any hierarchically structured organization&#39;s computing infrastructure. With this construction, both security and performance trade-offs may be made as appropriate. Such an extended delegation setup we call a multivalent key management infrastructure.</p><p><img src=\"https://github.com/weboftrust/WOT-terms/static/img/multivalent-delegated-controller-key-management-infrastructure.png\" alt=\"multivalent-delegated-controller-key-management-infrastructure\"></p><p>Source <a href=\"https://github.com/SmithSamuelM/Papers/blob/master/whitepapers/IdentifierTheory_web.pdf\">Universal Identifier Theory</a> by Samuel Smith</p><h4>Also see</h4><p><a href=\"univalent\">Univalent</a><a href=\"bivalent\">Bivalent</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "multicodec",
    "url": "https://kerisse.org",
    "anchor": "multicodec",
    "definition": "<h1>multicodec</h1><h4>Definition</h4><p>Is a self-describing multi-format, it wraps other formats with a tiny bit of self-description. A multi-codec identifier is both a variant (variable length integer) and the code identifying data. </p><p>See more at <a href=\"https://github.com/multiformats/multicodec\">GitHub Multi-codec</a></p><p>Multi-codec is an agreed-upon codec table. It is designed for use in binary representations, such as keys or identifiers (i.e CID). It is then used as a prefix to identify the data that follows.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "multiplexing",
    "url": "https://kerisse.org",
    "anchor": "multiplexing",
    "definition": "<h1>multiplexing</h1><h4>Definition</h4><p>In <a href=\"https://en.wikipedia.org/wiki/Telecommunications\">telecommunications</a> and <a href=\"https://en.wikipedia.org/wiki/Computer_network\">computer networking</a>, multiplexing (sometimes contracted to <em>muxing</em>) is a method by which multiple analog or digital signals are combined into one signal over a <a href=\"https://en.wikipedia.org/wiki/Shared_medium\">shared medium</a>. The aim is to share a scarce resource - a physical <a href=\"https://en.wikipedia.org/wiki/Transmission_medium\">transmission medium</a>.<br>More on source <a href=\"https://en.wikipedia.org/wiki/Multiplexing\">Wikipedia-page</a></p><h4>CESR related</h4><p>Because of <a href=\"count-code\">count codes</a> and the <a href=\"composability\">composability</a> - and <a href=\"concatenation\">concatenation</a> property in CESR, <a href=\"pipelining\">pipelining</a> is possible, which then uses <em>multiplexing</em> (combining <a href=\"self-framing\">self-framing</a> primitives) and <em>de-multiplexing</em> (unravelling self-framing <a href=\"primitive\">primitives</a>). The addition of group framing codes as independently composable primitives enables <a href=\"hierarchical-composition\">hierarchical compositions</a>.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "multisig",
    "url": "https://kerisse.org",
    "anchor": "multisig",
    "definition": "<h1>multisig</h1><h4>Definition</h4><p>also multi-signature or multisignature; is a <a href=\"https://en.wikipedia.org/wiki/Digital_signature\">digital signature</a> scheme which allows a group of users to sign a single piece of digital data.<br>Paraphrased by @henkvancann from Wikipedia <a href=\"https://en.wikipedia.org/wiki/Multisignature\">source</a></p><h4>KERI multi-signatures</h4><p>The KERI team has conceptually chosen for minimal sufficient means and so-called <em>dumb crypto</em>: &quot;&#39;Dumb technology&#39; is freely available, understandable to everyone and easy to implement. In our case: just hashes and digital signatures.&quot;</p><p>KERI has thresholded set of <a href=\"non-repudiable\">non-repudiable</a> signatures.<br>KERI&#39;s CESR, and therefore KERI and ACDC is extensible with the latest more sophisticated multi-signature schemes like Schnorr signatures. </p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "naive conversion",
    "url": "https://kerisse.org",
    "anchor": "naive-conversion",
    "definition": "<h1>naive conversion</h1><h4>Definition</h4><p>Non-CESR Base64 conversion. How people are used to using the Base64 encode and decode.  Without <a href=\"pre-pad\">pre-pad</a>ding etc all the stuff CESR does to ensure aligns on 24 bit boundaries so <a href=\"CESR\">CESR</a> never uses the &#39;=&#39; pad character. But naive <a href=\"base64\">Base64</a> will pad if the length is not 24 bit aligned.<br>Source: Samuel Smith in <a href=\"https://github.com/WebOfTrust/ietf-cesr/issues/34\">issue 34</a></p><p>Naive conversion is a text to binary conversion or vice versa that doesn&#39;t anticipate on either <a href=\"composability\">composability</a> and / or on the <a href=\"concatenation\">concatenation</a> capability of the result of such an operation.</p><h4>CESR related</h4><p>In the <a href=\"https://github.com/WebOfTrust/ietf-cesr/blob/main/draft-ssmith-cesr.md#conversions\">IETF draft CESR</a> there&#39;s much attention for naive <a href=\"base64\">Base64</a> conversions, because it helps explaining the necessity of stable code characters and padding in CESR to achieve:</p><ul><li><a href=\"self-framing\">self-framing</a></li><li>round-robin <a href=\"composability\">composability</a></li><li><a href=\"concatenation\">concatenation</a> options</li><li><a href=\"pipelining\">pipelined</a> streaming</li></ul>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "namespace",
    "url": "https://kerisse.org",
    "anchor": "namespace",
    "definition": "<h1>namespace</h1><h4>Definition</h4><p>In an identity system, an identifier can be generalized to a <em>namespace</em> to provide a systematic way of organizing identifiers for related resources and their attributes. A namespace is a grouping of symbols or identifiers for a set of related objects. </p><p>A namespace employs some scheme for assigning identifiers to the elements of the namespace. A simple name-spacing scheme uses a prefix or prefixes in a hierarchical fashion to compose identifiers. The following is an example of a namespace scheme for addresses within the USA that uses a hierarchy of prefixes:</p><pre><code>state.county.city.zip.street.number.</code></pre><p>An example element in this namespace may be identified with the following:</p><pre><code>utah.wasatch.heber.84032.main.150S.</code></pre>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "ndigs",
    "url": "https://kerisse.org",
    "anchor": "ndigs",
    "definition": "<h1>ndigs</h1><h4>Definition</h4><p>Digests of public keys, not keys themselves. The reason to use ndigs is to prove control over public keys or to hide keys. It&#39;s used in Keripy and consists of a list of qualified base64 digests of public rotation key derivations.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "nested cooperative delegated identifiers",
    "url": "https://kerisse.org",
    "anchor": "nested-cooperative-delegated-identifiers",
    "definition": "<h1>nested cooperative delegated identifiers</h1><h4>Definition</h4><p>In KERI delegations are cooperative, this means that both the delegator and delegate must contribute to a delegation. The delegator creates a cryptographic commitment in either a rotation or interaction event via a seal in a delegated establishment event. The delegate creates a cryptographic commitment in its establishment event via a seal to the delegating event. Each commitment is signed respectively by the committer. This cooperative delegation together with special superseding recovery rules for events enables cooperative recovery.</p><h5>Recursive application</h5><p>This superseding rule may be recursively applied to multiple levels of delegation, thereby enabling recovery of any set of keys signing or pre-rotated in any lower levels by a superseding rotation delegation at the next higher level. This cascades the security of the key management infrastructure of higher levels to lower levels. This is a distinctive security feature of the cooperative delegation of identifiers in KERI.</p><h5>More information</h5><p>More in chapter Nested Delegation Recovery of the <a href=\"https://github.com/SmithSamuelM/Papers/blob/master/whitepapers/KERI_WP_2.x.web.pdf\">whitepaper</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "NFT",
    "url": "https://kerisse.org",
    "anchor": "NFT",
    "definition": "<h1>NFT</h1><h4>See</h4><p><a href=\"non-fungible-token\">Non-fungible token</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "non establishment event",
    "url": "https://kerisse.org",
    "anchor": "non-establishment-event",
    "definition": "<h1>non establishment event</h1><h4>Definition</h4><p>A key event tieing or anchoring a data payload to the <a href=\"key-event-log\">key event log</a> of an identifier. This data payload includes a set of one or more <a href=\"seal\">seals</a> each of which anchor data to the key event.<br>The data payload event may be used to make verifiable, authoritative statements on behalf of the identifier controller.<br>These might include authorizations of encryption keys, communication routes, service endpoints, and so forth.</p><p>Transactions or workflows composed of non-establishment events are secured by virtue of being included in the verifiable key eventsequence with the verifiable authoritative establishment events.</p><p>A non-establishment event is a key event that does not change the current key-state for an AID. </p><p>Source <a href=\"https://github.com/SmithSamuelM/Papers/blob/master/whitepapers/KERI_WP_2.x.web.pdf\">KERI Whitepaper Section 7.22 page 46</a><br>Source <a href=\"https://github.com/WebOfTrust/ietf-keri/blob/main/draft-ssmith-keri.md#basic-terminology\">Sam Smith</a></p><h4>Made easier</h4><p>A non-establishment event is a key event that does not change the current key-state for an <a href=\"identifier\">identifier</a>. The event (only) ties or anchors digital data to the <a href=\"key-event-log\">key event log</a> of the identifier.<br><em>(@henkvancann)</em></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "non fungible token",
    "url": "https://kerisse.org",
    "anchor": "non-fungible-token",
    "definition": "<h1>non fungible token</h1><h4>Definition</h4><p>A non-fungible token (NFT) is a <a href=\"https://en.wikipedia.org/wiki/Security_(finance)\">financial security</a> consisting of digital data stored in a <a href=\"https://en.wikipedia.org/wiki/Blockchain\">blockchain</a>, a form of <a href=\"https://en.wikipedia.org/wiki/Distributed_ledger\">distributed ledger</a>. </p><h5>Ownership</h5><p>The ownership of an NFT is recorded in a blockchain, and can be transferred by the owner, allowing NFTs to be sold and traded. NFTs can be created by anybody, and require few or no coding skills to create. NFTs typically contain references to <a href=\"https://en.wikipedia.org/wiki/Digital_file\">digital files</a> such as photos, videos, and audio. </p><h5>Fungible</h5><p>Because NFTs are uniquely identifiable assets, they differ from <a href=\"https://en.wikipedia.org/wiki/Cryptocurrencies\">cryptocurrencies</a>, which are <a href=\"https://en.wikipedia.org/wiki/Fungibility\">fungible</a>.</p><h5>KERI / ACDC related</h5><p>There&#39;s nothing &quot;non fungible&quot; to a Non-fungible Token in our perspective. It&#39;s just another unique identifier controlled by a public private key pair. The fact that an NFT uniquely identifies a digital entity isn&#39;t very impressing, because of their </p><ul><li>security fault : the security is dependent of the host ledger the NFT is anchored to. </li><li>transferability fault : you need a transaction to transfer ownership on the host blockchain, controlling keys can&#39;t be rotated</li><li>monitization fault : there&#39;s no good reason whatsoever to mingle the value aspect and the uniqueness property of a digital asset, and unfortunately that&#39;s what NFTs are doing.</li></ul><p>Because uniqueness tokenization &quot;done right&quot; is to be praised, <strong>it&#39;s recommended to look into KERI identifiers and ACDC veracity claims to support the value of the identifiers</strong>, whose monetary value can be recorded elsewhere and separate from the identifier system. Key (pre-)rotation can transfer ownership of a unique digital asset without the need of a transaction on a blockchain.</p><h5>Asset backing</h5><p>Sometimes an NFT doesn&#39;t only uniquely represent a digital asset. It can be the digital twin of - and is also (hopefully) backed by - a real-life asset. Even in this perspective KERI and ACDC are more emcompassing too, because in the KERI/ACDC case we are dealing with globally portable unique digital twins, not anchored to (read <code>locked in</code>) a blockchain.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "non interactive authentication design",
    "url": "https://kerisse.org",
    "anchor": "non-interactive-authentication-design",
    "definition": "<h1>non interactive authentication design</h1><h4>Definition</h4><p>A group of approaches having non-interactive mechanisms that pose unique problems because they do not allow a challenge response reply handshake. A request is submitted that is self-authenticating without additional interaction. The main benefits of non-interactive authentication are scalability and path independent end-to-end verifiability. These benefits become more important in decentralized applications that employ <a href=\"zero-trust\">zero-trust</a> architectures.<br>More in <a href=\"https://hackmd.io/ZbVAbNK1SPyT90-oNwN_cw\">source</a> Keri Request Authentication Mechanism (KRAM) by Samuel Smith</p><h4>Related</h4><p><a href=\"interactive-authentication-design\">Interactive authentication design</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "non normative",
    "url": "https://kerisse.org",
    "anchor": "non-normative",
    "definition": "<h1>non normative</h1><h4>Definition</h4><p>A theory is called non-normative if it does not do what has described under &#39;<a href=\"normative\">Normative</a>&#39;. In general, the purpose of non-normative theories is not to give answers, but rather to describe possibilities or predict what might happen as a result of certain actions.<br><a href=\"https://www.quora.com/What-is-the-difference-between-normative-and-non-normative?share=1\">Source</a>.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "non repudiable",
    "url": "https://kerisse.org",
    "anchor": "non-repudiable",
    "definition": "<h1>non repudiable</h1><h4>Definition</h4><p>Non-repudiation refers to a situation where a statement&#39;s author <strong>cannot successfully dispute</strong> its authorship or the validity of an associated contract, signature or commitment.<br>The term is often seen in a legal setting when the authenticity of a signature is being challenged. In such an instance, the authenticity is being &quot;repudiated&quot;.</p><h4>KERI related</h4><p>Any non-repudiable signature made with the private key may be verified by extracting the public key from either the identifier itself or incepting information uniquely associated with the cryptographic derivation process for the identifier. In a basic SCID, the mapping between an identifier and its controlling public key is self-contained in the identifier itself.<br>Source <a href=\"https://github.com/WebOfTrust/ietf-keri/blob/main/draft-ssmith-keri.md#self-certifying-identifier-scid\">Sam Smith</a></p><h4>The inner-working of KERI&#39;s non-repudiation</h4><p>The function of KERI&#39;s identifier-system security overlay is to establish the authenticity (or authorship) of the message payload in an IP Packet by verifiably attributing it to a cryptonymous self-certifying identifier (AID) via an attached set of one or more asymmetric keypair-based non-repudiable digital signatures. The current valid set of associated asymmetric keypair(s) is proven via a verifiable data structure called a key event log (KEL).<br>An authenticatable (verifiable) internet message (packet) or data item includes the identifier and data in its payload. Attached to the payload is a digital signature(s) made with the private key(s) from the controlling keypair(s). Given the identifier in a message, any verifier of a message (data item) can use the identifier system mapping to look up the public key(s) belonging to the controlling keypair(s). The verifier can then verify the attached signature(s) using that public key(s). <strong>Because the payload includes the identifier, the signature makes a non-repudiable cryptographic commitment to both the source identifier and the data in the payload.</strong><br>Source <a href=\"https://github.com/WebOfTrust/ietf-keri/blob/main/draft-ssmith-keri.md#identifier-system-security-overlay\">Sam Smith</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "non transferable",
    "url": "https://kerisse.org",
    "anchor": "non-transferable",
    "definition": "<h1>non transferable</h1><h4>Definition</h4><p>No <a href=\"transferable\">capacity to transfer</a> (the control over) a certain digital asset in an unobstructed or loss-less manner. As opposed to <a href=\"transferable\">transferable</a>.</p><p>For example not legally transferable to the ownership of another entity.</p><h4>KERI related</h4><p>A specific type of identifier we distinguish is a <a href=\"non-transferable-identifier\">non-transferable identifier</a>; it is has specific positive features like short-lived, peer to peer, one-time use, discardable, etc. that are very practical in certain use cases.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "non transferable identifier",
    "url": "https://kerisse.org",
    "anchor": "non-transferable-identifier",
    "definition": "<h1>non transferable identifier</h1><h4>Definition</h4><p>Controlling keys over this identifier cannot be rotated and therefore this identifier is <a href=\"non-transferable\">non-transferable</a> to other control.<br>An identifier of this type has specific positive features like short-lived, peer to peer, one-time use, discardable, etc. that are very practical in certain use cases. Moreover non-transferable identifiers are much easier to govern than persistent identifiers that are <a href=\"transferable\">transferable</a>.</p><h4>KERI related</h4><p>The KERI design approach is to build composable primitives instead of custom functionality that is so typical of other DKMI approaches:</p><ul><li><a href=\"transferable-identifier\">transferable identifiers</a></li><li>non-transferable identifiers</li><li><a href=\"delegated-identifier\">delegated identifiers</a></li></ul>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "normative",
    "url": "https://kerisse.org",
    "anchor": "normative",
    "definition": "<h1>normative</h1><h4>Definition</h4><p>a theory is “normative” if it, in some sense, tells you what you should do - what action you should take. If it includes a usable procedure for determining the optimal action in a given scenario.<br><a href=\"https://www.quora.com/What-is-the-difference-between-normative-and-non-normative?share=1\">Source</a>.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "official organizational role",
    "url": "https://kerisse.org",
    "anchor": "official-organizational-role",
    "definition": "<h1>official organizational role</h1><h4>Definition</h4><p>Also &#39;OOR&#39;. A person that represents the Legal Entity in an official organizational role and is issued an OOR vLEI Credential.<br><a href=\"https://www.gleif.org/vlei/introducing-the-vlei-ecosystem-governance-framework/2022-02-07_verifiable-lei-vlei-ecosystem-governance-framework-glossary-draft-publication_v0.9-draft.pdf\">Source</a> Draft vLEI Ecosystem Governance Framework Glossary.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "one way function",
    "url": "https://kerisse.org",
    "anchor": "one-way-function",
    "definition": "<h1>one way function</h1><h4>Definition</h4><p>In computer science, a one-way function is a function that is easy to compute on every input, but hard to invert given the image of a random input. Here, &quot;easy&quot; and &quot;hard&quot; are to be understood in the sense of computational complexity theory, specifically the theory of polynomial time problems.<br>More on <a href=\"https://en.wikipedia.org/wiki/One-way_function\">Wikipedia</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "OOBI",
    "url": "https://kerisse.org",
    "anchor": "OOBI",
    "definition": "<h1>OOBI</h1><h4>See</h4><p><a href=\"out-of-band-introduction\">Out-of-band introduction</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "OOR",
    "url": "https://kerisse.org",
    "anchor": "OOR",
    "definition": "<h1>OOR</h1><h4>See</h4><p><a href=\"official-organizational-role\">Official Organizational Role</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "opcode",
    "url": "https://kerisse.org",
    "anchor": "opcode",
    "definition": "<h1>opcode</h1><h4>Definition</h4><p>Opcodes are meant to provide stream processing instructions that are more general and flexible than simply concatenated primitives or groups of primitives. </p><h4>Why opcodes</h4><p>A yet to be determined stack based virtual machine could be executed using a set of opcodes that provides primitive, primitive group, or stream processing instructions. This would enable highly customizable uses for <a href=\"composable-event-streaming-representation\">CESR</a>.</p><h5>Opcode tables</h5><p>The ‘_’ selector is reserved for the yet to be defined <a href=\"opcode\">opcode</a> table or tables.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "out of band introduction",
    "url": "https://kerisse.org",
    "anchor": "out-of-band-introduction",
    "definition": "<h1>out of band introduction</h1><h4>Definition</h4><p>Out-of-band Introductions (OOBIs) are discovery and validation of IP resources for <a href=\"key-event-receipt-infrastructure\">KERI</a> autonomic identifiers. <strong>Discovery via URI, trust via KERI.</strong></p><p>The simplest form of a KERI OOBI is a namespaced string, a tuple, a mapping, a structured message, or structured attachment that contains both a KERI AID and a URL. The OOBI associates the URL with the AID. In tuple form this abstractly:</p><pre><code class=\"language-code\">(url, aid)</code></pre><p>and concretely</p><pre><code class=\"language-code\">(&quot;http://8.8.5.6:8080/oobi&quot;, &quot;EaU6JR2nmwyZ-i0d8JZAoTNZH3ULvYAfSVPzhzS6b5CM&quot;)</code></pre><h4>Validation</h4><p>Validation is done based on <a href=\"best-available-data-acceptance-mechanism\">BADA</a> More in <a href=\"https://hackmd.io/MxTAIBQTRkWU4-w140tNuA?view\">KERI OOBI draft spec</a> and <a href=\"https://medium.com/p/510467856035\">KERI OOBI explained - draft</a>.</p><h4>High-end definition</h4><p><img src=\"https://hackmd.io/_uploads/H13bNyPiq.png\" alt=\"\"></p><p>From the <a href=\"https://datatracker.ietf.org/doc/html/draft-ssmith-oobi\">IETF draft specification</a>:</p><p>An Out-Of-Band Introduction (OOBI) provides a discovery mechanism that associates a given URI or URL with a given AID (<a href=\"autonomic-identifier-(AID\">autonomic identifier</a> or <a href=\"self-addressing-identifier\">self-addressing identifier (SAID)</a>). The URI provided by an OOBI acts as a service endpoint for the discovery of verifiable information about the AID or SAID. As such an OOBI itself is not trusted but must be verified.<br>To clarify, any information obtained from the service endpoint provided in the OOBI must be verified by some other mechanism.  An OOBI, however, enables any internet and web search infrastructure to act as an out-of-band infrastructure to discover information that is verified using an in-band mechanism or protocol.The primary in-band verification protocol is <a href=\"key-event-receipt-infrastructure\">KERI</a>.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "owner",
    "url": "https://kerisse.org",
    "anchor": "owner",
    "definition": "<h1>owner</h1><h4>See</h4><p><a href=\"https://github.com/trustoverip/toip/wiki/owner\">Owner</a> in ToIP glossary</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "ownership",
    "url": "https://kerisse.org",
    "anchor": "ownership",
    "definition": "<h1>ownership</h1><h4>See</h4><p><a href=\"https://github.com/trustoverip/toip/wiki/ownership\">Ownership</a> in ToIP glossary</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "P2P",
    "url": "https://kerisse.org",
    "anchor": "P2P",
    "definition": "<h1>P2P</h1><h4>See</h4><p><a href=\"peer-to-peer\">Peer to peer</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "pad",
    "url": "https://kerisse.org",
    "anchor": "pad",
    "definition": "<h1>pad</h1><h4>Definition</h4><p>is a <a href=\"https://www.webopedia.com/definitions/character/\">character</a> used to fill empty space, because many <a href=\"https://www.webopedia.com/definitions/application-software/\">applications</a> have <a href=\"https://www.webopedia.com/definitions/field/\">fields</a> that must be a particular length.<br><a href=\"https://www.webopedia.com/definitions/pad-character/\">Source</a></p><h4>KERI related</h4><p>In order to avoid confusion with the use of the term <em>pad</em> character, when pre-padding with bytes that are not replaced later, we use the term <a href=\"lead-bytes\">lead bytes</a>. </p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "parside",
    "url": "https://kerisse.org",
    "anchor": "parside",
    "definition": "<h1>parside</h1><h4>Definition</h4><p>is a bunch of generators. Responsible for pulling out a stream of bits from a CESR stream and parse it.Sam Smith suggested for Parside to not iterate stuff, only parse chunks delimited by the <a href=\"count-code\">count code</a>. (Source Cesride: meeting Feb 2 2023)</p><h4>Background</h4><p>CESR primitives are self-framing (which is relatively new). That means that you can construct your parser modually. We can dispatch the parsing of the stream to an entity. The <a href=\"strip-parameter\">strip parameter</a> tells us what part will be parsed be which code.</p><h4>Design ideas Feb 2023</h4><ol><li>Parside should be concerned with parsing group codes, <a href=\"cesride\">cesride</a> concerned with parsing primitives.</li><li>Parside will contain a <a href=\"count-code\">count code</a> at the beginning of the stream, each cesr primitive is self framing, JSON is not; hence the <a href=\"version-string\">Version string</a>.</li><li>Parside could &quot;load&quot; the tables it supports for dynamically loaded code tables</li><li>Parside could look at how/if we can return an interator/generator</li></ol><p>Source Cesride: meeting Feb 2 2023 notes</p><blockquote><p>Cesride parses the CESR primitives</p></blockquote><blockquote><p>Parside parses the <a href=\"group-code\">group codes</a></p></blockquote><p>| TBW |</p><h4>Related</h4><ul><li><a href=\"version-code\">Version code</a></li><li><a href=\"version-string\">Version string</a></li><li><a href=\"strip-parameter\">Strip parameter</a></li><li><a href=\"cesride\">Cesride</a></li><li><a href=\"sniffer\">Sniffer</a></li></ul><p>Source Cesride: meeting Feb 2 2023</p><h4>Working</h4><p>Parside should start with a default version for CESR. Anytime it gets a version count code it changes the version and also elevates to the top level (the version count code must appear at the top level). The version count code determines which CESR table to load when parsing the stream. The <a href=\"sniffer\">sniffer</a> detects if CESR binary, CESR Text, JSON, CBOR, MGPK. If any of the last three then the parser regexes to find the version string inside the JSON, CBOR, and MGPK and from the version string extracts the number of characters/bytes that is the length of the JSON, CBOR, or MGPK. The parser then resumes sniffing. When the sniff is CESR then when at the top level looks for the CESR version count code or any other count codes. The interpretation of the count codes is dependent on the version count code that is why the Parser has to start with a default version count code because the stream may not begin with a version code or may have resumed after a cold restart. When a count code is parsed then the parser may descend into parsing whats inside group for a group count code which may recursively nest down a ways.<br>Source Slack Cesride thread: Feb 2 2023</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "partial disclosure",
    "url": "https://kerisse.org",
    "anchor": "partial-disclosure",
    "definition": "<h1>partial disclosure</h1><h4>Definition</h4><p>An ACDC attribute section can be a nested branch in a tree. Partial disclosure is the weaker version because you can either decide to disclose or not. Selective disclosure is more fine grained.</p><h4>Related</h4><p><a href=\"selective-disclosure\">Selective disclosure</a> is a from partial disclosure that has a different cryptographic fundament: a sort of cryptographic aggregator (not an accumulator). </p><p>Source: distilled from ACDC Zoom meeting, date March 28, 2023</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "partial pre rotation",
    "url": "https://kerisse.org",
    "anchor": "partial-pre-rotation",
    "definition": "<h1>partial pre rotation</h1><h4>See</h4><p><a href=\"partial-rotation\">Partial rotation</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "partial rotation",
    "url": "https://kerisse.org",
    "anchor": "partial-rotation",
    "definition": "<h1>partial rotation</h1><h4>Definition</h4><p>The pre-rotation mechanism supports partial pre-rotation or <strong>more exactly partial rotation of pre-rotated keypairs</strong>. It&#39;s a rotation operation on a set of pre-rotated keys that may keep some keys in reserve (i.e unexposed) while exposing others as needed.</p><p>Partial rotation serves two important purposes:</p><ul><li><a href=\"reserve-rotation\">Reserve rotation</a></li><li><a href=\"custodial-rotation\">Custodial rotation</a></li></ul><p>Paraphrased by @henkvancann on the bases of the <a href=\"https://github.com/WebOfTrust/ietf-keri/blob/main/draft-ssmith-keri.md\">IETF-KERI draft 2022</a> by Samual Smith.</p><h4>More detailed explanation</h4><p>A valid rotation operation requires the satisfaction of two different thresholds. These are the current <a href=\"signing-threshold\">threshold</a> of the given <a href=\"rotation\">rotation</a> (<a href=\"establishment-event\">establishment</a>) event with respect to its associated current public key list and the next threshold from the given rotation event&#39;s most recent prior establishment event with respect to its associated blinded next key <a href=\"digest\">digest</a> list. For short, we denote the next threshold from the most recent prior establishment event as the prior next threshold, and the list of unblinded public keys taken from the blinded key digest list from the most recent prior establishment event as the prior next key list. Explication of the elements of the prior next key list requires exposing or unblinding the underlying public keys committed to by their corresponding digests that appear in the next key digest list of the most recent prior establishment event. The unexposed (blinded) public keys MAY be held in reserve.<br>More in <a href=\"https://github.com/WebOfTrust/ietf-keri/blob/main/draft-ssmith-keri.md#partial-pre-rotation-detail\">Source</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "party",
    "url": "https://kerisse.org",
    "anchor": "party",
    "definition": "<h1>party</h1><h4>Definition</h4><p>An entity who participates or is concerned in an action, proceeding, plan, etc.<br>Source: ToIP</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "passcode",
    "url": "https://kerisse.org",
    "anchor": "passcode",
    "definition": "<h1>passcode</h1><h4>Definition</h4><p>A password, sometimes called a passcode (for example in <a href=\"https://en.wikipedia.org/wiki/Apple_Inc.\">Apple</a> devices), is secret data, typically a string of characters, usually used to confirm a user&#39;s identity.<br>More on source <a href=\"https://en.wikipedia.org/wiki/Password\">Wikipedia</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "pathing",
    "url": "https://kerisse.org",
    "anchor": "pathing",
    "definition": "<h1>pathing</h1><h4>Definition</h4><p>It was designed send to sign portions of a credential. Designed for complex cases like </p><ul><li>a credential embedded in another credential</li><li>multiple signers, only signing portions of a credential (partial signing)</li></ul><p>In these cases we provide a path (using SAD path language) to what is signed.<em>We have never used it for credentials</em>, however we do need it for<strong>forwarding in KERI embedded messages</strong> - see <a href=\"https://us06web.zoom.us/rec/play/qEL79NTkwi4KHrC7ytfy4pYJySOvjpL_gqMSiTxEBl9uXPaeUSaQdka_65xLKP1yozaakqIlYpIX4Yxc.xN0-4LkaqWOZqDjg?canPlayFromShare=true&from=share_recording_detail&continueMode=true&componentName=rec-play&originRequestUrl=https%3A%2F%2Fus06web.zoom.us%2Frec%2Fshare%2F9RtKAuTNe1417D-4tgdLzmdsrRz63EuaBOysMQU4EZ0ysw4aaZXsIXo1tIRNdzyC.FJhPr84fMxOsGoQN\">video discussion</a>.</p><h4>Important</h4><p>We don&#39;t sign our credentials, you shouldn&#39;t either!</p><p>Source: Philip Feairheller, July 20 2023, KERI-dev meeting</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "payload",
    "url": "https://kerisse.org",
    "anchor": "payload",
    "definition": "<h1>payload</h1><h4>Definition</h4><p>The term &#39;payload&#39; is used to distinguish between the &#39;interesting&#39; information in a chunk of data or similar, and the overhead to support it. It is borrowed from transportation, where it refers to the part of the load that &#39;pays&#39;: for example, a tanker truck may carry 20 tons of oil, but the fully loaded vehicle weighs much more than that - there&#39;s the vehicle itself, the driver, fuel, the tank, etc. It costs money to move all these, but the customer only cares about (and pays for) the oil, hence, &#39;pay-load&#39;. <a href=\"https://softwareengineering.stackexchange.com/questions/158603/what-does-the-term-payload-mean-in-programming\">Source</a>.</p><h4>KERI context</h4><p>Now payload in <code>KERI</code>. The payload of an item in an <code>Event Log</code> is one the following cryptographic building blocks in KERI:</p><ul><li>a content digest hash </li><li>a root hash of a Merkle-tree</li><li>a public keyNote tha KERI never puts raw data or privacy-sensitive data in a <code>KEL</code> or <code>KERL</code>.</li></ul>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "peer to peer",
    "url": "https://kerisse.org",
    "anchor": "peer-to-peer",
    "definition": "<h1>peer to peer</h1><h4>Definition</h4><p>Peer-to-peer (P2P) computing or networking is a <a href=\"https://en.wikipedia.org/wiki/Distributed_application\">distributed application</a> architecture that partitions tasks or workloads between peers. Peers are <strong>equally privileged</strong>, <a href=\"https://en.wikipedia.org/wiki/Equipotent\">equipotent</a> participants in the network. They are said to form a peer-to-peer network of <a href=\"https://en.wikipedia.org/wiki/Node_(networking)\">nodes</a></p><p>More on source <a href=\"https://en.wikipedia.org/wiki/Peer-to-peer\">Wikipedia</a> </p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "percolated information discovery",
    "url": "https://kerisse.org",
    "anchor": "percolated-information-discovery",
    "definition": "<h1>percolated information discovery</h1><h4>Definition</h4><p>In the OOBI protocol, a discovery mechanism for the KERI and the ACDC protocols is provided by a bootstrap that enables Percolated Information Discovery (PID), which is based on Invasion Percolation Theory.</p><p>After related information for discovery and verification is bootstrapped from the OOBI, subsequent authorization is non-interactive thus making it highly scalable. This provides what we call zero-trust percolated discovery or speedy percolated discovery. Percolation means that each discoverer in turn may share what it discovers with any subsequent discoverers. Since the information so discovered is end-verifiable, the percolation mechanism and percolating intermediaries do not need to be trusted.</p><h5>Percolation Theory</h5><p><a href=\"https://en.wikipedia.org/wiki/Percolation_theory\">Percolation theory</a> is a mathematical framework used to study the behavior of connected clusters in random systems. It was originally developed to understand the flow of fluids through porous media, but it has since found applications in various fields, including physics, mathematics, computer science, and social sciences.</p><h5>Invasion Percolation Theory</h5><p>Invasion percolation is a specific variant of percolation theory that models the infiltration of a fluid into a porous medium. It is used to study how a fluid, such as a gas or liquid, spreads through a random network of interconnected sites or pores.</p><p>The invasion process follows the principle of least resistance, where the fluid seeks the path of least resistance through the porous medium. As the invasion progresses, the fluid selectively infiltrates the sites with lower resistance, forming a connected cluster of invaded sites. The invaded cluster grows by adding new invaded sites through the neighboring dry sites with the lowest resistance.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "persistent data structure",
    "url": "https://kerisse.org",
    "anchor": "persistent-data-structure",
    "definition": "<h1>persistent data structure</h1><h4>Definition</h4><p>An append only verifiable data structure. What we sign may not change.</p><h4>Related Work</h4><p>The approach that ACDCs take to data structures -- making them immutable and thus distributable and concurrency-friendly -- is very similar to the one <a href=\"https://github.com/candera/clojure-data-structures#collections-are-immutable\">advocated and implemented by Clojure</a>.</p><h4>ACDC Related</h4><p>The persistent data structure is a graph</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "persistent identifier",
    "url": "https://kerisse.org",
    "anchor": "persistent-identifier",
    "definition": "<h1>persistent identifier</h1><h4>See</h4><p><a href=\"transferable-identifier\">Transferable Identifiers</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "PGP",
    "url": "https://kerisse.org",
    "anchor": "PGP",
    "definition": "<h1>PGP</h1><h4>See</h4><p><a href=\"pretty-good-privacy\">Pretty good privacy</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "PID",
    "url": "https://kerisse.org",
    "anchor": "PID",
    "definition": "<h1>PID</h1><h4>See</h4><p><a href=\"percolated-information-discovery\">percolated information discovery</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "pii",
    "url": "https://kerisse.org",
    "anchor": "pii",
    "definition": "<h1>pii</h1><h4>Definition</h4><p>personally identifiable information</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "pipelining",
    "url": "https://kerisse.org",
    "anchor": "pipelining",
    "definition": "<h1>pipelining</h1><h4>Definition</h4><p>In <a href=\"https://en.wikipedia.org/wiki/Computing\">computing</a>, a pipeline, also known as a data pipeline, is a set of <a href=\"https://en.wikipedia.org/wiki/Data\">data</a> processing elements connected in series, where the output of one element is the input of the next one. The elements of a pipeline are often executed in parallel or in time-sliced fashion. Some amount of <a href=\"https://en.wikipedia.org/wiki/Buffer_(computer_science)\">buffer storage</a> is often inserted between elements.<br>More on source <a href=\"https://en.wikipedia.org/wiki/Pipeline_(computing)\">Wikipedia-page</a></p><h4>Why CESR needs to anticipate pipelining</h4><p>If you have a stream coming in, you have to look ahead how big a chunk of data can be. We call this a logical atomic data chunk.</p><h5>JSON is slow</h5><p>With JSON I don’t know where the end is, so I have to parse the initial stream to find out. That&#39;s slow.</p><h5>Meaning of Pipelining</h5><p>That once you have a block of data, that you can pull off chunks and de-multiplex from the stream into cores and multiplex them back into the streams. Cores in big datacenters are now max 5 GHz, a pipeline is 40 GHz. So you have to be able to do pipelining (split off over many cores). <a href=\"CESR\">CESR</a> is the only streaming protocol that has this anticipation on board.<br>Source: Samuel Smith, KERI Zoom meeting Dec 5 2023.</p><h5>Related</h5><p><a href=\"multiplexing\">Multiplexing</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "PKI",
    "url": "https://kerisse.org",
    "anchor": "PKI",
    "definition": "<h1>PKI</h1><h4>See</h4><p><a href=\"public-key-infrastructure\">Public key infrastructure</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "post pad",
    "url": "https://kerisse.org",
    "anchor": "post-pad",
    "definition": "<h1>post pad</h1><h4>Definition</h4><p>the action and / or result of extending a string with <em>trailing</em> pad characters to align to a certain length in bits or bytes.</p><h4>CESR related</h4><p>There are two ways to provide the required alignment on 24-bit boundaries to satisfy the <a href=\"composability\">composability</a> property. One is <em>post-pad</em>, with trailing pad characters <code>=</code>, the text domain encoding to ensure that the text domain primitive has a total size (length) that is an integer multiple of 4. This is what <a href=\"naive-conversion\">naive Base64 encoding</a> does.<br>The other way is to <a href=\"pre-pad\">pre-pad</a> leading bytes of zeros to the raw binary value before conversion to Base64 to ensure the total size of the raw binary value with pre-pad bytes is an integer multiple of 3 bytes. This ensures that the size in characters of the Base64 conversion of the pre-padded raw binary is an integer multiple of 4 characters.<br><a href=\"https://github.com/WebOfTrust/ietf-cesr/blob/main/draft-ssmith-cesr.md#code-characters-and-lead-bytes\">Source IEFT CESR draft</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "post quantum",
    "url": "https://kerisse.org",
    "anchor": "post-quantum",
    "definition": "<h1>post quantum</h1><h4>Definition</h4><p>In cryptography, post-quantum cryptography (PQC) (sometimes referred to as quantum-proof, quantum-safe or quantum-resistant) refers to cryptographic algorithms (usually public-key algorithms) that are thought to be secure against a cryptanalytic attack by a quantum computer.<br>More on source <a href=\"https://en.wikipedia.org/wiki/Post-quantum_cryptography\">Wikipedia</a></p><h4>KERI pre-rotation related</h4><p>Although individual public-private key pairs are most probably not post-quantum proof, by design the pre-rotation mechanism in KERI is post-quantum proof; which means that in the projected future presence of quantum computers KERI will still be safe. Basically, this safety is established by rotating keys before a brute force quantum attack can be effective. As quantum computers might get faster or more effective over time, the rotation intervals simply become shorter and/or increased <a href=\"entropy\">entropy</a> might be used for key generation.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "pre pad",
    "url": "https://kerisse.org",
    "anchor": "pre-pad",
    "definition": "<h1>pre pad</h1><h4>Definition</h4><p>the action and / or result of prepending a string with <em>leading</em> pad characters to align to a certain length in bits or bytes.</p><h4>CESR related</h4><p>There are two ways to provide the required alignment on 24-bit boundaries to satisfy the <a href=\"composability\">composability</a> property. One is <a href=\"post-pad\">post-pad</a>, with trailing pad characters <code>=</code>, the text domain encoding to ensure that the text domain primitive has a total size (length) that is an integer multiple of 4. This is what <a href=\"naive-conversion\">naive Base64 encoding</a> does.<br>The other way is to <em>pre-pad</em> leading bytes of zeros to the raw binary value before conversion to Base64 to ensure the total size of the raw binary value with pre-pad bytes is an integer multiple of 3 bytes. This ensures that the size in characters of the Base64 conversion of the pre-padded raw binary is an integer multiple of 4 characters.<br><a href=\"https://github.com/WebOfTrust/ietf-cesr/blob/main/draft-ssmith-cesr.md#code-characters-and-lead-bytes\">Source IEFT CESR draft</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "pre rotation",
    "url": "https://kerisse.org",
    "anchor": "pre-rotation",
    "definition": "<h1>pre rotation</h1><h4>Definition</h4><p>Cryptographic commitment to next rotated key set in previous rotation or <a href=\"inception-event\">inception event</a>.</p><h4>Rotation</h4><p>The main purpose of <a href=\"rotation\">key rotation</a> it to either prevent or recover from a successful compromise of one or more private keys by an exploiter. Given a potentially compromised private key, an exploiter could sign statements and even capture full control over the identifier by rotating the current key pair. </p><h4>Pre-rotation</h4><p>Pre-rotation mitigates successful exploit of a given set of signing private keys. There are several assumptions listed in <a href=\"https://github.com/SmithSamuelM/Papers/blob/master/whitepapers/KERI_WP_2.x.web.pdf\">chapter Pre-rotation of the KERI white paper</a> about the circumstances under which pre-rotation is able to sustain this mitigation, e.g. it assumes that the private keys remains private until after issuance of the associated identifier.</p><h4>Origin and technique</h4><p>Pre-rotation is a new invention in KERI. Pre-rotation is a cryptographic commitment (a hash) to the next private/public key in the rotation-scheme.<br><a href=\"https://github.com/SmithSamuelM/Papers/blob/master/whitepapers/KERI_WP_2.x.web.pdf\">Source: chapter Pre-rotation in whitepaper</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "prefix",
    "url": "https://kerisse.org",
    "anchor": "prefix",
    "definition": "<h1>prefix</h1><h4>Definition</h4><p>A prefix that is composed of a basic Base-64 (URL safe) derivation code pre-pended to Base-64 encoding of a basic public digital signing key.<br>Including the derivation code in the prefix binds the derivation process along with the public key to the resultant identifier. </p><blockquote><p>An example of the prefix with a one character derivation code and a 32 byte public key encoded into a 44 character Based-64 string follows:<code>BDKrJxkcR9m5u1xs33F5pxRJP6T7hJEbhpHrUtlDdhh0</code></p></blockquote><img src=\"https://github.com/WebOfTrust/keri/blob/main/images/prefix.png?raw=true\" alt=\"Basic Prefix Derivation image\" border=\"0\" width=\"600\"/>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "presentation exchange",
    "url": "https://kerisse.org",
    "anchor": "presentation-exchange",
    "definition": "<h1>presentation exchange</h1><h4>Definition</h4><p>An exchange that provides disclosure of one or more <a href=\"authentic-chained-data-container\">ACDC</a>s between a Discloser and a Disclosee.</p><p>A presentation exchange is the process by which <a href=\"authenticity\">authenticatable</a> information may be exchanged between two parties, namely, the <a href=\"discloser\">Discloser</a> and <a href=\"disclosee\">Disclosee</a>.</p><h4>Rule</h4><p>Each ACDC MUST have an <a href=\"issuer\">Issuer</a> and MAY have an <a href=\"issuee\">Issuee</a>. The set of <a href=\"ACDC\">ACDC</a>s so disclosed in a presentation exchange MUST be chained. This set of chained ACDCs define a <a href=\"directed-acyclic-graph\">directed acyclic graph</a> that MUST have at least one vertex and MAY have zero or more edges pointing to other vertices.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "pretty good privacy",
    "url": "https://kerisse.org",
    "anchor": "pretty-good-privacy",
    "definition": "<h1>pretty good privacy</h1><h4>Definition</h4><p>Is an encryption program that provides cryptographic privacy and authentication for data communication. PGP is used for signing, encrypting, and decrypting texts, e-mails, files, directories, and whole disk partitions and to increase the security of e-mail communications. Phil Zimmermann developed PGP in 1991.<br>More on <a href=\"https://en.wikipedia.org/wiki/Pretty_Good_Privacy\">wikipedia</a><br>So also the often confusing <a href=\"GPG\">GPG</a> term.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "primary root of trust",
    "url": "https://kerisse.org",
    "anchor": "primary-root-of-trust",
    "definition": "<h1>primary root of trust</h1><h4>Definition</h4><p>In KERI a <a href=\"root-of-trust\">root-of-trust</a> that is cryptographically verifiable all the way to its current controlling key pair in a PKI. </p><p>The characteristic <em>primary</em> is one-on-one related to the <strong>entropy</strong> used for the creation of (the seed of) the private keys.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "primitive",
    "url": "https://kerisse.org",
    "anchor": "primitive",
    "definition": "<h1>primitive</h1><h4>Definition</h4><p>In general in computing a &#39;primitive&#39; is the simplest type of programming language item. It may also refer to the smallest processing unit accessible by a programmer.<br><a href=\"https://www.techopedia.com/definition/3860/primitive\">Source</a></p><h4>Cryptographic primitive</h4><p>See <a href=\"cryptographic-primitive\">Cryptographic primitive</a></p><h4>KERI related</h4><p>In KERI and ACDC it a serialization of a unitary value. A <a href=\"cryptographic-primitive\">cryptographic primitive</a> is the KERI-suite sense is the serialization of a value associated with a cryptographic operation including but not limited to a digest (hash), a salt, a seed, a private key, a public key, or a signature. All primitives in KERI MUST be expressed in <a href=\"composable-event-streaming-representation\">CESR</a>.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "privacy",
    "url": "https://kerisse.org",
    "anchor": "privacy",
    "definition": "<h1>privacy</h1><h4>Definition</h4><p>Privacy is the ability of an individual or group to seclude themselves or information about themselves, and thereby express themselves selectively.</p><p>The domain of privacy partially overlaps with <a href=\"https://en.wikipedia.org/wiki/Security\">security</a>, which can include the concepts of appropriate use and protection of information. Privacy may also take the form of <a href=\"https://en.wikipedia.org/wiki/Bodily_integrity\">bodily integrity</a>.<br>More on source <a href=\"https://en.wikipedia.org/wiki/Privacy\">Wikipedia</a></p><h4>KERI related</h4><p>The three properties, authenticity, confidentiality, and privacy inhabit a trade space. ...One can have any two of the three (privacy, authenticity, confidentiality) at the highest level but not all three.<br>The trilemma insists that one must make a trade-off by prioritizing one or two properties over a third.</p><p>The ToIP <a href=\"https://github.com/trustoverip/TechArch/blob/main/spec.md#61-design-goals\">design goals</a> reflect that trade-off and provide an order of importance. The design goals indicate that one should start with high authenticity, then high confidentiality, and then as high as possible privacy, given there is no trade-off with respect to the other two.</p><p>More on <a href=\"https://github.com/SmithSamuelM/Papers/blob/master/whitepapers/SPAC_Message.md\">Source</a> Samuel Smith SPAC whitepaper.</p><h4>Also see</h4><ul><li><a href=\"authenticity\">authenticity</a></li><li><a href=\"confidentiality\">confidentiality</a></li></ul>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "privacy washing",
    "url": "https://kerisse.org",
    "anchor": "privacy-washing",
    "definition": "<h1>privacy washing</h1><h4>Definition</h4><p>De-identification so that it provides a personal data safe harbour and could be legally acceptable forwarded.</p><h4>Possible solution</h4><p>We might need legally enforced pressure for it to be no longer acceptable that you&#39;ve <em>un-seen</em> the (re-identifiable) personal data.<br>&quot;Once you see, you can&#39;t un-see&quot;.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "PRNG",
    "url": "https://kerisse.org",
    "anchor": "PRNG",
    "definition": "<h1>PRNG</h1><h4>Definition</h4><p>means &quot;Pseudorandom Number Generator&quot; which means that a sequence of numbers (bits, bytes...) is produced from an algorithm which looks random, but is in fact deterministic (the sequence is generated from some unknown internal state), hence pseudorandom.</p><p>Such pseudorandomness can be cryptographically secure, or not. It is cryptographically secure if nobody can reliably distinguish the output from true randomness, even if the PRNG algorithm is perfectly known (but not its internal state). A non-cryptographically secure PRNG would fool basic statistical tests but can be distinguished from true randomness by an intelligent attacker.<br>(Source: <a href=\"https://crypto.stackexchange.com/questions/12436/what-is-the-difference-between-csprng-and-prng\">https://crypto.stackexchange.com/questions/12436/what-is-the-difference-between-csprng-and-prng</a>)</p><h4>See also</h4><p><a href=\"CSPRNG\">CSPRNG</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "promiscuous mode",
    "url": "https://kerisse.org",
    "anchor": "promiscuous-mode",
    "definition": "<h1>promiscuous mode</h1><h4>Definition</h4><p>It is the mode a <a href=\"watcher\">watcher</a> runs in. A watcher uses the same code as a <a href=\"witness\">witness</a>. However a watcher does so &quot;lacking standards of selection; acting without careful judgment; indiscriminate&quot;. Or &quot;Showing little forethought or critical judgment; casual.&quot;<br><a href=\"https://www.wordnik.com/words/promiscuous\">Source</a></p><h4>Meaning</h4><p>The function of watcher is different from a witness, however they can both use the same protocol and code, just in a distinct mode.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "proof of authority",
    "url": "https://kerisse.org",
    "anchor": "proof-of-authority",
    "definition": "<h1>proof of authority</h1><h4>Definition</h4><p>Proof that somebody or something has certain rights or permissions. It&#39;s about <em>data</em>. Whereas <a href=\"proof-of-authorship\">proof of authorship</a> is about <em>data</em> and its original creator.<br>A proof-of-authority provides verifiable authorizations or permissions or rights or credentials.</p><h4>ACDC and proofs</h4><p><em>Proof of authorship</em> and <a href=\"proof-of-authority\">proof of authority</a> are integrated in <a href=\"authentic-chained-data-container\">Authentic Chained Data Containers (ACDCs)</a>:</p><ul><li>ACDCs provide a verifiable chain of proof-of-<code>authorship</code> of the contained data</li><li>A proof-of-<code>authority</code> may be used to provide verifiable authorizations or permissions or rights or credentials. A chained (treed) proof-of-authority enables delegation of authority and delegated authorizations.These proofs of authorship and/or authority provide provenance of an ACDC itself and by association any data that is so conveyed.<br>(<a href=\"https://github.com/trustoverip/tswg-acdc-specification/blob/main/draft-ssmith-acdc.md#introduction\">source</a>)</li></ul><h5>Example APC : book rights sold</h5><p>The data contained in an ACDC is a book written by Terlalu Bonito; the ACDC also contains anchoring digest, signed by the author at publishing date. Terlalu has sold all rights to publish the book to Liz Smiley The ownership of the book matches the current <a href=\"controller\">control</a> over the book and its digital twin: the proof of authority by the chain of ACDCs.</p><h4>Do not confuse blockchains or consensus algorithms</h4><p>Proof of authority (PoA) is also an <a href=\"https://en.wikipedia.org/wiki/Algorithm\">algorithm</a> used with <a href=\"https://en.wikipedia.org/wiki/Blockchain\">blockchains</a> that delivers comparatively fast transactions through a consensus mechanism based on identity as a stake.<br>(<a href=\"https://en.wikipedia.org/wiki/Proof_of_authority\">Source</a>)</p><p>This is NOT what we mean in SSI, KERI and ACDC.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "proof of authorship",
    "url": "https://kerisse.org",
    "anchor": "proof-of-authorship",
    "definition": "<h1>proof of authorship</h1><h4>Definition</h4><p>Proof that somebody or something has originally created certain content. It&#39;s about <em>data</em>&#39;s inception. Whereas <a href=\"proof-of-authority\">proof-of-authority</a> is about <em>rights</em> attached to this data.</p><p>For example, a <a href=\"https://en.wikipedia.org/wiki/Signature\">signature</a> constitutes direct proof of <a href=\"https://en.wikipedia.org/wiki/Authorship\">authorship</a>; less directly, <a href=\"https://en.wikipedia.org/wiki/Handwriting_analysis\">handwriting analysis</a> may be submitted as proof of authorship of a document.<a href=\"https://en.wikipedia.org/wiki/Proof_(truth)?wprov=srpw1_0#cite_note-21\">[21]</a> <a href=\"https://en.wikipedia.org/wiki/Secret\">Privileged information</a> in a document can serve as proof that the document&#39;s author had access to that information; such access might in turn establish the location of the author at certain time, which might then provide the author with an <a href=\"https://en.wikipedia.org/wiki/Alibi\">alibi</a>.<br><a href=\"https://en.wikipedia.org/wiki/Proof_(truth)\">Source</a></p><h4>ACDC and proofs</h4><p><em>Proof of authorship</em> and <a href=\"proof-of-authority\">proof of authority</a> are integrated in <a href=\"authentic-chained-data-container\">Authentic Chained Data Containers (ACDCs)</a> constituting an <a href=\"authentic-provenance-chain\">Authentic Provenance Chain (APC)</a>:</p><ul><li>ACDCs provide a verifiable chain of proof-of-<code>authorship</code> of the contained data</li><li>A proof-of-<code>authority</code> may be used to provide verifiable authorizations or permissions or rights or credentials. A chained (treed) proof-of-authority enables delegation of authority and delegated authorizations.These proofs of authorship and/or authority provide provenance of an ACDC itself and by association any data that is so conveyed.<br>(<a href=\"https://github.com/trustoverip/tswg-acdc-specification/blob/main/draft-ssmith-acdc.md#introduction\">source</a>)</li></ul><h5>Example APC : book rights sold</h5><p>The data contained in an ACDC is a book written by Terlalu Bonito; the ACDC also contains anchoring digest, signed by the author at publishing date. Terlalu has sold all rights to publish the book to Liz Smiley The ownership of the book matches the current <a href=\"controller\">control</a> over the book and its digital twin: the proof of authority by the chain of ACDCs.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "protocol",
    "url": "https://kerisse.org",
    "anchor": "protocol",
    "definition": "<h1>protocol</h1><h4>Definition</h4><p>Generic term to describe a code of correct conduct. Also called &quot;<a href=\"https://en.wikipedia.org/wiki/Etiquette\">etiquette</a>&quot;: a code of personal behavior.</p><h4>KERI and ACDC related</h4><p>We can distinguish three relevant elaborations on the term &#39;protocol&#39; to make the concept more specific:</p><ul><li><a href=\"https://en.wikipedia.org/wiki/Communication_protocol\">Communication protocol</a>, a defined set of rules and regulations that determine how data is transmitted in telecommunications and computer networking</li><li><a href=\"https://en.wikipedia.org/wiki/Cryptographic_protocol\">Cryptographic protocol</a>, a protocol for encrypting messages</li><li><a href=\"https://en.wikipedia.org/wiki/Decentralized_network_protocol\">Decentralized network protocol</a>, a protocol for operation of an <a href=\"https://en.wikipedia.org/wiki/Open_source_software\">open source</a> <a href=\"https://en.wikipedia.org/wiki/Peer-to-peer\">peer-to-peer</a> network where no single entity nor colluding group controls a majority of the network nodes<br>Paraphrased by @henkvancann from source on Wikipedia (click on individual links).</li></ul>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "provenance",
    "url": "https://kerisse.org",
    "anchor": "provenance",
    "definition": "<h1>provenance</h1><h4>Defintion</h4><p>From Wikipedia (<a href=\"https://en.wikipedia.org/wiki/Provenance\">Source</a>):</p><p>Provenance (from the <a href=\"https://en.wikipedia.org/wiki/French_language\">French</a> provenir, &#39;to come from/forth&#39;) is the chronology of the ownership, custody or location of a historical object. The term was originally mostly used in relation to <a href=\"https://en.wikipedia.org/wiki/Works_of_art\">works of art</a> but is now used in similar senses in a wide range of fields, including <a href=\"https://en.wikipedia.org/wiki/Archaeology\">archaeology</a>, <a href=\"https://en.wikipedia.org/wiki/Paleontology\">paleontology</a>, <a href=\"https://en.wikipedia.org/wiki/Archive\">archives</a>, <a href=\"https://en.wikipedia.org/wiki/Manuscript\">manuscripts</a>, printed books, the <a href=\"https://en.wikipedia.org/wiki/Circular_economy\">circular economy</a>, and science and computing.</p><h4>Purpose</h4><p>The primary purpose of tracing the provenance of an object or entity is normally to provide contextual and circumstantial evidence for its original production or discovery, by establishing, as far as practicable, its later history, especially the sequences of its formal ownership, custody and places of storage. The practice has a particular value in helping <a href=\"https://en.wikipedia.org/wiki/Authentication\">authenticate</a> objects. Comparative techniques, expert opinions and the results of scientific tests may also be used to these ends, but establishing provenance is essentially a matter of <a href=\"https://en.wikipedia.org/wiki/Document\">documentation</a>. The term dates to the 1780s in English. Provenance is conceptually comparable to the legal term <a href=\"https://en.wikipedia.org/wiki/Chain_of_custody\">chain of custody</a>.<br>(<a href=\"https://en.wikipedia.org/wiki/Provenance\">Source</a>)</p><h4>Provenance and ACDC</h4><p><a href=\"authentic-chained-data-container\">Authentic chained data containers (ACDC)</a> establish provenance in two coherent ways:</p><ul><li>historic documentation of cryptographic verifiable key states and data consistency (result: secure attribution)</li><li>historic documentation of <a href=\"credential\">credentials</a> (result: attested <a href=\"veracity\">veracity</a>)<br>(<em>@henkvancann</em>)</li></ul>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "provenanced",
    "url": "https://kerisse.org",
    "anchor": "provenanced",
    "definition": "<h1>provenanced</h1><h4>Definition</h4><p>The act of verifying <a href=\"authenticity\">authenticity</a> or quality of documented history or origin of something</p><h4>KERI specific</h4><p>Focus on authenticity. See <a href=\"provenance\">provenance</a>.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "pseudo random number",
    "url": "https://kerisse.org",
    "anchor": "pseudo-random-number",
    "definition": "<h1>pseudo random number</h1><h4>Definition</h4><p>A (set of) value(s) or element(s) that is statistically random, but it is derived from a known starting point and is typically repeated over and over. Pseudo-random numbers provide necessary values for processes that require randomness, such as creating test signals or for synchronizing sending and receiving devices in a spread spectrum transmission. </p><p>It is called &quot;pseudo&quot; random, <strong>because the algorithm can repeat the sequence</strong>, and the numbers are thus not entirely random.<br><a href=\"https://www.pcmag.com/encyclopedia/term/pseudo-random-numbers\">Source</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "PTEL",
    "url": "https://kerisse.org",
    "anchor": "PTEL",
    "definition": "<h1>PTEL</h1><h4>See</h4><p><a href=\"public-transaction-event-log\">Public transaction event log</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "public key infrastructure",
    "url": "https://kerisse.org",
    "anchor": "public-key-infrastructure",
    "definition": "<h1>public key infrastructure</h1><h4>Definition</h4><p>Is a set of roles, policies, hardware, software and procedures needed to create, manage, distribute, use, store and revoke digital certificates and manage public-key encryption.</p><img src=\"https://github.com/WebOfTrust/keri/blob/main/images/pubprivkey-caveat.png?raw=true\" alt=\"Public Private Key caveat to KERI\" border=\"0\" width=\"400\"/><p>More on <a href=\"https://en.wikipedia.org/wiki/Public_key_infrastructure\">Wikipedia</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "public transaction event log",
    "url": "https://kerisse.org",
    "anchor": "public-transaction-event-log",
    "definition": "<h1>public transaction event log</h1><h4>Definition</h4><p>is a public hash-linked data structure of transactions that can be used to track state anchored to a KEL.</p><h5>Public Verifiable Credential Registry</h5><p>A Public Verifiable Credential Registry can be represented in several <a href=\"TEL\">TEL</a>s to establish issuance or revocation state of a <a href=\"verifiable-credential\">Verifiable Credential</a> (VC). </p><h5>Control authority vs. issuance and revocation of VCs</h5><p>The <a href=\"KEL\">KEL</a> is used to establish control authority over the keys used to commit to the events of the TEL and sign the VC. The events of the TEL are used to establish the issuance or revocation state of the VCs issued by the controller of the identifier represented by the KEL. </p><p><a href=\"https://github.com/WebOfTrust/ietf-ptel/blob/main/draft-pfeairheller-ptel.md\">Source: pfeairheller</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "public verifiable credential registry",
    "url": "https://kerisse.org",
    "anchor": "public-verifiable-credential-registry",
    "definition": "<h1>public verifiable credential registry</h1><h4>Definition</h4><p>is a form of a <a href=\"https://github.com/trustoverip/toip/wiki/credential-registry\">Verifiable Data Registry</a> that tracks the issuance/revocation state of credentials issued by the controller of the <a href=\"key-event-log\">KEL</a>.</p><p>Two types of TELs will be used for this purpose. The first type of <a href=\"transaction-event-log\">TEL</a> is the <a href=\"management-transaction-event-log\">management TEL</a> and will signal the creation of the Registry and track the list of Registrars that will act as <a href=\"backer\">Backers</a> for the individual TELs for each <a href=\"verifiable-credential\">VC</a>. The second type of TEL is the <a href=\"virtual-credential-transaction-event-log\">VC TEL</a> which will track the issued or revoked state of each VC and will contain a reference to it&#39;s corresponding management TEL.</p><h4>Why do we need this?</h4><p>| TBW  | prio2</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "QAR",
    "url": "https://kerisse.org",
    "anchor": "QAR",
    "definition": "<h1>QAR</h1><h4>See</h4><p><a href=\"qvi-authorized-representative\">QVI Authorized Representative</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "qry",
    "url": "https://kerisse.org",
    "anchor": "qry",
    "definition": "<h1>qry</h1><h4>Definition</h4><p>qry = query</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "qualified",
    "url": "https://kerisse.org",
    "anchor": "qualified",
    "definition": "<h1>qualified</h1><h4>Definition</h4><p>When qualified, a cryptographic primitive includes a prepended derivation code (as a proem) that indicates the cryptographic algorithm or suite used for that derivation. This simplifies and compactifies the essential information needed to use that cryptographic primitive. All cryptographic primitives expressed in either text or binary CESR are qualified by definition [<a href=\"https://weboftrust.github.io/ietf-keri/draft-ssmith-keri.html#CESR-ID\">CESR-ID</a>]. Qualification is an essential property of CESR [<a href=\"https://weboftrust.github.io/ietf-keri/draft-ssmith-keri.html#CESR-ID\">CESR-ID</a>].<a href=\"https://weboftrust.github.io/ietf-keri/draft-ssmith-keri.html#section-2-2.4.1\">¶</a><br><a href=\"https://github.com/WebOfTrust/ietf-keri/blob/main/draft-ssmith-keri.md#basic-terminology\">Sam Smith, IETF-keri</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "qualified vlei issuer",
    "url": "https://kerisse.org",
    "anchor": "qualified-vlei-issuer",
    "definition": "<h1>qualified vlei issuer</h1><h4>Definition</h4><p>The contracting party to the vLEI Issuer Qualification Agreement that has been qualified by GLEIF as a Qualified vLEI Issuer.<br><a href=\"https://www.gleif.org/vlei/introducing-the-vlei-ecosystem-governance-framework/2022-02-07_verifiable-lei-vlei-ecosystem-governance-framework-glossary-draft-publication_v0.9-draft.pdf\">Source</a>: Draft vLEI Ecosystem Governance Framework Glossary.</p><h4>Function</h4><p>Is an authoritative role at the GLEIF organization that is mandated to issue <a href=\"vLEI\">vLEI</a> credentials to others.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "qualified vlei issuer vlei credential governance framework",
    "url": "https://kerisse.org",
    "anchor": "qualified-vlei-issuer-vlei-credential-governance-framework",
    "definition": "<h1>qualified vlei issuer vlei credential governance framework</h1><h4>Definition</h4><p>A <em>document</em> that details the requirements to enable this Credential to be <strong>issued by</strong> <a href=\"GLEIF\">GLEIF</a> <strong>to</strong> <a href=\"qualified-vlei-issuer\">Qualified vLEI Issuers</a> which allows the Qualified vLEI Issuers to issue, verify and revoke <a href=\"legal-entity-vlei-credential-governance-framework\">Legal Entity vLEI Credentials</a>, <a href=\"legal-entity-official-organizational-role-vlei-credential-governance-framework\">Legal Entity Official Organizational Role vLEI Credentials</a>, and <a href=\"legal-entity-engagement-context-role-vlei-credential-governance-framework\">Legal Entity Engagement Context Role vLEI Credentials</a>.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "QVI",
    "url": "https://kerisse.org",
    "anchor": "QVI",
    "definition": "<h1>QVI</h1><h4>See</h4><p><a href=\"qualified-vlei-issuer\">Qualified vLEI issuer</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "qvi authorized representative",
    "url": "https://kerisse.org",
    "anchor": "qvi-authorized-representative",
    "definition": "<h1>qvi authorized representative</h1><p>A designated representative of a <a href=\"QVI\">QVI</a> authorized, to conduct QVI operations with GLEIF and <a href=\"legal-entity\">Legal Entities</a>. Also referring to a person in the role of a QAR.<br>Paraphrased by @henkvancann from <a href=\"https://www.gleif.org/vlei/introducing-the-vlei-ecosystem-governance-framework/2022-02-07_verifiable-lei-vlei-ecosystem-governance-framework-glossary-draft-publication_v0.9-draft.pdf\">source</a> Draft vLEI Ecosystem Governance Framework Glossary.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "race condition",
    "url": "https://kerisse.org",
    "anchor": "race-condition",
    "definition": "<h1>race condition</h1><h4>Definition</h4><p>A race condition or race hazard is the condition of an electronics, software, or other system where the system&#39;s substantive behavior is dependent on the sequence or timing of other uncontrollable events. It becomes a bug when one or more of the possible behaviors is undesirable.<br><a href=\"https://en.wikipedia.org/wiki/Race_condition\">Source</a>.</p><h4>KERI related</h4><p>| TBW prio 2 |</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "rainbow table attack",
    "url": "https://kerisse.org",
    "anchor": "rainbow-table-attack",
    "definition": "<h1>rainbow table attack</h1><h4>Definition</h4><p>A rainbow table attack is a password cracking method that uses a special table (a “rainbow table”) to crack the password hashes in a database. Applications don’t store passwords in plaintext, but instead encrypt passwords using <a href=\"content-addressable-hash\">hashes</a>. After the user enters their password to login, it is converted to hashes, and the result is compared with the stored hashes on the server to look for a match. If they match, the user is <a href=\"authenticity\">authenticated</a> and able to log<br>More on <a href=\"https://www.beyondidentity.com/glossary/rainbow-table-attack\">source</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "rct",
    "url": "https://kerisse.org",
    "anchor": "rct",
    "definition": "<h1>rct</h1><h4>Definition</h4><p>rct = receipt</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "read update nullify",
    "url": "https://kerisse.org",
    "anchor": "read-update-nullify",
    "definition": "<h1>read update nullify</h1><h4>Definition</h4><p>Read, update, nullify are a set of actions you (or a server) can take on data. &quot;Read&quot; means to view it, &quot;update&quot; means to change it, and &quot;nullify&quot; means to invalidate it, but not &quot;Delete&quot; it. Mind you, there&#39;s also no &quot;Create&quot;.</p><h4>See also</h4><ul><li><a href=\"run-off-the-crud\">Run off the CRUD</a></li><li><a href=\"BADA\">BADA</a></li></ul>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "receipt",
    "url": "https://kerisse.org",
    "anchor": "receipt",
    "definition": "<h1>receipt</h1><h4>Definition</h4><p>event message or reference with one or more witness signatures.</p><p>See Also:<br><a href=\"key-event-receipt\">key event receipt</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "receipt log",
    "url": "https://kerisse.org",
    "anchor": "receipt-log",
    "definition": "<h1>receipt log</h1><h4>Definition</h4><p>ordered record of all key event receipts for a given set of witnesses</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "reconciliation",
    "url": "https://kerisse.org",
    "anchor": "reconciliation",
    "definition": "<h1>reconciliation</h1><h4>Definition</h4><p>Reconciliation is the process in which you decide to accept a fork of the <a href=\"key-event-log\">KEL</a> or not.<br>Source: Samuel Smith, Zoom meeting Jan 2 2024.</p><h4>Advantage</h4><ul><li>You might not have to abandon your identifier after key compromise</li><li>Only few people will see your reconciliation or clean up</li></ul>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "redundant credential",
    "url": "https://kerisse.org",
    "anchor": "redundant-credential",
    "definition": "<h1>redundant credential</h1><h4>Definition</h4><p>Multiple credentials issued by the same issuer (e.g. a <a href=\"QVI\">QVI</a>). They do not have anything to do with each other. They are independently valid.</p><h4>Misbehaviour</h4><p>If a QVI issues two instances of the same credential, and is able to only revoke one. This is a governance issue and this behaviour of a QVI is not recommended. But it can be done this way (issue two revoke one) and it leaves the outside world with one other valid credential.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "registrar",
    "url": "https://kerisse.org",
    "anchor": "registrar",
    "definition": "<h1>registrar</h1><h4>Definition</h4><p>identifiers that serve as backers for each <a href=\"transaction-event-log\">transaction event log</a> (TEL) under its provenance. This list of Registrars can be rotated with events specific to a certain type of TEL. In this way, a Registrar is analogous to a Backer in KERI KELs and Registrar lists are analogous to Backer lists in KERI KELs.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "registration interaction",
    "url": "https://kerisse.org",
    "anchor": "registration-interaction",
    "definition": "<h1>registration interaction</h1><h4>Definition</h4><p>Setup/Registration interaction, new AID and authorization to establish access control. You present a (<a href=\"vLEI\">vLEI</a>) credential. You don&#39;t want that captured and misused. Narrowing the scope to a certain role (e.g. Document Submitter) is a pre-registration via <a href=\"delegation\">delegatable</a> authority.</p><p>The <a href=\"verifiable-credential\">Credential</a> is like a bearer token. Does it matter if the credential was delivered by the <a href=\"issuee\">issuee</a>? The token is <a href=\"proof-of-authority\">proof of the authorization</a>, but does the delivery require the issuee signature? Depends on the context. If it is an idempotent process resubmission has no effect.<br>Source: Samuel Smith / Daniel Hardman / Lance Byrd - Zoom meeting KERI Suite Jan 16 2024; discussion minute 30-60 min</p><h4>Replay attack prevention</h4><p>is important, depending on the context or governance model the issuance itself needs / should / could be signed.</p><h5>Also see</h5><p><a href=\"access-controlled-interaction\">Access-controlled interaction</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "registry",
    "url": "https://kerisse.org",
    "anchor": "registry",
    "definition": "<h1>registry</h1><h4>Definition</h4><p>In our digital mental model it&#39;s an <em>official</em> digital <em>record book</em>. When people refer to a registry, they usually mean a specific instance, within a multi-tenant registry. E.g. <a href=\"https://hub.docker.com/\">Docker Hub</a> is a multi-tenant registry, where there’s a set of <a href=\"https://docs.docker.com/docker-hub/official_images/\">official / public images</a>.</p><h4>Unique Registries</h4><p>A unique registry can be referenced in one of two ways, by <a href=\"namespace\">namespace</a>, or by <a href=\"domain\">domain</a>.</p><img src=\"https://hackmd.io/_uploads/HyXBDKbGi.png\" width=\"400\" /><p><a href=\"https://stevelasker.blog/2020/02/17/registry-namespace-repo-names/\">Source</a></p><h4>ACDC related</h4><p>ACDCs and SAIDS eliminated the need for a centrally controlled namespace registry for credential schemas. <a href=\"schema-registry\">schema registry</a>.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "replay attack",
    "url": "https://kerisse.org",
    "anchor": "replay-attack",
    "definition": "<h1>replay attack</h1><h4>Definition</h4><p>A <em>replay attack</em> occurs when a cybercriminal eavesdrops on a secure network communication, intercepts it, and then fraudulently delays or resends it to misdirect the receiver into doing what the hacker wants. The added danger of replay attacks is that a hacker doesn&#39;t even need advanced skills to decrypt a message after capturing it from the network. The attack could be successful simply by resending the whole thing.<br>More on <strong>how it works</strong> and <strong>stopping</strong> replay attacks at <a href=\"https://www.kaspersky.com/resource-center/definitions/replay-attack\">source</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "repo",
    "url": "https://kerisse.org",
    "anchor": "repo",
    "definition": "<h1>repo</h1><h4>Definition</h4><p>Software is our line of work. In this, &#39;repo&#39; is the short hand for &#39;Repository&#39;, mostly referring to a software repo(sitory) on <a href=\"https://github.com\">Github.com</a>, Gitlab (<a href=\"https://gitlab.com\">https://gitlab.com</a>) or other software repository hosting services. </p><h4>What is a software repository?</h4><p>A software repository, is a storage location for <a href=\"https://en.wikipedia.org/wiki/Package_format\">software packages</a>. Often a table of contents is also stored, along with metadata. A software repository is typically managed by <a href=\"https://en.wikipedia.org/wiki/Version_control\">source control</a> or repository managers. <a href=\"https://en.wikipedia.org/wiki/Package_manager\">Package managers</a> allow automatically installing and updating repositories (sometimes called &quot;packages&quot;).  </p><h4>More on Wikipedia</h4><p><a href=\"https://en.wikipedia.org/wiki/Software_repository\">software repository</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "reputation",
    "url": "https://kerisse.org",
    "anchor": "reputation",
    "definition": "<h1>reputation</h1><h4>Definition</h4><p>Consistent behaviour over time on the basis of which anyone else makes near-future decisions.<br>Source: Samuel Smith at IIW37.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "reputational trust",
    "url": "https://kerisse.org",
    "anchor": "reputational-trust",
    "definition": "<h1>reputational trust</h1><h4>Definition</h4><p>Established by a trusted party offering <a href=\"identity-assurance\">Identity Assurance</a>.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "reserve rotation",
    "url": "https://kerisse.org",
    "anchor": "reserve-rotation",
    "definition": "<h1>reserve rotation</h1><h4>Definition</h4><p>One important use case for <a href=\"partial-rotation\">partial rotation</a> is to enable pre-rotated key pairs designated in one <a href=\"establishment-event\">establishment event</a> <strong>to be held in reserve and not exposed</strong> at the next (immediately subsequent) establishment event.<br>Source <a href=\"https://github.com/WebOfTrust/ietf-keri/blob/main/draft-ssmith-keri.md\">IETF-KERI draft 2022</a> by Samual Smith.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "rev",
    "url": "https://kerisse.org",
    "anchor": "rev",
    "definition": "<h1>rev</h1><h4>Definition</h4><p>rev = vc revoke, verifiable credential revocation</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "revocation",
    "url": "https://kerisse.org",
    "anchor": "revocation",
    "definition": "<h1>revocation</h1><h4>Definition</h4><p>Revocation is the act of <a href=\"https://en.wiktionary.org/wiki/recall\">recall</a> or <a href=\"https://en.wikipedia.org/wiki/Annulment\">annulment</a>. It is the cancelling of an act, the recalling of a grant or privilege, or the making <a href=\"https://en.wikipedia.org/wiki/Void_(law)\">void</a> of some <a href=\"https://en.wikipedia.org/wiki/Deed\">deed</a> previously existing.<br>More on source <a href=\"https://en.wikipedia.org/wiki/Revocation\">Wikipedia</a></p><h4>In identity</h4><p>The term revocation has two completely different meanings in the identity space. In key management one may speak of revoking keys. With statement issuance, authorization issuance, or credential issuance, one may speak of revoking an authorization statement, a token, or a credential.<br>This becomes confusing when the act of revoking keys also implicitly revokes the <a href=\"authorization\">authorization</a> of statements signed with those keys. Any statement may be effectively authorized by virtue of the attached signature(s) made with a set of <a href=\"authoritative\">authoritative</a> keys. The statement itself may be authorizing some other function in the system. So, the verification of the signature on an authorizing statement is essential to determining the authoritativeness of the associated authorized function. To clarify when an authorization is conveyed via a signed statement, the signature acts to authorize the statement.</p><h4>How KERI avoids confusion</h4><p>KERI terminology usually avoids confusion between <a href=\"rotation\">rotation</a> and revocation because a key rotation operation is the equivalent of a key revocation operation <strong>followed by a key replacement operation</strong>. So one operation, rotate, is implemented instead of two operations (revoke and replace).<br><strong>A bare key revocation is indicated by replacement with a null key.</strong> So only one operation is needed, that is, rotate where a special case of rotation is to rotate to a null key.</p><h4>Also see</h4><p><a href=\"revocation-event\">Revocation event</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "revocation event",
    "url": "https://kerisse.org",
    "anchor": "revocation-event",
    "definition": "<h1>revocation event</h1><h4>Definition</h4><h4>Considerations</h4><h4>KERI related</h4><p>An event that revokes <a href=\"control-authority\">control authority</a> over an <a href=\"identifier\">identifier</a>. From that point in time the authoritative key-pairs at hand are not valid anymore.</p><p>The time stamp of a revocation is useful but not for security purposes, it can be gamed by an attacker. KERI should be fitted in a way so that it&#39;s <em>not possible</em> to rewrite history. The tool we have is the ordering of the events in a <a href=\"KEL\">KEL</a>.</p><h4>Also see</h4><p><a href=\"revocation\">Revocation</a></p><h4>Beware: Suspension is non-existing</h4><p>A temporary revocation of a grant or privilege is called a suspension. We don&#39;t have this type of state or event in KERI.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "ricardian contract",
    "url": "https://kerisse.org",
    "anchor": "ricardian-contract",
    "definition": "<h1>ricardian contract</h1><h4>Definition</h4><p>The Ricardian contract, as invented by Ian Grigg in 1996, is a method of recording a document as a <a href=\"https://en.wikipedia.org/wiki/Contract\">contract</a> at law, and linking it securely to other systems, such as accounting, for the contract as an issuance of value.<br>It is robust through use of identification by <a href=\"https://en.wikipedia.org/wiki/Cryptographic_hash_function\">cryptographic hash function</a>, transparent through use of readable text for legal prose and efficient through <a href=\"https://en.wikipedia.org/wiki/Markup_language\">markup language</a> to extract essential information.<br>More at <a href=\"https://en.wikipedia.org/wiki/Ricardian_contract\">source Wikipedia</a></p><h4>Related to KERI and ACDC</h4><p>Ricardian contracts provide a human readable twin to the seals and and signatures (commitments) in binary format in <a href=\"ACDC\">ACDC</a>.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "RID",
    "url": "https://kerisse.org",
    "anchor": "RID",
    "definition": "<h1>RID</h1><h4>See</h4><p><a href=\"root-autonomic-identifier\">Root autonomic identifier (AID)</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "root autonomic identifier",
    "url": "https://kerisse.org",
    "anchor": "root-autonomic-identifier",
    "definition": "<h1>root autonomic identifier</h1><h4>Definition</h4><p>An entity may provide the <a href=\"root-of-trust\">root-of-trust</a> for some ecosystem (with delegation )via its root <a href=\"AID\">AID</a>. Let’s call this the <em>RID</em> for &quot;root AID&quot;. The RID must be protected using the highest level of <a href=\"security\">security</a> in its <a href=\"key-management\">key management</a>. Although through the use of a <a href=\"multi-valent\">multi-valent</a> key management infrastructure, the entity can employ extreme protection of the RID while still enabling more performant key management infrastructure for its operations.<br>Source <a href=\"https://github.com/SmithSamuelM/Papers/blob/master/whitepapers/IdentifierTheory_web.pdf\">Universal Identifier Theory</a> by Samuel Smith</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "root of trust",
    "url": "https://kerisse.org",
    "anchor": "root-of-trust",
    "definition": "<h1>root of trust</h1><h4>Definition</h4><p>A root-of-trust is some component of a system that is <a href=\"security\">secure</a> by design and its security characteristics may be inherently trusted or relied upon by other components of the system.</p><h6>Root-of-trust</h6><p>Replace human basis-of-trust with cryptographic root-of-trust. With verifiable digital signatures from asymmetric key cryptography we may not trust in “what” was said, but we may trust in “who” said it.<br>The root-of-trust is consistent attribution via verifiable integral <a href=\"non-repudiable\">non-repudiable</a> statements.</p><p>A root of trust is a foundational component or process in the identity system that is relied on by other components of the system and whose failure would compromise the integrity of the bindings. A root of trust might be primary or secondary depending on whether or not it is replaceable. Primary roots of trust are irreplaceable. Together, the roots of trust form the trust basis for the system.</p><h4>KERI related</h4><p>We distinguish a <a href=\"primary-root-of-trust\">primary root-of-trust</a> in a KEL and a <a href=\"secondary-root-of-trust\">secondary root-of-trust</a>, for example in a TEL or data on a blockchain.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "rot",
    "url": "https://kerisse.org",
    "anchor": "rot",
    "definition": "<h1>rot</h1><h4>Definition</h4><p><a href=\"JSON\">JSON</a> field name (attribute) for Rotation Event; its content (value) contains a hash pointer. All <a href=\"transaction-event-log\">TEL</a> events are anchored in a <a href=\"key-event-log\">KEL</a> in either ixn (<a href=\"interaction-event\">interaction</a>) or <a href=\"rot\">rot</a> (<a href=\"rotation-event\">rotation event</a>s). This is the foundation enabling a verifiable credential protocol to be built on top of KERI.<br><a href=\"https://kentbull.com/2023/03/09/keri-tutorial-series-treasure-hunting-in-abydos-issuing-and-verifying-a-credential-acdc/\">Source</a> Kent Bull 2023</p><h4>Also see</h4><p><a href=\"ixn\">ixn</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "rotation",
    "url": "https://kerisse.org",
    "anchor": "rotation",
    "definition": "<h1>rotation</h1><h4>Definition</h4><p>The operation of revoking and replacing the set of <a href=\"authoritative\">authoritative</a> <a href=\"key-pair\">key pairs</a> for an <a href=\"AID\">AID</a>. This operation is made verifiable and <a href=\"duplicity\">duplicity</a> evident upon acceptance as a rotation event that is appended to the AID&#39;s <a href=\"KEL\">KEL</a>.<br>Source <a href=\"https://github.com/WebOfTrust/ietf-keri/blob/main/draft-ssmith-keri.md#basic-terminology\">Sam Smith</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "rotation authority",
    "url": "https://kerisse.org",
    "anchor": "rotation-authority",
    "definition": "<h1>rotation authority</h1><h4>Definition</h4><p>The (exclusive) right to rotate the authoritative key pair and establish changed control authority.</p><h4>Relation to rotation authority</h4><p>The original controller of an <a href=\"autonomic-identifier\">AID</a> can hold exclusive rotation authority. Because control authority is split between two key sets, the first for <a href=\"signing-authority\">signing authority</a> and the second (<a href=\"pre-rotation\">pre-rotated</a>) for rotation authority, the associated thresholds and key list can be structured in such a way that a designated <a href=\"custodial-agent\">custodial agent</a> can hold signing authority while the original controller can hold exclusive rotation authority.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "rotation event",
    "url": "https://kerisse.org",
    "anchor": "rotation-event",
    "definition": "<h1>rotation event</h1><h4>Definition</h4><p>An <a href=\"establishment-event\">establishment event</a> representing a transfer of root control authority of an identifier from the current set of controlling keys to new set committed to in the prior establishment event (inception or rotation) as the pre-rotated key pair set.<br>Source <a href=\"https://github.com/SmithSamuelM/Papers/blob/master/whitepapers/KERI_WP_2.x.web.pdf\">KERI Whitepaper Section 7.21 page 46</a></p><p>This event provides the information needed to change the key-state including a change to the set of <a href=\"authoritative\">authoritative</a> keypairs for an <a href=\"autonomic-identifier\">AID</a>.<br>Source <a href=\"https://github.com/WebOfTrust/ietf-keri/blob/main/draft-ssmith-keri.md#basic-terminology\">Sam Smith</a></p><h4>The inner working</h4><p>We start with a <a href=\"root-of-trust\">root-of-trust</a> in public/private key-pair that is bound to an identifier derived from the key-pair. From this key-pair and then we can rotate controlling authority to other key-pairs with signed rotation messages (events). These rotation messages are witnessed by witnesses designated in the inception event and any subsequent rotation events. Upon completion of successful witnessing a receipt message is sent back to the identity controller performing the rotation and the controller keeps track of these receipts in a <a href=\"key-event-receipt-log\">key event receipt log</a>.<br>The infrastructure needed to keep track of these key events including inception events, rotation events, and non-establishment events is key event receipt infrastructure, thus the acronym &quot;KERI&quot;: <a href=\"key-event-receipt-infrastructure\">Key Event Receipt Infrastructure</a>.\\<br><em>(SamASmith)</em></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "rpy",
    "url": "https://kerisse.org",
    "anchor": "rpy",
    "definition": "<h1>rpy</h1><h4>Definition</h4><p>rpy = reply</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "RUN",
    "url": "https://kerisse.org",
    "anchor": "RUN",
    "definition": "<h1>RUN</h1><h4>Definition</h4><p>The acronym for the new peer-to-peer end-verifiable monotonic update policy is RUN (<strong>Read, Update, Nullify</strong>). </p><p>RUN as opposed to <a href=\"CRUD\">CRUD</a> which is the traditional client-server database update policy.</p><h4>OOBI related</h4><p>We <a href=\"run-off-the-crud\">RUN off the CRUD</a>, which means that because the source of truth for each data item is a decentralized controller Peer, a given database hosted by any Peer does not create records in the traditional sense of a server creating records for a client.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "run off the crud",
    "url": "https://kerisse.org",
    "anchor": "run-off-the-crud",
    "definition": "<h1>run off the crud</h1><h4>Definition</h4><p><em>RUN off the <a href=\"CRUD\">CRUD</a></em> </p><p>RUN stands for Read , Update,  Nullify. Why is it preferred (&#39;run off&#39;) over the CRUD (Create, Update, Delete)?</p><p>Consider the need to protect &#39;<em>authentic data</em>&#39; in a decentralized environment.</p><p>In a decentralized control model, the data always originates from a controller (aka client). The data created (sourced) by the controller follows the principle of &#39;<em>Non-Interactive Replay Monotonicity</em>&#39; to be able to protect the data from a replay (events are changed) or a deletion (some events are deleted) attacks. That is to say, the data (or events comprising it) is never deleted, it&#39;s rather always added to via updates. Each update, therefore, forms a verifiable, continuous log ( e.g. by providing growing sequence number, date timestamp, etc for each update). To enable invalidation of data, a special update, called Nullify, is used.</p><p>The client, therefore, updates the server (it&#39;s peer or peers), which just maintains the log following certain rules (see <a href=\"best-available-data-acceptance-mechanism\">BADA</a> - Best Available Data Acceptance).</p><p>To summarise, the server can only Read the log, add Updates to it, including Nullifying ones. So <em>no</em> Create or Delete.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "SAD",
    "url": "https://kerisse.org",
    "anchor": "SAD",
    "definition": "<h1>SAD</h1><h4>See</h4><p><a href=\"self-addressing-data\">Self addressing data</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "SAID",
    "url": "https://kerisse.org",
    "anchor": "SAID",
    "definition": "<h1>SAID</h1><h4>See</h4><p><a href=\"self-addressing-identifier\">Self-addressing identifier</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "sally",
    "url": "https://kerisse.org",
    "anchor": "sally",
    "definition": "<h1>sally</h1><h4>Definition</h4><p>is an implementation of a verification service and acting as a reporting server. It is purpose-built software for the vLEI ecosystem to allow participants in the vLEI ecosystem present credentials, so the <a href=\"GLEIF\">GLEIF</a> Reporting API can show what <a href=\"vLEI\">vLEIs</a> are; issued to <a href=\"legal-entity\">Legal Entities</a>.</p><h4>Inner working</h4><p>The Sally <a href=\"vLEI\">vLEI</a> Audit Reporting Agent <em>receives presentations of credentials</em> and notices of <a href=\"revocation-event\">revocation</a>, verifies the structure and cryptographic integrity of the credential or revocation event and performs a POST to the configured webhook <a href=\"URL\">URL</a><br><a href=\"https://github.com/GLEIF-IT/sally\">Source</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "salt",
    "url": "https://kerisse.org",
    "anchor": "salt",
    "definition": "<h1>salt</h1><h4>Definition</h4><p>In <a href=\"https://en.wikipedia.org/wiki/Cryptography\">cryptography</a>, a salt is <a href=\"https://en.wikipedia.org/wiki/Random_Number_Generator\">random</a> data that is used as an additional input to a <a href=\"https://en.wikipedia.org/wiki/One-way_function\">one-way function</a> that <a href=\"https://en.wikipedia.org/wiki/Cryptographic_hash_function\">hashes</a> <a href=\"https://en.wikipedia.org/wiki/Data_(computing)\">data</a>, a <a href=\"https://en.wikipedia.org/wiki/Password\">password</a> or <a href=\"https://en.wikipedia.org/wiki/Passphrase\">passphrase</a>. </p><h5>Usage</h5><p>Salts are used to safeguard passwords in storage. Historically, only a cryptographic hash function of the password was stored on a system, but over time, additional safeguards were developed to protect against duplicate or common passwords being identifiable (as their hashes are identical).<a href=\"https://en.wikipedia.org/wiki/Salt_(cryptography)#cite_note-2\">[2]</a> Salting is one such protection.</p><h5>More in source</h5><p><a href=\"https://en.wikipedia.org/wiki/Salt_(cryptography)\">Wikipedia</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "salter",
    "url": "https://kerisse.org",
    "anchor": "salter",
    "definition": "<h1>salter</h1><h4>Definition</h4><p>A primitive that represents a <a href=\"seed\">seed</a>. It has the ability to generate new <a href=\"signer\">Signer</a>s.<br><a href=\"https://github.com/WebOfTrust/cesride#terminology\">Source</a> by Jason Colburne</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "salty nonce blinding factor",
    "url": "https://kerisse.org",
    "anchor": "salty-nonce-blinding-factor",
    "definition": "<h1>salty nonce blinding factor</h1><h4>Definition</h4><p>For ease of sharing a secret and hiding information with this secret of Blindable State TELs we use a Salty Nonce Blinding Factor. You’d like to hide the state of certain credentials to some verifiers in the future, while keeping the state verifiable for others.</p><h4>How</h4><p>A way to share the key to blind/unblind the state of a TEL is</p><ul><li><a href=\"https://datatracker.ietf.org/doc/html/rfc6238\">HTOP, HMAC-Based One-Time Password</a></li><li><a href=\"https://datatracker.ietf.org/doc/html/rfc6238\">Time-Based One-Time Password</a></li><li>HDKM, Hierarchical Deterministic Key Management, based on a shared master key you could split off subkeys in a predictable manner.</li></ul><p>The blinding is performed by the issuer, the issuee could request the blinding.</p><h4>Example</h4><p>I don’t want my employment states shared in the future with former possible employers.</p><h4>More info</h4><p><a href=\"https://github.com/trustoverip/tswg-acdc-specification/blob/main/draft-ssmith-acdc.md#blindable-state-tel\">Blindable State TEL</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "SATP",
    "url": "https://kerisse.org",
    "anchor": "SATP",
    "definition": "<h1>SATP</h1><h4>See</h4><p><a href=\"secure-asset-transfer-protocol\">Secure asset transfer protocol</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "schema namespace registry",
    "url": "https://kerisse.org",
    "anchor": "schema-namespace-registry",
    "definition": "<h1>schema namespace registry</h1><h4>Definition</h4><p>a centrally managed <a href=\"schema-registry\">schema registry</a> where corporations or individuals reserve schemas within a specific <a href=\"namespace\">namespace</a> in order to have an interoperable schema that is labeled with a corporation-specific or individual-specific namespace. </p><h4>ACDC related</h4><p><a href=\"directed-acyclic-graph\">Graphs</a> in ACDC have decentralised the old-school schema registry, so it&#39;s <a href=\"interoperability\">interoperable</a> by design.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "schema registry",
    "url": "https://kerisse.org",
    "anchor": "schema-registry",
    "definition": "<h1>schema registry</h1><h4>Definition</h4><p>Central <a href=\"registry\">registry</a> for credential schemas based on namespaces. </p><h4>ACDC related</h4><p>ACDCs and SAIDS <strong>eliminated the need</strong> for a centrally controlled namespace registry for credential schemas.</p><h4>KERI related and ToIP definitions</h4><p>From our vocabulary that contains the term &quot;<a href=\"public-verifiable-credential-registry\">Public verifiable credential registry</a>&quot; there&#39;s follow-up on ToIP definitions like | TBW |</p><h4>Comparison and explanation</h4><p><a href=\"https://www.syntio.net/en/labs-musings/schema-registry-comparison/\">Syntio</a> comparison of (old-school?) centralized schema registries.</p><p>This source has conceptual explanations in diagrams like the one below and code examples. However, <strong>be aware that ACDC solves this in a different way</strong> with <a href=\"VDS\">KERI-based verifiable data structures</a> and <a href=\"graph-fragment\">graph fragments</a>.</p><img src=\"https://hackmd.io/_uploads/H1CE6FZfo.png\" width=\"500\" />"
  },
  {
    "organisation": "WebOfTrust",
    "term": "SCID",
    "url": "https://kerisse.org",
    "anchor": "SCID",
    "definition": "<h1>SCID</h1><h4>See</h4><p><a href=\"self-certifying-identifier\">Self-certifying identifier</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "seal",
    "url": "https://kerisse.org",
    "anchor": "seal",
    "definition": "<h1>seal</h1><h4>Definition</h4><p>A cryptographic commitment in the form of a cryptographic digest or hash tree root (Merkle root) that anchors arbitrary data or a tree of hashes of arbitrary data to a particular event in the key event sequence.<br>Source <a href=\"https://github.com/SmithSamuelM/Papers/blob/master/whitepapers/KERI_WP_2.x.web.pdf\">KERI Whitepaper section 7.23 page 47</a></p><p>A seal is a cryptographic proof in a secondary root-of-trust (e.g. TEL) that is anchored in a primary-root-of-trust (e.g.KEL).<br>Source Same Smith</p><h4>What is it worth?</h4><p>The payload of the seal becomes immutable and the controller commits a signature to the seal.</p><p>| TBW prio 2 |</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "secondary root of trust",
    "url": "https://kerisse.org",
    "anchor": "secondary-root-of-trust",
    "definition": "<h1>secondary root of trust</h1><h4>Definition</h4><p>In KERI its a <a href=\"root-of-trust\">root-of-trust</a> that, for its secure attribution, depends on another verifiable data structure (VDS) which MUST be a <a href=\"primary-root-of-trust\">primary root-of-trust</a>.<br>By its nature and cryptographic anchoring via <a href=\"seal\">seals</a> to a primary root-of-trust, a secondary root-of-trust still has a high level of trustability and can be automatically verified.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "secure",
    "url": "https://kerisse.org",
    "anchor": "secure",
    "definition": "<h1>secure</h1><h4>See</h4><p><a href=\"security\">Security</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "secure asset transfer protocol",
    "url": "https://kerisse.org",
    "anchor": "secure-asset-transfer-protocol",
    "definition": "<h1>secure asset transfer protocol</h1><h4>Definition</h4><p>An IETF protocol (and working group) in the making (as of mid 2022) for moving assets between blockchains.</p><h5>More information at IETF</h5><p><a href=\"https://datatracker.ietf.org/wg/satp/about/\">About SATP working group</a></p><h5>Relationship with KERI</h5><p>KERI has portable identifiers per definition. KERI identifier are not locked into silos like distributed ledgers. KERI IDs have their own native hash-chained data structures (KEL, KERL and TEL).</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "secure attribution",
    "url": "https://kerisse.org",
    "anchor": "secure-attribution",
    "definition": "<h1>secure attribution</h1><h4>Definition</h4><p>In short: secure attribution is &quot;whodunit?!&quot; in cyberspace.</p><p>Secure attribution is strongly related to <em>making and proving statements</em>. A <a href=\"controller\">controller</a> makes statements to the a <a href=\"validator\">validator</a> or verifier, who in turn validates the statements issued. A <a href=\"controller\">controller</a> &quot;<em>owns</em>&quot; the statement: content and attribution via digital signatures.<br><em>Secure attribution of a statement</em> is a way of proving that <strong>the statement is an authentic statement of the <code>controller</code></strong>. </p><h4>Relationship with KERI</h4><p>In the context of KERI and ACDC <em>secure</em> means a <strong><code>Validator</code> may cryptographically verify</strong> the statement.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "secure private authentic confidentiality",
    "url": "https://kerisse.org",
    "anchor": "secure-private-authentic-confidentiality",
    "definition": "<h1>secure private authentic confidentiality</h1><h4>Definition</h4><p>ToIP Trust Spanning Layer Group realized we do have a secure authentication layer (KERI) but we don&#39;t have a secure confidentiality and privacy mechanism. Sam Smith proposes SPAC paper to define this.Related:<a href=\"https://www.usenix.org/system/files/sec22-cohen.pdf\">https://www.usenix.org/system/files/sec22-cohen.pdf</a></p><h4>Reason</h4><p>If someone has set up a public AID, with public Witnesses we don&#39;t have a mechanism to support private communication with this AID| TBW |</p><h4>Details</h4><p><a href=\"https://github.com/SmithSamuelM/Papers/blob/master/whitepapers/SPAC_Message.md\">SPAC paper</a></p><p>Tech meet KERI <a href=\"https://hackmd.io/-soUScAqQEaSw5MJ71899w#2023-06-27\">recording</a> from minute 35, date June 29 2023 and also discussed Tech meeting KERI Aug 3 2023 from minute 30 or so till end.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "security",
    "url": "https://kerisse.org",
    "anchor": "security",
    "definition": "<h1>security</h1><h4>Definition</h4><p>&#39;secure&#39; is free from or not exposed to danger or harm; safe. For <a href=\"identifier\">identifier</a>s <em>security</em> typically means secure from <em>exploit</em> or <em>compromise</em>. More specifically an identifier is secure with respect to an entity if there is a mechanism by which that entity may prove it has <a href=\"controller\">control</a> over the identifier. </p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "security cost performance architecture trade off",
    "url": "https://kerisse.org",
    "anchor": "security-cost-performance-architecture-trade-off",
    "definition": "<h1>security cost performance architecture trade off</h1><h4>Definition</h4><p>The degree of protection offered by a key management infrastructure usually forces a trade-off between security, cost, and performance.<br>Typically, key generation happens relatively infrequently compared to event signing. But highly secure key generation may not support highly performant signing. This creates an architecture trade-off problem.<br>Paraphrased from source <a href=\"https://github.com/SmithSamuelM/Papers/blob/master/whitepapers/IdentifierTheory_web.pdf\">Universal Identifier Theory</a> by Samuel Smith</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "security overlay properties trillema",
    "url": "https://kerisse.org",
    "anchor": "security-overlay-properties-trillema",
    "definition": "<h1>security overlay properties trillema</h1><h4>Definition</h4><p>An identifier system has some degree of any combination of the three properties <a href=\"authenticity\">authenticity</a>, <a href=\"privacy\">privacy</a> and <a href=\"confidentiality\">confidentiality</a>, but not all three completely.</p><h4>Why a trillema?</h4><p>The reason a system may not provide all three completely is that no single cryptographic operation provides all three properties.<br>As a result any cryptographic system must layer the operations. But layering exposes weaknesses due to the separation between the layers. Because no single layer can exhibit all three properties, one must pick one or two properties for the bottom layer and then layer on top the remaining property or properties on one or more layers.<br>Source: Universal Identifier Theory by Samuel Smith</p><p><img src=\"https://github.com/weboftrust/WOT-terms/static/img/Trilemma-of-Identifier-System-Properties.png\" alt=\"Trilemma of Identifier System Properties\"></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "seed",
    "url": "https://kerisse.org",
    "anchor": "seed",
    "definition": "<h1>seed</h1><h4>Definition</h4><p>In cryptography a &#39;seed&#39; is a <em>pseudorandomly</em> generated number, often expressed in representation of a series of words.<br>Paraphrased from <a href=\"https://en.wikipedia.org/wiki/Random_seed\">wikipedia</a></p><h4>Example 24-word seed</h4><pre><code>broken toddler farm argue elder behind sea ramp cake rabbit renew option combine guilt inflict sentence what desert manage angry manual grit copy hundred</code></pre><p>Test <a href=\"https://iancoleman.io/bip39/\">here</a> yourself.</p><h4>Pseudorandom is not exactly random</h4><p>Although sequences that are closer to truly random can be generated using <a href=\"https://en.wikipedia.org/wiki/Hardware_random_number_generator\">hardware random number generators</a>, pseudorandom number generators are important in practice for their speed in number generation and their reproducibility.<br>Source <a href=\"https://en.wikipedia.org/wiki/Pseudorandom_number_generator\">wikipedia</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "selective disclosure",
    "url": "https://kerisse.org",
    "anchor": "selective-disclosure",
    "definition": "<h1>selective disclosure</h1><h4>Definition</h4><p>Selective disclosure is a from partial disclosure that has a different cryptographic fundament: a sort of cryptographic aggregator (not an accumulator).</p><p>Selective disclosure is a list of field maps. You can choose to blind and publish every single field map, but you have to disclosure all the field maps, either blinded or published.</p><p>It is an aggregator because you have to disclosure all the blinded fields when you do the selective disclosure.</p><h4>Related</h4><p><a href=\"partial-disclosure\">Partial Disclosure</a></p><p>Source: distilled from ACDC Zoom meeting, date March 28, 2023</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "self addressing data",
    "url": "https://kerisse.org",
    "anchor": "self-addressing-data",
    "definition": "<h1>self addressing data</h1><h4>Definition</h4><p>While all KERI event messages are self-addressing data (SAD), there is a broad class of SADs that are not KERI events but that require signature attachments. ACDC Verifiable credentials fit into this class of SADs. With more complex data structures represented as SADs, such as verifiable credentials, there is a need to provide signature attachments on nested subsets of SADs.<br>(Philip Feairheller, ietf-cesr-proof)</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "self addressing identifier",
    "url": "https://kerisse.org",
    "anchor": "self-addressing-identifier",
    "definition": "<h1>self addressing identifier</h1><h4>Definition</h4><p>An identifier that is deterministically generated from and embedded in the content it identifies, making it and its data mutually tamper-evident.</p><h5>To generate a SAID</h5><ol><li>Fully populate the data that the SAID will identify, leaving a placeholder for the value of the SAID itself.</li><li>Canonicalize the data, if needed. The result is called the SAID&#39;s <strong>identifiable basis</strong>.</li><li>Hash the <em>identifiable basis</em>. The result is the value of the SAID.</li><li>Replace the placeholder in <em>identifiable basis</em> the with the newly generated identifier, so the SAID is embedded in the data it identifies. The result is called the <strong>saidified data.</strong></li></ol><h5>To verify that a SAID truly identifies a specific chunk of data</h5><ol><li>Canonicalize the data, if needed. The result is <strong>claimed saidified data</strong>.</li><li>In the <em>claimed saidified data</em>, replace the SAID value with a placeholder. The result is the <strong>identifiable basis</strong> for the SAID.</li><li>Hash the <em>identifiable basis</em>.</li><li>Compare the hash value to the SAID. If they are equal, then the SAID identifies the <em>claimed saidified data</em>.</li></ol><h5>Differences in SAID algorthms manifest in the following choices</h5><ul><li>how data is canonicalized</li><li>which hash algorithm is used</li><li>which placeholder is used</li><li>how the bytes produced by the hash algorithm are encoded</li><li>how the SAID value is formatted</li></ul><h5>Notation</h5><p>A terse way to describe a SAID and its data is to write an expression that consists of the token <code>SAID</code> followed by a token with field names in canonical order, where the field containing the SAID itsef is marked by the suffix <code>=said</code>. For example, the saidification of a simple <code>ContactInfo</code> data structure might be given as <code>SAID(name, address, phone, email, id=said)</code>.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "self certifying identifier",
    "url": "https://kerisse.org",
    "anchor": "self-certifying-identifier",
    "definition": "<h1>self certifying identifier</h1><h4>Definition</h4><p>A Self-Certifying Identifier (SCID) cryptographically binds an identifier to a public and private key pair. It is an identifier that can be proven to be the one and only identifier tied to a public key using cryptography alone.</p><h4>Signing</h4><p>A <a href=\"controller\">controller</a> issues an own Identifier by binding a generated public private key pair to an identifier. After this a controller is able to sign the identifier and create a certificate. Also called a <em>cryptonym</em>. The simplest form of a self-certifying identifier includes either the public key or a unique fingerprint of the public key as a <a href=\"prefix\">prefix</a> in the identifier.</p><h4>Important SCID properties:</h4><ul><li>Self-contained secure cryptographic <a href=\"root-of-trust\">root-of-trust</a></li><li>Decentralized control via <a href=\"PKI\">private key management</a></li><li>Universally unique identifiers</li></ul><h4>Related to KERI</h4><p>A self-certifying identifier (SCID) is a type of <a href=\"cryptonym\">cryptonym</a> that is uniquely cryptographically derived from the public key of an asymmetric non-repudiable signing keypair, (public, private).<br>It is self-certifying or more precisely <strong>self-authenticating</strong> because it does not rely on a trusted entity. The <a href=\"authenticity\">authenticity</a> of a non-repudiable signature made with the private key may be verified by extracting the public key from either the identifier itself or incepting information uniquely associated with the cryptographic derivation process for the identifier. In a <em>basic SCID</em>, the mapping between an identifier and its controlling public key is self-contained in the identifier itself. A basic SCID is <a href=\"ephemeral\">ephemeral</a> i.e. it does not support <a href=\"rotation\">rotation</a> of its keypairs in the event of key weakness or compromise and therefore must be abandoned once the controlling private key becomes weakened or compromised from exposure.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "self framing",
    "url": "https://kerisse.org",
    "anchor": "self-framing",
    "definition": "<h1>self framing</h1><h4>Definition</h4><p>a textual encoding that includes type, size, and value is self-framing.<br>Source <a href=\"https://www.ietf.org/archive/id/draft-ssmith-cesr-02.txt\">Samual M Smith</a></p><h4>Detailed explanation</h4><p>A self-framing text primitive may be parsed without needing any additional delimiting characters. Thus a stream of concatenated primitives may be individually parsed without the need to encapsulate the primitives inside textual delimiters or envelopes. Thus a textual self-framing encoding provides the core capability for a streaming text protocol like <a href=\"https://en.wikipedia.org/wiki/Streaming_Text_Oriented_Messaging_Protocol\">STOMP</a> or <a href=\"https://github.com/RaetProtocol/raet\">RAET</a>.</p><h4>Related to CESR</h4><p>Although a first class textual encoding of cryptographic primitives is the primary motivation for the <a href=\"composable-event-streaming-representation\">CESR</a> protocol defined herein, CESR is sufficiently flexible and extensible to support other useful data types, such as, integers of various sizes, floating point numbers, date-times as well as generic text. Thus this protocol is generally useful to encode in text data data structures of all types not merely those that contain cryptographic primitives.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "self sovereign identity",
    "url": "https://kerisse.org",
    "anchor": "self-sovereign-identity",
    "definition": "<h1>self sovereign identity</h1><h4>Definition</h4><p>Self-Sovereign Identity (SSI) is a term that has many different interpretations, and that we use to refer to concepts/ideas, architectures, processes and technologies that aim to support (autonomous) parties as they negotiate and execute electronic transactions with one another.<br>Paraphrased by @henkvancann, sources <a href=\"https://essif-lab.github.io/framework/docs/terms/self-sovereign-identity\">eSSIF-lab</a> and <a href=\"https://github.com/trustoverip/toip/wiki/self-sovereign-identity\">ToIP</a>.</p><h4>More in ToIP glossary</h4><p><a href=\"https://github.com/trustoverip/toip/wiki/self-sovereign-identity\">SSI</a></p><h4>eSSIF-lab excerpt</h4><p>The definition started in the blog &quot;<a href=\"http://www.lifewithalacrity.com/2016/04/the-path-to-self-soverereign-identity.html\">The Path to Self-Sovereign Identity</a>&quot; by Christopher Allen in 2016. has not resulted in a consensus today. While some see the ten principles of SSI that Allen proposed as the definition of SSI, he formulated them as &quot;a departure point to provoke a discussion about what&#39;s truly important&quot;. And it is obvious that what is important differs per <a href=\"https://essif-lab.github.io/framework/docs/terms/party\">party</a>.<br><a href=\"https://essif-lab.github.io/framework/docs/terms/self-sovereign-identity\">Source eSSIF-lab</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "self sovereignty",
    "url": "https://kerisse.org",
    "anchor": "self-sovereignty",
    "definition": "<h1>self sovereignty</h1><h4>See</h4><p><a href=\"https://github.com/trustoverip/toip/wiki/self-sovereignty\">Self sovereignty</a> in Trust over IP wiki.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "server sent event",
    "url": "https://kerisse.org",
    "anchor": "server-sent-event",
    "definition": "<h1>server sent event</h1><h4>Definition</h4><p>Mailbox notifications; a streaming service for the agent U/I, to get notifications from the KERI system itself.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "service endpoint",
    "url": "https://kerisse.org",
    "anchor": "service-endpoint",
    "definition": "<h1>service endpoint</h1><h4>Definition</h4><p>In our context we consider a <strong>web service endpoint</strong> which is a <a href=\"uniform-resource-locator\">URL</a> at which clients of specific service can get access to the service.</p><h4>Inner working</h4><p>By referencing that URL, clients can get to operations provided by that service.</p><p>Paraphrased from <a href=\"https://study.com/academy/lesson/what-is-web-service-endpoint-definition-concept.html\">source</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "siger",
    "url": "https://kerisse.org",
    "anchor": "siger",
    "definition": "<h1>siger</h1><h4>See <a href=\"indexed-signature\">Indexed signature</a></h4>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "signed digest",
    "url": "https://kerisse.org",
    "anchor": "signed-digest",
    "definition": "<h1>signed digest</h1><h4>Definition</h4><p>commitment to content, by digitally signing a digest of this content.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "signer",
    "url": "https://kerisse.org",
    "anchor": "signer",
    "definition": "<h1>signer</h1><h4>Definition</h4><p>A primitive that represents a private key. It has the ability to create Sigers and Cigars (signatures).<br><a href=\"https://github.com/WebOfTrust/cesride#terminology\">Source</a> by Jason Colburne</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "signify",
    "url": "https://kerisse.org",
    "anchor": "signify",
    "definition": "<h1>signify</h1><h4>Definition</h4><p>Signify is a web client <a href=\"key-event\">(key) event</a> signing - and key pair creation app that minimizes the use of <a href=\"KERI\">KERI</a> on the client.</p><p>The main reason is that we want to minimize what needs to be put in the client or the cloud. Most proofs should be cryptographically verifiable and it should not be able to be repudiated (successful <a href=\"#Finger-pointing\">pointing fingers</a> should be prevented), and this happens when the signatures come straight from the controller.</p><h4>Background</h4><p>On a small set of activities that need to be protected in infrastructure for key management</p><ul><li>key pair creation</li><li>key pair storage</li><li>event generating </li><li>event signing</li><li>event verification</li></ul><h4>Finger pointing</h4><p>What are the liabilities do a cloud host has to worry about?</p><ul><li>Cloud host does not want to see keys (non-repudiation).  So we want to move event signing out of the cloud agent.</li><li>Key state (next <a href=\"digest\">digest</a> and current signing key) come from the client</li><li>Cloud host ensures that the code supply chain is secure and never sees the private keys</li></ul>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "signify keria request authentication protocol",
    "url": "https://kerisse.org",
    "anchor": "signify-keria-request-authentication-protocol",
    "definition": "<h1>signify keria request authentication protocol</h1><h4>Definition</h4><p>SKRAP is a client to the KERIA server. Mobile clients will be using SKRAP to connect to KERI <a href=\"AID\">AID</a>s via <a href=\"agent\">agent</a>s in the new, multi-tenant Mark II Agent server, <a href=\"keria\">KERIA</a>. Also, browser extensions will use SKRAP in order to use a wallet similar to <em>MetaMask</em>, except it will be KERIMask, and it will be a browser extension.<a href=\"KERIMask\">KERIMask</a> will connect to KERIA servers in order for a person to control AIDs from their browser extension.</p><p>SKRAP is also usable from HSMs and hardware wallets because the keys from the hardware wallet, along with some app code, connect through SKRAP to agents running in a KERIA server.</p><p><a href=\"signify\">Signify</a> signs things at the edge. This includes <a href=\"ACDC\">ACDC</a>s. KERIA will be used to send communications between agents. The things KERIA sends are signed by Signify.  </p><p>Source: Kent Bull in KERI Slack May 2023</p><h4>Related to KERIA</h4><p>The KERIA service will expose 3 separate HTTP endpoints on 3 separate network interfaces.</p><ol><li>Boot Interface - Exposes one endpoint for Agent Worker initialization.</li><li>Admin Interface - The REST API for command and control operations from the Signify Client.</li><li>KERI Protocol Interface - CESR over HTTP endpoint for KERI protocol interactions with the rest of the world.</li></ol><p>This separation allows for the Boot interface to be expose to internal infrastructure only (or disabled all together) while exposing the other two interfaces externally. If a KERIA instance is launched in static worker mode, meaning all agent workers are configured at start up only the Boot interface can be disabled completely.<br>More at source <a href=\"https://github.com/WebOfTrust/signify/blob/main/protocol.md\">Github Signify</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "signing authority",
    "url": "https://kerisse.org",
    "anchor": "signing-authority",
    "definition": "<h1>signing authority</h1><h4>Definition</h4><p>The authority to sign on behalf of the controller of the authoritative key pair. Often in situation where delegation has taken place, e.g. a custodial agent. These are limited rights because <a href=\"rotation-authority\">rotation authority</a> is not included. </p><h4>Relation to rotation authority</h4><p>The original controller of an <a href=\"autonomic-identifier\">AID</a> can hold exclusive <a href=\"rotation-authority\">rotation authority</a>. Because control authority is split between two key sets, the first for signing-authority and the second (<a href=\"pre-rotation\">pre-rotated</a>) for <a href=\"rotation-authority\">rotation authority</a>, the associated thresholds and key list can be structured in such a way that a designated <a href=\"custodial-agent\">custodial agent</a> can hold signing authority while the original controller can hold exclusive rotation authority.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "signing threshold",
    "url": "https://kerisse.org",
    "anchor": "signing-threshold",
    "definition": "<h1>signing threshold</h1><h4>Definition</h4><p>Is the minimum number of valid signatures to satisfy the requirement for successful verification in a <a href=\"threshold-signature-scheme\">Threshold Signature Scheme</a>.</p><h4>Example 2-of-3 signature</h4><p>In a 2-of-3 signature scheme the threshold is 2. This means that 2 valid signatures are enough to fulfil the required signature.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "simple keri for web auth",
    "url": "https://kerisse.org",
    "anchor": "simple-keri-for-web-auth",
    "definition": "<h1>simple keri for web auth</h1><h4>Definition</h4><p>A <a href=\"KERI\">KERI</a> implementation that sacrifices performance or other non-security feature for usability. In general a narrow application of KERI may not require all the features of KERI but those features that it does support must still be secure.<br>More on source <a href=\"https://github.com/WebOfTrust/skwa\">Github Repo SKWA</a>.</p><h4>Design</h4><p>Designed for private clouds, just like <a href=\"keep\">Keep</a>. <a href=\"signify\">Signify</a> is designed for public clouds.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "single signature identifier",
    "url": "https://kerisse.org",
    "anchor": "single-signature-identifier",
    "definition": "<h1>single signature identifier</h1><h4>Definition</h4><p>or single sig identifier; is an identifier controlled by a one-of-one signing <a href=\"key-pair\">keypair</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "SKRAP",
    "url": "https://kerisse.org",
    "anchor": "SKRAP",
    "definition": "<h1>SKRAP</h1><h4>See</h4><p><a href=\"signify-keria-request-authentication-protocol\">Signify/KERIA Request Authentication Protocol</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "SKWA",
    "url": "https://kerisse.org",
    "anchor": "SKWA",
    "definition": "<h1>SKWA</h1><h4>See</h4><p><a href=\"simple-keri-for-web-auth\">Simple KERI for web auth</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "sniffable",
    "url": "https://kerisse.org",
    "anchor": "sniffable",
    "definition": "<h1>sniffable</h1><h4>Definition</h4><p>A stream is <em>sniffable</em> as soon as it starts with a group code or field map; in fact this is how our parser (<a href=\"parside\">Parside</a>) works. and detects if the CESR stream contains a certain datablock. The datablock of CESR binary, CESR Text, JSON, CBOR, MGPK have an Object code or the Group code (binary or text) and it&#39;s always a recognizable and unique <em>three bit combination</em>.</p><h4>Challenge</h4><p>We have the Cold start problem of a stream: you don&#39;t where to start recognizing structured data.</p><h4>Criterium</h4><p>So a stream is either sniffable or not, when it has or has not the fore-mentioned group- or object-codes.<br>Source: Sam Smith, Zoom Meeting KERI, Dec 5 2023</p><h4>Related</h4><p><a href=\"sniffer\">Sniffer</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "sniffer",
    "url": "https://kerisse.org",
    "anchor": "sniffer",
    "definition": "<h1>sniffer</h1><h4>Definition</h4><p>The <em>sniffer</em> is part of <a href=\"parside\">Parside</a> and detects if the CESR stream contains CESR binary, CESR Text, JSON, CBOR, MGPK. </p><h4>Working</h4><p>If any of JSON, CBOR, MGPK then the parser regexes to find the <a href=\"version-string\">version string</a> inside the JSON, CBOR, and MGPK and from the version string extracts the number of characters/bytes that is the length of the JSON, CBOR, or MGPK. The parser then resumes <em>sniffing</em>. When the sniff result is &#39;CESR&#39; then when at the top level looks for the CESR <a href=\"version-code\">version count code</a> or any other count codes.</p><p>Source Slack Cesride thread: Feb 2 2023</p><h4>Related</h4><p><a href=\"sniffable\">Sniffable</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "solicited issuance",
    "url": "https://kerisse.org",
    "anchor": "solicited-issuance",
    "definition": "<h1>solicited issuance</h1><h4>Definition</h4><p>The issuance of a Legal Entity vLEI Credentials, <a href=\"OOR\">OOR</a> vLEI Credentials and <a href=\"ECR\">ECR</a> vLEI Credentials upon receipt by the <a href=\"QAR\">QAR</a> of a Fully Signed issuance request from the <a href=\"AVR\">AVR</a>(s) of the <a href=\"legal-entity\">Legal Entity</a>.<br><a href=\"https://www.gleif.org/vlei/introducing-the-vlei-ecosystem-governance-framework/2022-02-07_verifiable-lei-vlei-ecosystem-governance-framework-glossary-draft-publication_v0.9-draft.pdf\">Source</a>: Draft vLEI Ecosystem Governance Framework Glossary.</p><h4>Related</h4><p>See <a href=\"unsolicited-issuance\">Unsolicited issuance</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "source of truth",
    "url": "https://kerisse.org",
    "anchor": "source-of-truth",
    "definition": "<h1>source of truth</h1><h4>Definition</h4><p>The source of truth is a trusted data source that gives a complete picture of the data object as a whole.<br><a href=\"https://www.linkedin.com/pulse/difference-between-system-record-source-truth-santosh-kudva/\">Source</a>: LinkedIN.</p><h4>KERI and ACDC context</h4><p>Source of a particular piece of information from one place, considered to present the truth. However both KERI and ACDC only commit to the secure attribution of <em>who</em> said something and not whether <em>what</em> has been said is true or not. Veracity is an individual (organisational) conclusion that needs governance and virtual credentials. KERI and ACDC support veracity (concluding it&#39;s the &quot;the truth&quot;) but doesn&#39;t solve it.<br>Compound description by @henkvancann from sources: <a href=\"https://en.wikipedia.org/wiki/Single_version_of_the_truth\">1</a>, <a href=\"https://github.com/SmithSamuelM/Papers/blob/master/whitepapers/ACDC_Spec.md\">2</a></p><h4>Truth</h4><p>Truth is the property of being in accord with fact or reality. In everyday language, truth is typically ascribed to things that aim to represent reality<br><a href=\"https://en.wikipedia.org/wiki/Truth\">Source</a>: Wikipedia.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "SPAC",
    "url": "https://kerisse.org",
    "anchor": "SPAC",
    "definition": "<h1>SPAC</h1><h4>See</h4><p><a href=\"secure-private-authentic-confidentiality\">Secure Private Authentic Confidentiality</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "spanning layer",
    "url": "https://kerisse.org",
    "anchor": "spanning-layer",
    "definition": "<h1>spanning layer</h1><h4>Definition</h4><p>An all encompassing layer horizontal layer in a software architecture. Each trust layer only spans platform specific applications. It bifurcates the internet trust map into domain silos (e.g. twitter.com), because there is no spanning trust layer.</p><p><img src=\"https://github.com/WebOfTrust/keri/blob/main/images/spanning_layer.png\" alt=\"\"></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "spurn",
    "url": "https://kerisse.org",
    "anchor": "spurn",
    "definition": "<h1>spurn</h1><h4>Definition</h4><p>Reject. The verb &#39;spurn&#39; is originated in <a href=\"IPEX\">IPEX</a> specification.</p><p>| TBW prio 2 | </p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "SSI",
    "url": "https://kerisse.org",
    "anchor": "SSI",
    "definition": "<h1>SSI</h1><h4>See</h4><p><a href=\"self-sovereign-identity\">Self-sovereign identity</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "ssi system",
    "url": "https://kerisse.org",
    "anchor": "ssi-system",
    "definition": "<h1>ssi system</h1><h4>Definition</h4><p>The SSI Infrastructure consists of the technological components that are deployed all over the world for the purpose of providing, requesting and obtaining data for the purpose of negotiating and/or executing electronic <a href=\"https://essif-lab.github.io/framework/docs/terms/transaction\">transactions</a>.Paraphrased by @henkvancann based on source <a href=\"https://essif-lab.github.io/framework/docs/terms/ssi-infrastructure\">eSSIF-lab</a></p><h4>Purpose</h4><p>The SSI Infrastructure supports the sustainable functionality of <a href=\"https://essif-lab.github.io/framework/docs/terms/party\">parties</a> by providing IT services and facilities necessary for (electronic) <a href=\"https://essif-lab.github.io/framework/docs/terms/transaction\">transactions</a> to be negotiated and executed.<br>Source <a href=\"https://essif-lab.github.io/framework/docs/terms/ssi-infrastructure\">eSSIF-lab</a></p><h4>KERI and ACDC related</h4><p>The team has put stress on the principle &#39;security first, confidentiality second and privacy third&#39;. All systems and infrastructure KERI and ACDC has presented therefore constitute a rather small subset of all <a href=\"self-sovereign-identity\">self-sovereign identity systems (SSI)</a> available nowadays.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "stale event",
    "url": "https://kerisse.org",
    "anchor": "stale-event",
    "definition": "<h1>stale event</h1><h4>Definition</h4><p>A stale key event is an outdated or irrelevant (key) event involving an <a href=\"stale-key\">expired encryption key</a> that may compromise security.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "stale key",
    "url": "https://kerisse.org",
    "anchor": "stale-key",
    "definition": "<h1>stale key</h1><h4>Definition</h4><p>A stale key is an outdated or expired encryption key that should no longer be used for securing data</p><h4>Also see</h4><p><a href=\"stale-event\">Stale (key) event</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "strip parameter",
    "url": "https://kerisse.org",
    "anchor": "strip-parameter",
    "definition": "<h1>strip parameter</h1><h4>Definition</h4><p>tells us what part of the <a href=\"CESR\">CESR</a> stream will be parsed by which code.</p><h4>Related</h4><p><a href=\"parside\">Parside</a></p><p>| TBW |</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "sub shell",
    "url": "https://kerisse.org",
    "anchor": "sub-shell",
    "definition": "<h1>sub shell</h1><h4>Definition</h4><p>A subshell is basically a new shell just to run a desired program. A subshell can access the global variables set by the &#39;parent shell&#39; but not the local variables. Any changes made by a subshell to a global variable is not passed to the parent shell.<br><a href=\"https://linuxhandbook.com/subshell/\">Source</a></p><h4>Parent - and child process</h4><p>A child process in computing is a <a href=\"https://en.wikipedia.org/wiki/Process_(computing)\">process</a> created by another process (the <a href=\"https://en.wikipedia.org/wiki/Parent_process\">parent process</a>). This technique pertains to <a href=\"https://en.wikipedia.org/wiki/Computer_multitasking\">multitasking operating systems</a>, and is sometimes called a subprocess or traditionally a subtask.<br>More on source <a href=\"https://en.wikipedia.org/wiki/Child_process\">Wikipedia</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "supermajority",
    "url": "https://kerisse.org",
    "anchor": "supermajority",
    "definition": "<h1>supermajority</h1><h4>Definition</h4><p>Sufficient majority that is labeled <em>immune</em> from certain kinds of attacks or faults.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "TCP",
    "url": "https://kerisse.org",
    "anchor": "TCP",
    "definition": "<h1>TCP</h1><h4>See</h4><p><a href=\"transmission-control-protocol\">Transmission control protocol</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "tcp endpoint",
    "url": "https://kerisse.org",
    "anchor": "tcp-endpoint",
    "definition": "<h1>tcp endpoint</h1><h4>Definition</h4><p>This is a <a href=\"service-endpoint\">service endpoint</a> of the web <a href=\"transmission-control-protocol\">transmission control protocol</a></p><h4>More details</h4><p>Because TCP packets do not include a session identifier, both endpoints identify the session using the client&#39;s address and port. Whenever a packet is received, the TCP implementation must perform a lookup on this table to find the destination process.</p><p>More on source <a href=\"https://en.wikipedia.org/wiki/Transmission_Control_Protocol\">Wikipedia</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "TEE",
    "url": "https://kerisse.org",
    "anchor": "TEE",
    "definition": "<h1>TEE</h1><h4>See</h4><p><a href=\"trusted-execution-environment\">trusted execution environment</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "TEL",
    "url": "https://kerisse.org",
    "anchor": "TEL",
    "definition": "<h1>TEL</h1><h4>See</h4><p><a href=\"transaction-event-log\">Transaction event log</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "text binary concatenation composability",
    "url": "https://kerisse.org",
    "anchor": "text-binary-concatenation-composability",
    "definition": "<h1>text binary concatenation composability</h1><h4>Definition</h4><p>An encoding has <em>composability</em> when any set of <a href=\"self-framing\">self-framing</a> concatenated primitives expressed in either the text domain or binary domain may be converted as a group to the other domain and back again without loss.</p><h4>CESR related</h4><p>CESR is fully text binary concatenation composable.</p><h4>Example in analogy</h4><p>Use Google Translate to translate a piece of text from English to Dutch. Subsequently, keep copy pasting the resulting “to:” text into the “from:” field. The message changes until it comes to a standstill where you can keep swapping the texts without them changing.<br><img src=\"https://hackmd.io/_uploads/H1e8_BbmMi.png\" height=\"100\" /><img src=\"https://hackmd.io/_uploads/B1pFrbXfj.png\" height=\"100\" /></p><p>The conclusion is: Google Translate is not composable!</p><p>By contrast, CESR is composable. The <em>analogy</em> lies in the fact that we consider two languages. Suppose the English in the Google Translate example is <em>readable, text based</em> in CESR and Dutch is the <em>binary</em> form in CESR. Within these two CESR “languages”, text-based and binary, you can concatenate and swap freely as many times as you like — the data won’t change in between in their binary or text form no matter what content you express with them.<br>More explanation in <a href=\"https://medium.com/happy-blockchains/cesr-one-of-sam-smiths-inventions-is-as-controversial-as-genius-d757f36b88f8\">source</a>.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "tholder",
    "url": "https://kerisse.org",
    "anchor": "tholder",
    "definition": "<h1>tholder</h1><h4>Definition</h4><p>t-holder object that supports fractionally-weighted <a href=\"signing-threshold\">thresholds</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "threshold of accountable duplicity",
    "url": "https://kerisse.org",
    "anchor": "threshold-of-accountable-duplicity",
    "definition": "<h1>threshold of accountable duplicity</h1><h4>Definition</h4><p>The threshold of accountable duplicity (TOAD) is a threshold number <code>M</code> that the controller declares to accept accountability for an event when any subset <code>M</code> of the <code>N</code> witnesses confirm that event. The threshold <code>M</code> indicates the minimum number of confirming witnesses the controller deems sufficient given some number <code>F</code> of potentially faulty witnesses, given that <code>M &gt;= N - F</code>. This enables a controller to provide itself with any degree of protection it deems necessary given this accountability.</p><p>Note that what may be sufficient for a controller may not be sufficient for a validator. To clarify, let <code>MC</code> denote the threshold size of a sufficient agreement from the perspective of a controller and let <code>MV</code> denote the threshold size of a sufficient agreement from the perspective of a validator. Typically, <code>MV &gt;= MC</code>. </p><h4>TOAD in KEL</h4><p>A controller declares TOAD in its <a href=\"key-event-log\">key event log (KEL)</a> during the <a href=\"inception-event\">key inception event</a> and may edit it during subsequent <a href=\"rotation-event\">key rotation events</a>.</p><h4>Purpose of TOAD</h4><p>A highly available system needs some degree of fault tolerance. The purpose of the threshold of accountability is to enable fault tolerance of the key event service with respect to faulty behavior by either the controller or witnesses. The principal controller fault exhibits duplicitous behavior in the use of its keys. In this case, the threshold serves as the threshold of accountable duplicity. The threshold lets a validator know when it may hold the controller accountable for duplicitous behavior. Without a threshold, a validator may choose to hold a controller accountable upon any evidence of duplicity which may make the service fragile in the presence of any degree of such faulty behavior. The primary way that a validator may hold a controller accountable is to stop trusting any use of the associated identifier. This destroys any value in the identifier and does not allow the controller to recover from an exploit. Recall that the one purpose of rotation keys (pre-rotated unexposed) is to enable recovery from compromised interaction signing keys. A compromised interaction signing key may exhibit duplicitous behavior on the part of the controller. A threshold of accountable duplicity enables a validator to distinguish between potentially recoverable duplicity such as the use of a compromised signing key and non-recoverable duplicity such as the use of a compromised rotation key. This better protects both the validator and the controller and improves the robustness of the service. </p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "threshold signature scheme",
    "url": "https://kerisse.org",
    "anchor": "threshold-signature-scheme",
    "definition": "<h1>threshold signature scheme</h1><h4>Definition</h4><p>or TSS; is a type of digital signature protocol used by <a href=\"https://cryptoapis.io/products/wallet-as-a-service/mpc\">Mutli-party Computation (MPC)</a> wallets to authorize transactions or key state changes.<br>Source <a href=\"https://cryptoapis.io/blog/78-what-is-the-threshold-signature-scheme\">Cryptoapis</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "threshold structure security",
    "url": "https://kerisse.org",
    "anchor": "threshold-structure-security",
    "definition": "<h1>threshold structure security</h1><h4>Definition</h4><p>A threshold structure for security allows for weaker key management or execution environment infrastructure individually, but achieve greater overall security by multiplying the number of attack surfaces that an attacker must overcome to compromise a system.<br>In other words, with threshold structures, overall security may be greater than the security of any of the individual parts. </p><p>For example, in <a href=\"multi-factor-authentication\">MFA</a> the combination of two factors, something you have and something you know, may be much more secure than either of the factors by themselves.</p><h5>Threshold Structure Security vs. TEE Security</h5><p>Threshold structures may be employed in a complementary manner to trusted execution environments (<a href=\"trusted-execution-environment\">TEE</a>) for security. The two types of security are complementary.</p><h4>KERI related</h4><p>This applies to KERI as well. The <a href=\"witness\">witnesses</a> and <a href=\"watcher\">watchers</a> independently multiply the attack surfaces of the promulgation and the confirmation networks such that each witness or watcher respectively may be relatively insecure but the system as a whole may be highly secure.</p><h5>Considerations</h5><p>Numerous papers discuss how secure a distributed consensus pool may be. But when comparing <em>apples</em> (key management and trusted execution environment (TEE) approach to security) to <em>oranges</em> (distributed consensus approach to security) its hard to say that the security of a distributed consensus algorithm is necessarily less secure than the key management infra-structure root-of-trust of any of its nodes. Although as a general rule, in an apples to apples comparison, <em>more complex is less secure</em>.</p><p>Source: Universal Identifier Theory by Samuel Smith</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "TOAD",
    "url": "https://kerisse.org",
    "anchor": "TOAD",
    "definition": "<h1>TOAD</h1><h4>See</h4><p><a href=\"threshold-of-accountable-duplicity\">threshold of accountable duplicity</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "top level section",
    "url": "https://kerisse.org",
    "anchor": "top-level-section",
    "definition": "<h1>top level section</h1><h4>Definition</h4><p>The fields of an ACDC in <a href=\"compact-variant\">compact variant</a>. The value of a top level section field is either the SAD or the SAID of the SAD of the associated section.An Issuer commitment via a signature to any variant of ACDC (compact, full, etc) makes a cryptographic commitment to the top-level section fields shared by all variants of that ACDC.<br>Paraphrased by @henkvancann based on <a href=\"https://github.com/WebOfTrust/ietf-ipex/blob/main/draft-ssmith-ipex.md#example-most-compact-variant\">source</a>.</p><h4>Example</h4><img src=\"https://hackmd.io/_uploads/rJ0JJcEes.png\" alt=\"top level section of an ACDC\" width=\"700\" />"
  },
  {
    "organisation": "WebOfTrust",
    "term": "TPM",
    "url": "https://kerisse.org",
    "anchor": "TPM",
    "definition": "<h1>TPM</h1><h4>See</h4><p><a href=\"trusted-platform-module\">Trusted platform module</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "trans contextual value",
    "url": "https://kerisse.org",
    "anchor": "trans-contextual-value",
    "definition": "<h1>trans contextual value</h1><h4>Definition</h4><p>Value that is transferrable between contexts</p><h4>Related to KERI</h4><p><strong>How do we recapture the value in our data?</strong> 1- Leverage cooperative network effects 2- Retake control of our data.<br><a href=\"https://github.com/SmithSamuelM/Papers/blob/master/presentations/NonconformistKeynoteWeb20200702.pdf\">Source</a> Samuel Smith</p><h5>1. Leverage cooperative network effects</h5><p>How to remove primary barriers to cooperation? Different value contexts implies &#39;not directly competitive&#39;. So we need to find value that is transferrable between contexts. Therefore: Use trans-contextual value creation and capture to fuel cooperative network effects.</p><h5>2. Retake control of our data</h5><p>KERI assists in this.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "transaction event log",
    "url": "https://kerisse.org",
    "anchor": "transaction-event-log",
    "definition": "<h1>transaction event log</h1><h4>Definition</h4><p>The set of transactions that determine registry state form a log called a Transaction Event Log (TEL). The TEL provides a cryptographic proof of registry state by reference to the corresponding controlling <a href=\"key-event-log\">KEL</a>. Any validator may therefore cryptographically verify the <a href=\"authoritative\">authoritative state</a> of the <a href=\"registry\">registry</a>.</p><h5>Put differently</h5><p>An externally anchored transactions log via cryptographic commitments in a KEL.</p><p><img src=\"https://github.com/WebOfTrust/keri/blob/main/images/TEL-and-KEL.png\" alt=\"\"></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "transfer off ledger",
    "url": "https://kerisse.org",
    "anchor": "transfer-off-ledger",
    "definition": "<h1>transfer off ledger</h1><h4>Definition</h4><p>The act of transferring control authority over an identifier from a ledger (or blockchain) to the native verifiable KERI data structure Key Event Log.</p><h4>Transition option</h4><p>If you want to transition to using KERI, you could do that by anchoring your KERI identifiers in, for example, your Indy ledger. The neat thing is, you could then <strong>transfer the identifier off the ledger</strong> and then have non-ledger based portable identifiers.</p><h4>One at a time</h4><p>Although it&#39;s portable, you can be anchored to any one ledger at a time, or you could move it to an identifier (witness, backer, watcher, etc) can only be represented different ledger, or you could move to using just witnesses, all with the same identifier by justdoing rotation events and changing your anchor, your backers here.<br>So an identifier cannot be anchored, let&#39;s say to multiple Indies or Ethereum. You could be only anchored in one at a time.</p><h4>Move identifiers across networks</h4><p>You can move identifiers across networks with KERI, but it&#39;s not what it has been designed for.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "transferable",
    "url": "https://kerisse.org",
    "anchor": "transferable",
    "definition": "<h1>transferable</h1><h4>Definition</h4><p>Capable of being transferred or conveyed from one place or person to another. Place can be its and bits. The adjective transferable also means &#39;Negotiable&#39;, as a note, bill of exchange, or other evidence of property, that may be conveyed from one person to another by indorsement or other writing; capable of being transferred with no loss of value. As opposed to <a href=\"non-transferable\">non-transferable</a>.<br><a href=\"https://www.wordnik.com/words/transferable\">Source</a></p><h4>KERI related</h4><p>Focus is on the digital space and concerning the loss-less transfer of control over <a href=\"transferable-identifier\">identifiers</a>, private keys, etc. </p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "transferable identifier",
    "url": "https://kerisse.org",
    "anchor": "transferable-identifier",
    "definition": "<h1>transferable identifier</h1><h4>Definition</h4><p>Control over the identifier <a href=\"transferable\">can be transferred</a> by rotating keys.<br>A synonym is &#39;persistent identifier&#39;.</p><p>| TBW prio 1 |</p><h4>KERI related</h4><p>The KERI design approach is to build composable primitives instead of custom functionality that is so typical of other DKMI approaches:</p><ul><li>transferable identifiers</li><li><a href=\"non-transferable-identifier\">non-transferable identifiers</a></li><li><a href=\"delegated-identifier\">delegated identifiers</a></li></ul>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "transmission control protocol",
    "url": "https://kerisse.org",
    "anchor": "transmission-control-protocol",
    "definition": "<h1>transmission control protocol</h1><h4>Definition</h4><p>One of the main <a href=\"https://en.wikipedia.org/wiki/Communications_protocol\">protocols</a> of the <a href=\"https://en.wikipedia.org/wiki/Internet_protocol_suite\">Internet protocol suite</a>. It originated in the initial network implementation in which it complemented the <a href=\"https://en.wikipedia.org/wiki/Internet_Protocol\">Internet Protocol</a> (IP).<br>More on <a href=\"https://en.wikipedia.org/wiki/Transmission_Control_Protocol\">source</a> Wikipedia.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "trust domain",
    "url": "https://kerisse.org",
    "anchor": "trust-domain",
    "definition": "<h1>trust domain</h1><h4>Definition</h4><p>A trust domain is the ecosystem of interactions that rely on a trust basis. A trust basis binds controllers, identifiers, and key-pairs. <em>For example the Facebook ecosystem of social interactions is a trust domain that relies on Facebook’s identity system of usernames and passwords as its trust basis.</em><br>(<a href=\"https://github.com/SmithSamuelM/Papers/blob/master/whitepapers/KERI_WP_2.x.web.pdf\">Source whitepaper</a>)</p><h4>Broader definition</h4><p>A trust domain is a domain that the system trusts to authenticate users. In other words, if a user or application is authenticated by a trusted domain, this authentication is accepted by all domains that trust the authenticating domain.</p><h4>Domain name</h4><p>A more technical meaning of &#39;domain&#39; is on the internet: <a href=\"domain-name\">domain name</a>. </p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "trust spanning protocol",
    "url": "https://kerisse.org",
    "anchor": "trust-spanning-protocol",
    "definition": "<h1>trust spanning protocol</h1><h4>Definition</h4><p>Protocol using <a href=\"verifiable-identifier\">VID</a>s that signs every single message on the internet and makes them verifiable.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "trusted execution environment",
    "url": "https://kerisse.org",
    "anchor": "trusted-execution-environment",
    "definition": "<h1>trusted execution environment</h1><h4>Definition</h4><p>Protected hardware/software/firmware security system. The controller may protect its key generation, key storage, and event signing infrastructure by running it inside a trusted execution environment (TEE). </p><h5>Examples</h5><p>SGX, TrustZone, an HSM, a TPM, or other similarly protected hardware/software/firmware environment</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "trusted platform module",
    "url": "https://kerisse.org",
    "anchor": "trusted-platform-module",
    "definition": "<h1>trusted platform module</h1><h4>Definition</h4><p> A device that enhances the security and privacy (of identity systems) by providing hardware-based cryptographic functions. </p><h4>Functions</h4><p> A TPM can generate, store, and protect encryption keys and authentication credentials that are used to verify the identity of a user or a device.<br> A TPM can also measure and attest the integrity of the software and firmware that are running on a system, to ensure that they have not been tampered with or compromised. </p><h4>Form</h4><p> A TPM can be implemented as a physical chip, a firmware module, or a virtual device.</p><p>Source: Bing chat sept 2023</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "ts node",
    "url": "https://kerisse.org",
    "anchor": "ts-node",
    "definition": "<h1>ts node</h1><h4>Definition</h4><p>npm package that lets you run typescript from a shell</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "TSP",
    "url": "https://kerisse.org",
    "anchor": "TSP",
    "definition": "<h1>TSP</h1><h4>See</h4><p><a href=\"trust-spanning-protocol\">Trust Spanning Protocol</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "UI",
    "url": "https://kerisse.org",
    "anchor": "UI",
    "definition": "<h1>UI</h1><h4>See</h4><p><a href=\"user-interface\">User interface</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "uniform resource locator",
    "url": "https://kerisse.org",
    "anchor": "uniform-resource-locator",
    "definition": "<h1>uniform resource locator</h1><h4>Definition</h4><p>A Uniform Resource Locator (URL), colloquially termed a web address, is a reference to a <a href=\"https://en.wikipedia.org/wiki/Web_resource\">web resource</a> that specifies its location on a <a href=\"https://en.wikipedia.org/wiki/Computer_network\">computer network</a> and a mechanism for retrieving it. </p><h4>Broader context</h4><p>A URL is a specific type of <a href=\"https://en.wikipedia.org/wiki/Uniform_Resource_Identifier\">Uniform Resource Identifier</a> (URI),although many people use the two terms interchangeably. URLs occur most commonly to reference <a href=\"https://en.wikipedia.org/wiki/Web_page\">web pages</a> (<a href=\"https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol\">HTTP</a>) but are also used for file transfer (<a href=\"https://en.wikipedia.org/wiki/File_Transfer_Protocol\">FTP</a>), email (<a href=\"https://en.wikipedia.org/wiki/Mailto\">mailto</a>), database access (<a href=\"https://en.wikipedia.org/wiki/Java_Database_Connectivity\">JDBC</a>), and many other applications.</p><p>More on source <a href=\"https://en.wikipedia.org/wiki/URL\">Wikipedia</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "univalent",
    "url": "https://kerisse.org",
    "anchor": "univalent",
    "definition": "<h1>univalent</h1><h4>Definition</h4><p>In identifier systems, univalent means having a unique and non-ambiguous identifier for each entity or resource. This means that there is a <em>one-to-one correspondence</em> between the identifiers and the entities, and that no two different entities share the same identifier. Source: Bing chat, Sept 2023</p><h4>Universal Identity Theory specific</h4><p>(Paraphrased from source <a href=\"https://github.com/SmithSamuelM/Papers/blob/master/whitepapers/IdentifierTheory_web.pdf\">Universal Identifier Theory</a> by Samuel Smith)In key management key pairs (public, private) are created in the key-pair generation and storage infrastructure and then may be moved to the key event generation and signing infrastructure in order to sign events. To protect both the key generation and storage and the event signing infrastructures. . Consequently, a given protection mechanism may co-locate both infrastructures. This means facilities are shared.  This combined infrastructure is refered to as a <em>univalent</em> key management infrastructure. </p><p><img src=\"https://github.com/weboftrust/WOT-terms/static/img/univalent-key-management-infrastructure.png\" alt=\"univalent-key-management-infrastructure\"></p><p>A more secure albeit less convenient or performant univalent key management infrastructure may use special computing devices or components to store private keys and/or create signatures.</p><h4>Also see</h4><p><a href=\"multi-valent\">Multivalent</a><a href=\"bivalent\">Bivalent</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "unsolicited issuance",
    "url": "https://kerisse.org",
    "anchor": "unsolicited-issuance",
    "definition": "<h1>unsolicited issuance</h1><h4>Definition</h4><p>Issuance of a Legal Entity vLEI Credential upon notice by a <a href=\"QAR\">QAR</a> to the <a href=\"AVR\">AVR</a>(s) of the Legal Entity that a Legal Entity vLEI Credential has been solicited on the <a href=\"legal-entity\">Legal Entity</a>’s behalf.<br><a href=\"https://www.gleif.org/vlei/introducing-the-vlei-ecosystem-governance-framework/2022-02-07_verifiable-lei-vlei-ecosystem-governance-framework-glossary-draft-publication_v0.9-draft.pdf\">Source</a>: Draft vLEI Ecosystem Governance Framework Glossary.</p><h4>Related</h4><p>See <a href=\"solicited-issuance\">Solicited issuance</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "URL",
    "url": "https://kerisse.org",
    "anchor": "URL",
    "definition": "<h1>URL</h1><h4>See</h4><p><a href=\"uniform-resource-locator\">Uniform resource locator</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "user interface",
    "url": "https://kerisse.org",
    "anchor": "user-interface",
    "definition": "<h1>user interface</h1><h4>Definition</h4><p>A user interface (UI or U/I) is the space where interactions between humans and machines occur.</p><h4>More on Wikipedia</h4><p>The <a href=\"https://en.wikipedia.org/wiki/Reactable\">Reactable</a>, an example of a <a href=\"https://en.wikipedia.org/wiki/Tangible_user_interface\">tangible user interface</a>In the <a href=\"https://en.wikipedia.org/wiki/Industrial_design\">industrial design</a> field of <a href=\"https://en.wikipedia.org/wiki/Human%E2%80%93computer_interaction\">human–computer interaction</a>, a user interface (UI) is the space where interactions between humans and machines occur. The goal of this interaction is to allow effective operation and control of the machine from the human end, while the machine simultaneously feeds back information that aids the operators&#39; <a href=\"https://en.wikipedia.org/wiki/Decision-making\">decision-making</a> process.<br>Source <a href=\"https://en.wikipedia.org/wiki/User_interface\">page</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "validate",
    "url": "https://kerisse.org",
    "anchor": "validate",
    "definition": "<h1>validate</h1><h4>See</h4><p>ESSIF-lab definition of <em><a href=\"https://essif-lab.github.io/framework/docs/essifLab-glossary#validate\">validate</a></em>. Although this definition is very general, in the KERI/ACDC vocabulary &#39;validate&#39; currently has extra diverse meanings extending the one of eSSIF-lab, such as</p><ul><li>evaluate</li><li><a href=\"verify\">verify</a></li></ul><p>In contrast, <a href=\"validator\">validator</a> and <a href=\"verifier\">verifier</a> have been clearly outlined in the WebofTrust vocabulary.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "validator",
    "url": "https://kerisse.org",
    "anchor": "validator",
    "definition": "<h1>validator</h1><h4>Definition</h4><p>determines current authoritative key set for identifier from at least one key event (receipt) log. Types:</p><ul><li>Validator of any verifiable data structure</li><li>Validator as a node in distributed consensus or participant</li></ul><p>Validator and <a href=\"verifier\">verifier</a> are close to synonyms for our purposes.</p><p>A <code>validator</code> in <a href=\"key-event-receipt-infrastructure\">KERI</a> and <a href=\"authentic-chained-data-container\">ACDC</a> is anybody that wants to establish control-authority over an identifier, created by the controller of the identifier. Validators verify the log, they apply duplicity detection or they leverage somebody else&#39;s duplicity detection or apply any other logic so they can say &quot;Yes, these are events I can trust&quot;.</p><h4>Example</h4><p>During validation of virtual credentials for example, a <a href=\"verifier\">verifier</a> checks to see if a verifiable <a href=\"credential\">credential</a> (<a href=\"VC\">VC</a>) has been signed by the controller of this VC using the applicable verification method.</p><h4>To be Sam-Smith precise in KERI</h4><p>Any entity or agent that evaluates whether or not a given signed statement as attributed to an identifier is valid at the time of its issuance. A valid statement MUST be verifiable, that is, has a verifiable signature from the current controlling keypair(s) at the time of its issuance. Therefore a Validator must first act as a Verifier in order to establish the root authoritative set of keys. Once verified, the Validator may apply other criteria or constraints to the statement in order to determine its validity for a given use case. When that statement is part of a verifiable data structure then the cryptographic verification includes verifying digests and any other structural commitments or constraints. To elaborate, with respect to an AID, for example, a Validator first evaluates one or more KELs in order to determine if it can rely on (trust) the key state (control authority) provided by any given KEL. A necessary but insufficient condition for a valid KEL is it is verifiable i.e. is internally inconsistent with respect to compliance with the KERI protocol. An invalid KEL from the perspective of a Validator may be either unverifiable or may be verifiable but duplicitous with respect to some other verifiable version of that KEL. Detected duplicity by a given validator means that the validator has seen more than one verifiable version of a KEL for a given AID. Reconciliable duplicity means that one and only one version of a KEL as seen by a Validator is accepted as the authoritative version for that validator. Irreconcilable duplicity means that none of the versions of a KEL as seen by a validator are accepted as the authoritative one for that validator. The conditions for reconcilable duplicity are described later.<br>Source <a href=\"https://github.com/WebOfTrust/ietf-keri/blob/main/draft-ssmith-keri.md#basic-terminology\">Sam Smith</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "VC",
    "url": "https://kerisse.org",
    "anchor": "VC",
    "definition": "<h1>VC</h1><h4>See</h4><p><a href=\"verifiable-credential\">Verifiable credential</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "VC TEL",
    "url": "https://kerisse.org",
    "anchor": "VC-TEL",
    "definition": "<h1>VC TEL</h1><h4>See</h4><p><a href=\"virtual-credential-transaction-event-log\">Virtual credential transaction event log</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "vcp",
    "url": "https://kerisse.org",
    "anchor": "vcp",
    "definition": "<h1>vcp</h1><h4>Definition</h4><p>vcp = vdr incept, verifiable data registry inception</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "vdr",
    "url": "https://kerisse.org",
    "anchor": "vdr",
    "definition": "<h1>vdr</h1><h4>See</h4><p><a href=\"verifiable-data-registry\">Verifiable data registry</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "VDS",
    "url": "https://kerisse.org",
    "anchor": "VDS",
    "definition": "<h1>VDS</h1><h4>See</h4><p><a href=\"verifiable-data-structure\">Verifiable data structure</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "veracity",
    "url": "https://kerisse.org",
    "anchor": "veracity",
    "definition": "<h1>veracity</h1><h4>Definition</h4><p>The quality of being true; contrast <a href=\"authenticity\">authenticity</a>. When a newspaper publishes a story about an event, every faithful reproduction of that story may be <em>authentic</em> — but that does not mean the story was true (has <em>veracity</em>).</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "verfer",
    "url": "https://kerisse.org",
    "anchor": "verfer",
    "definition": "<h1>verfer</h1><h4>Definition</h4><p>A primitive that represents a public key. It has the ability to <a href=\"verify\">verify</a> signatures on data.<br><a href=\"https://github.com/WebOfTrust/cesride#terminology\">Source</a> by Jason Colburne</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "verifiable",
    "url": "https://kerisse.org",
    "anchor": "verifiable",
    "definition": "<h1>verifiable</h1><h4>Definition</h4><p>able to cryptographically verify a certain data structure on its <a href=\"inconsistency\">consistency</a> and its <a href=\"authenticity\">authenticity</a></p><h4>KERI related</h4><p>A KEL is verifiable means all content in a KEL including the digests and the signatures on that content is verifiably compliant with respect to the KERI protocol. In other words, the KEL is internally consistent and has integrity vis-a-vis its backward and forward chaining digests and authenticity vis-a-vis its non-repudiable signatures. As a verifiable data structure, the KEL satisfies the KERI protocol-defined rules for that verifiability. This includes the cryptographic verification of any digests or signatures on the contents so digested or signed.<br>Source <a href=\"https://github.com/WebOfTrust/ietf-keri/blob/main/draft-ssmith-keri.md#basic-terminology\">Sam Smith</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "verifiable credential",
    "url": "https://kerisse.org",
    "anchor": "verifiable-credential",
    "definition": "<h1>verifiable credential</h1><h4>Definition</h4><p>Verifiable credentials (VCs) are an <a href=\"https://en.wikipedia.org/wiki/Open_standard\">open standard</a> for digital credentials. They can represent information found in physical credentials, such as a passport or license, as well as new things that have no physical equivalent, such as ownership of a bank account.</p><h5>The ToIP definition</h5><p><a href=\"https://github.com/trustoverip/toip/wiki/verifiable-credential\">here</a></p><h4>More on source Wikipedia</h4><p><a href=\"https://en.wikipedia.org/wiki/Verifiable_credentials\">VCs</a></p><h4>W3C DID standardization</h4><p>Importantly, there are VC specification that provide a mechanism to express these sorts of <a href=\"https://www.w3.org/TR/vc-data-model/#dfn-credential\">credentials</a> on the Web <em>in a way that is</em> cryptographically secure, privacy respecting, and machine-verifiable. <a href=\"https://www.w3.org/TR/vc-data-model/\">More</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "verifiable data registry",
    "url": "https://kerisse.org",
    "anchor": "verifiable-data-registry",
    "definition": "<h1>verifiable data registry</h1><h4>Definition</h4><p>a <a href=\"verifiable-data-structure\">Verifiable Data Structure</a> that has actual content.<br>It contains either a log of signed statements or a cryptographic commitment (<a href=\"digest\">digest</a>) to those statements (via a Merkle tree or hash chained data structure).</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "verifiable data structure",
    "url": "https://kerisse.org",
    "anchor": "verifiable-data-structure",
    "definition": "<h1>verifiable data structure</h1><h4>Definition</h4><p>A verifiable data structure is a data structure that incorporates cryptographic techniques to ensure the integrity and authenticity of its contents. It allows users to verify the correctness of the data stored within the structure without relying on a trusted third party.<a href=\"#Sources-Definition-ChatGPT\">Source ChatGPT</a></p><h4>Related to KERI</h4><p>Provides proof of key state for its identifier. In KERI it is the Key Event Log (<code>KEL</code>). Key management is embedded in KELs, including recovery from key compromise.</p><hr><h6>Sources Definition ChatGPT</h6><ol><li>Boneh, D., &amp; Shacham, H. (2018). Verifiable data structures for outsourced data. Foundations and Trends® in Privacy and Security, 2(1-2), 1-116.</li><li>Bamert, T., Decker, C., Elsen, L., Wattenhofer, R., &amp; Welten, S. (2017). Have a snack, pay with bitcoins. Distributed Computing, 30(1), 69-93.</li><li>Ateniese, G., Kamara, S., &amp; Katz, J. (2014). Provable data possession at untrusted stores. ACM Transactions on Information and System Security (TISSEC), 7(2), 222-238.</li><li>Andrychowicz, M., Dziembowski, S., Malinowski, D., &amp; Mazurek, Ł. (2014). Secure multiparty computations on Bitcoin. In Proceedings of the 2014 ACM SIGSAC Conference on Computer and Communications Security (pp. 628-639).</li><li>Pomarole, M., Zhang, Y., Rosulek, M., &amp; Katz, J. (2014). Secure cloud backup and inference control. In Proceedings of the 2014 ACM SIGSAC Conference on Computer and Communications Security (pp. 812-823).</li></ol>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "verifiable identifier",
    "url": "https://kerisse.org",
    "anchor": "verifiable-identifier",
    "definition": "<h1>verifiable identifier</h1><h4>Definition</h4><p>Cryptographically verifiable authentic decentralized identifier (verfiable <a href=\"DID\">DID</a>)</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "verifiable legal entity identifier",
    "url": "https://kerisse.org",
    "anchor": "verifiable-legal-entity-identifier",
    "definition": "<h1>verifiable legal entity identifier</h1><h4>Definition</h4><p>vLEIs are digital verifiable credentials issued by (delegates) of GLEIF to prove that information about a legel entity is verifiably authentic.</p><p>| TBW  | prio1 : check definition |</p><h5>Explanation</h5><p>The v in vLEI stands for “verifiable”, but what does that mean? The term verifiable in this case comes from the term “Verifiable Credential”. A verifiable credential is just a collection of information with a mechanism that allows a computer to verify that the information has not been modified and that the information was originally stated to be correct by some third party (maybe a bank, or the driving license authority). Often (almost always really) the information will include a link to the entity the information is about.</p><h5>More information</h5><p><a href=\"https://rapidlei.com/what-is-vlei/\">Here</a> at Rapidlei.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "verification",
    "url": "https://kerisse.org",
    "anchor": "verification",
    "definition": "<h1>verification</h1><h4>Definition</h4><p>An action an <a href=\"agent\">agent</a> (of a principal) performs to determine the <a href=\"authenticity\">authenticity</a> of a claim or other digital object using a cryptographic key.<br>Source: ToIP glossary, Jan 2024.</p><p>In more technical words: the capability to (cryptographically) verify data received from peers (check structure, signatures, dates)</p><h4>See also</h4><p><a href=\"verify\">verify</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "verified integrity",
    "url": "https://kerisse.org",
    "anchor": "verified-integrity",
    "definition": "<h1>verified integrity</h1><h4>Definition</h4><p>A mechanism that can unambiguously assess whether the information is/continues to be whole, sound and unimpaired</p><h4>KERI suite related</h4><ul><li>In KERI&#39;s secure attribution focus integrity is verified by <a href=\"internal-inconsistency\">internal consistency</a> of <a href=\"key-event-receipt-log\">KE(R)L</a> and <a href=\"transaction-event-log\">TEL</a> plus <a href=\"duplicity\">duplicity</a> detection.</li><li>In ACDC the <a href=\"self-addressing-identifier\">self addressing identifier</a> (SAID) takes of verified integrity at all times by design</li><li>The streaming protocol CESR has verifiable integrity due to it&#39;s code tables and round-robin <a href=\"composability\">composability</a>.</li></ul><h4>See also</h4><p><a href=\"integrity\">integrity</a><br><a href=\"complementary-integrity-verification\">(complementary) integrity verification</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "verifier",
    "url": "https://kerisse.org",
    "anchor": "verifier",
    "definition": "<h1>verifier</h1><h4>Definition</h4><p>the entity that (cryptographically) verifies data received from peers (check structure, signatures, dates). More narrowly defined for the KERI suite: cryptographically verifies signature(s) on an event message.</p><p>Notice the subtile difference between <a href=\"validator\">validator</a> and verifier.</p><h4>KERI related</h4><p>Any entity or agent that cryptographically verifies the signature(s) and/or digests on an event message. In order to verify a signature, a verifier must first determine which set of keys are or were the controlling set for an identifier when an event was issued. In other words, a verifier must first establish control authority for an identifier. For identifiers that are declared as non-transferable at inception, this control establishment merely requires a copy of the inception event for the identifier. For identifiers that are declared transferable at inception, this control establishment requires a complete copy of the sequence of establishment events (inception and all rotations) for the identifier up to the time at which the statement was issued.<br>Source <a href=\"https://github.com/WebOfTrust/ietf-keri/blob/main/draft-ssmith-keri.md#basic-terminology\">Sam Smith</a></p><h4>ESSIF-lab definitions</h4><ul><li><em><a href=\"https://essif-lab.github.io/framework/docs/essifLab-glossary#verify\">verify</a></em> definition is in sync with the definition in the KERI/ACDC vocabulary</li><li><em><a href=\"https://essif-lab.github.io/framework/docs/essifLab-glossary#verifier\">verifier</a></em> definition is in sync with the definition in the KERI/ACDC vocabulary</li><li><em><a href=\"https://essif-lab.github.io/framework/docs/essifLab-glossary#validate\">validate</a></em> definition is very general, however in the KERI/ACDC vocabulary &#39;validate&#39; currently has diverse meanings including this one</li><li><em><a href=\"https://essif-lab.github.io/framework/docs/essifLab-glossary#validator\">validator</a></em> definition is a generalisation of the much more specific definition in the KERI/ACDC vocabulary</li></ul>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "verify",
    "url": "https://kerisse.org",
    "anchor": "verify",
    "definition": "<h1>verify</h1><h4>Definition</h4><p>The act, by or on behalf of a <a href=\"party\">party</a>, of determining whether that data is <a href=\"authenticity\">authentic</a> (i.e. originates from the party that authored it), timely (i.e. has not expired), and conforms to other specifications that apply to its structure.<br><a href=\"https://essif-lab.github.io/framework/docs/essifLab-glossary#verify\">Source eSSIF-lab</a> in eSSIF-lab glossary</p><h4>See also</h4><p><a href=\"verification\">Verification</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "verify signature",
    "url": "https://kerisse.org",
    "anchor": "verify-signature",
    "definition": "<h1>verify signature</h1><h4>Definition</h4><p>Applying an algorithm that, given the message, public key and signature, either accepts or rejects the message&#39;s claim to authenticity.</p><img src=\"https://hackmd.io/_uploads/Bk5GHfhT9.png\" alt=\"Private key signing\" width=\"300\" /><h4>Related ESSIF-lab definitions</h4><ul><li><em><a href=\"https://essif-lab.github.io/framework/docs/essifLab-glossary#verify\">verify</a></em> definition is in sync with the definition in the KERI/ACDC vocabulary</li><li><em><a href=\"https://essif-lab.github.io/framework/docs/essifLab-glossary#verifier\">verifier</a></em> definition is in sync with the definition in the KERI/ACDC vocabulary</li><li><em><a href=\"https://essif-lab.github.io/framework/docs/essifLab-glossary#validate\">validate</a></em> definition is very general, however in the KERI/ACDC vocabulary &#39;validate&#39; currently has diverse meanings including this one</li><li><em><a href=\"https://essif-lab.github.io/framework/docs/essifLab-glossary#validator\">validator</a></em> definition is a generalisation of the much more specific definition in the KERI/ACDC vocabulary</li></ul>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "version",
    "url": "https://kerisse.org",
    "anchor": "version",
    "definition": "<h1>version</h1><h4>Definiton</h4><p>In <a href=\"https://en.wikipedia.org/wiki/Software_engineering\">software engineering</a>, version control (also known as revision control, source control, or source code management) is a class of systems responsible for managing changes to <a href=\"https://en.wikipedia.org/wiki/Computer_program\">computer programs</a>, documents, large web sites, or other collections of information.<br><a href=\"https://en.wikipedia.org/wiki/Version_control\">Source</a></p><h4>KERI related</h4><p>More than one version of a KEL for an AID exists when for any two instances of a KEL at least one event is unique between the two instances.<br>Source <a href=\"https://github.com/WebOfTrust/ietf-keri/blob/main/draft-ssmith-keri.md#basic-terminology\">Sam Smith</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "version code",
    "url": "https://kerisse.org",
    "anchor": "version-code",
    "definition": "<h1>version code</h1><h4>Definition</h4><p>tells you which set of tables to load, it tells the table state. It&#39;s a unique code. what version of the table is going to load. </p><h4>Compare</h4><p><a href=\"version-string\">Version string</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "version string",
    "url": "https://kerisse.org",
    "anchor": "version-string",
    "definition": "<h1>version string</h1><h4>Definition</h4><p>The Version String in JSON, CBOR and MGPK is a workaround to make those self-framing.</p><h4>Compare</h4><p><a href=\"version-code\">Version code</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "VID",
    "url": "https://kerisse.org",
    "anchor": "VID",
    "definition": "<h1>VID</h1><h4>See</h4><p><a href=\"verifiable-identifier\">Verifiable Identifier</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "virtual credential transaction event log",
    "url": "https://kerisse.org",
    "anchor": "virtual-credential-transaction-event-log",
    "definition": "<h1>virtual credential transaction event log</h1><h4>Definition</h4><p>will track the issued or revoked state of each virtual credential (VC) and will contain a reference to its corresponding <em>management transaction event log (management TEL)</em>.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "vLEI",
    "url": "https://kerisse.org",
    "anchor": "vLEI",
    "definition": "<h1>vLEI</h1><h4>See</h4><p><a href=\"verifiable-legal-entity-identifier\">Verifiable legal entity identifier</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "vlei credential",
    "url": "https://kerisse.org",
    "anchor": "vlei-credential",
    "definition": "<h1>vlei credential</h1><h4>Definition</h4><p>Credential concerning a verifiable Legal Entity Identifier, residing in the <a href=\"GLEIS\">GLEIS</a> and compliant with one or more of the GLEIF <a href=\"governance-framework\">Governance Framework</a>s</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "vlei ecosystem governance framework",
    "url": "https://kerisse.org",
    "anchor": "vlei-ecosystem-governance-framework",
    "definition": "<h1>vlei ecosystem governance framework</h1><h4>Definition</h4><p>The Verifiable LEI (vLEI) Ecosystem <a href=\"governance-framework\">Governance Framework</a> Information Trust Policies. It&#39;s a <strong>document</strong> that defines the information security, privacy, availability, confidentiality and processing integrity policies that apply to all vLEI Ecosystem Members.<br>Paraphrased by @henkvancann from <a href=\"https://www.gleif.org/vlei/introducing-the-vlei-ecosystem-governance-framework/2022-02-07_verifiable-lei-vlei-ecosystem-governance-framework-glossary-draft-publication_v0.9-draft.pdf\">source</a> Draft vLEI Ecosystem Governance Framework Glossary.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "vlei role credential",
    "url": "https://kerisse.org",
    "anchor": "vlei-role-credential",
    "definition": "<h1>vlei role credential</h1><h4>Definition</h4><p>A <a href=\"vlei-credential\">vLEI credential</a> that attests a role.</p><p>| TBW prio 3 |</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "vrt",
    "url": "https://kerisse.org",
    "anchor": "vrt",
    "definition": "<h1>vrt</h1><h4>Definition</h4><p>vrt = vdr rotate, verifiable data registry rotation</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "wallet",
    "url": "https://kerisse.org",
    "anchor": "wallet",
    "definition": "<h1>wallet</h1><h4>Definition</h4><p>A crypto wallet is a device, physical medium, program or a service which stores the <a href=\"https://en.wikipedia.org/wiki/Public-key_cryptography\">public and/or private keys</a> for <a href=\"https://en.wikipedia.org/wiki/Cryptocurrency\">cryptocurrency</a> transactions and digital identifiers.<br>Paraphrased by @henkvancann from source <a href=\"https://en.wikipedia.org/wiki/Cryptocurrency_wallet\">Wikipedia</a></p><h4>KERI and ACDC context</h4><p>A wallet is a collection of data stores; made up of a <a href=\"keystore\">keystore</a>, local and remote key event log database and credential database. So it is a superset of a keystore.<br>Source: Philip Feairheller.</p><p>In a broader context a wallet can be seen as software and sometimes hardware that serves as a <a href=\"keystore\">keystore</a> and functionality. Keys can be private keys and public keys, and the wallet could contain hashes and pointers. Functionality can be signing, invoices (receive), send, virtual credentials, delegation, etc. This functionality is the <a href=\"agency\"><code>agency</code></a> part of a wallet.<br><a href=\"https://www.thalesgroup.com/en/markets/digital-identity-and-security/government/identity/digital-identity-services/digital-id-wallet\">More about digital ID Wallets</a><br><a href=\"https://cryptocurrencyfacts.com/what-is-a-cryptocurrency-wallet/\">More about cryto Wallets</a>.</p><h4>Functions</h4><p>In addition to this basic function of <strong>storing the keys</strong>, it&#39;s also used to storing <a href=\"verifiable-credential\">verifiable credentials (VCs)</a>. A cryptocurrency wallet more often also offers the functionality of <strong><a href=\"https://en.wikipedia.org/wiki/Encrypting\">encrypting</a></strong> and/or <strong><a href=\"https://en.wikipedia.org/wiki/Digital_signature\">signing</a></strong> information.\\<br>Signing can for example result in executing a <a href=\"https://en.wikipedia.org/wiki/Smart_contract\">smart contract</a>, a cryptocurrency transaction, <a href=\"https://en.wikipedia.org/wiki/Digital_signature#Authentication\">identification</a> or <a href=\"https://en.wikipedia.org/wiki/Electronic_signature\">legally signing</a> a &#39;document&#39;.<br>More on source <a href=\"https://en.wikipedia.org/wiki/Cryptocurrency_wallet\">Wikipedia</a></p><h4>KERI and ACDC related</h4><p>A &#39;wallet&#39; in KERI would typically refer to the basic function of <strong>storing the keys</strong>, a wallet in ACDC is more focussed on storing <a href=\"verifiable-credential\">verifiable credentials (VCs)</a>.\\<br>KERI explicitly distinguishes <a href=\"keystore\">keystore</a> and <a href=\"wallet\">wallet</a>; the latter being a superset of the former. <a href=\"keep\">Keep</a> is KERI&#39;s and ACDC&#39;s user interface with Keripy agent API as a back end.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "watcher",
    "url": "https://kerisse.org",
    "anchor": "watcher",
    "definition": "<h1>watcher</h1><h4>Definition</h4><p>KERI alternative to total global ordering and consensus protocols is a mechanism called <a href=\"duplicity\">duplicity</a> detection. In the <a href=\"verifier\">verification</a> and <a href=\"validate\">validation</a> <strong>watchers are all that matter</strong>; they guarantee that logs are immutable by one very simple rule: &quot;<a href=\"first-seen\">first seen</a> wins&quot;.</p><h4>KERI operational</h4><p>This would be a set of watchers (that the validators trust) that record any and all copies of key event logs (KEL) that they see. Because these watchers can be anyone and anywhere, any controller of a public identifier is at peril should they choose to publish inconsistent copies of their KEL. This removes the incentive to be duplicitous.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "web of trust",
    "url": "https://kerisse.org",
    "anchor": "web-of-trust",
    "definition": "<h1>web of trust</h1><h4>Definition</h4><p>In cryptography, a web of trust is a concept used in <a href=\"PGP\">PGP</a>, <a href=\"gnu-privacy-guard\">GnuPG</a>, and other <code>OpenPGP</code>-compatible systems to establish the authenticity of the binding between a public key and its owner.<br>Its <em>decentralized</em> trust model is an alternative to the centralized trust model of a public key infrastructure (<code>PKI</code>), which relies exclusively on a certificate authority (or a hierarchy of such). As with computer networks, there are many independent webs of trust, and any user (through their identity certificate) can be a part of, and a link between, multiple webs. The web of trust concept was first put forth by PGP creator Phil Zimmermann in 1992 in the manual for PGP.</p><img src=\"https://github.com/WebOfTrust/keri/raw/main/images/web-of-trust.png\" alt=\"Web of trust illustration\" border=\"0\" width=\"500\" /><p>More on <a href=\"https://en.wikipedia.org/wiki/Web_of_trust\">Wikipedia</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "weight of weights",
    "url": "https://kerisse.org",
    "anchor": "weight-of-weights",
    "definition": "<h1>weight of weights</h1><h4>Definition</h4><p>There are 2 levels in the multi-sign weighted thresholds of <a href=\"multisig\">multi-signatures</a> in <a href=\"KERI\">KERI</a> because the solution only needs to focus on <em>tightly cooperating teams</em>.</p><ul><li>An individual using split keys over devices</li><li>A team of teams</li></ul><p>All other use cases can be solved by other means in KERI (e.g. <a href=\"delegation\">delegation</a>).</p><h4>CESR related</h4><p>It also gives the advantage that the resulting <a href=\"CESR\">CESR</a> is more straightforward. It&#39;s hard to implement a recursive weight - of weights in CESR. And because of the alleged lack of use cases, KERI don&#39;t need to go beyond two levels.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "well known witnesses",
    "url": "https://kerisse.org",
    "anchor": "well-known-witnesses",
    "definition": "<h1>well known witnesses</h1><h4>Definition</h4><p>Witness identifier creation by using <em>salts</em> to initialize their key stores so that you can predict what identifiers will be created. For testing purposes only!</p><h5>Security</h5><p>Don&#39;t use the creation of well-known witnesses in a production environment, but for running tests it&#39;s suitable.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "witness",
    "url": "https://kerisse.org",
    "anchor": "witness",
    "definition": "<h1>witness</h1><h4>Definition</h4><p>In KERI and ACDC context, a witness is an entity or component designated (trusted) by the controller of an identifier. The primary role of a witness is to verify, sign, and keep events associated with an identifier. A witness is the controller of its own self-referential identifier which may or may not be the same as the identifier to which it is a witness.  </p><p>An identifier witness therefore is part of its <a href=\"trust-domain\">trust basis</a> and may be controlled (but not necessarily so) by its <a href=\"controller\">controller</a>. The purpose of a pool of witnesses is to protect the controller from external exploit of its identifier.<br>The term <em><a href=\"backer\">Backer</a></em> and <em>Witness</em> are closely related in KERI but not synonyms or interchangeable.</p><h4>KERI witness confusing</h4><p>Be sure to understand the narrow KERI definition of Witness well. You could easily be confused, for there are dozens of papers that use the term Witness in a similar way to KERI; for example <a href=\"https://ieeexplore.ieee.org/document/8644609\">https://ieeexplore.ieee.org/document/8644609</a> or &#39;segregated witness&#39; in bitcoin, but it&#39;s far from the same concept.<br>More in the <a href=\"https://github.com/SmithSamuelM/Papers/blob/master/whitepapers/KERI_WP_2.x.web.pdf\">whitepaper</a></p><h4>Operational description in KERI</h4><p>Entity that may receive, verify, and store key events for an identifier. Each witness controls its own identifier used to sign key event messages, a controller is a special case of a witness.<br>Source <a href=\"https://github.com/WebOfTrust/ietf-keri/blob/main/draft-ssmith-keri.md#basic-terminology\">Sam Smith</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "XBRL",
    "url": "https://kerisse.org",
    "anchor": "XBRL",
    "definition": "<h1>XBRL</h1><h4>See</h4><p><a href=\"extensible-business-reporting-language\">eXtensible Business Reporting Language</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "xip",
    "url": "https://kerisse.org",
    "anchor": "xip",
    "definition": "<h1>xip</h1><h4>Definition</h4><p>A XIP message allows a transaction set to be a mini peer to peer exchange to become a verifiable data structure. It makes the transaction become duplicity evident.</p><p>Source <a href=\"https://wiki.trustoverip.org/pages/viewpage.action?pageId=80876836\">KERI meeting 2024-03-12</a></p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "zero trust",
    "url": "https://kerisse.org",
    "anchor": "zero-trust",
    "definition": "<h1>zero trust</h1><h4>Definition</h4><p>a Zero Trust approach trusts no one.</p><h4>KERI related concepts</h4><p>Zero Trust is a shift of network defenses toward a more comprehensive IT security model that allows organizations to restrict access controls to networks, applications, and environment without sacrificing performance and user experience. As more organizations do more computing outside their perimeter in the cloud, security teams find it increasingly difficult to trust or identify who and what should be allowed or trusted with access to their networks. As a result, an increasing number of organizations are adopting Zero Trust as an element or a component of their trust network architecture and enterprise security strategy.</p><p>Zero Trust is a security concept that requires all users, even those inside the organization’s enterprise network, to be authenticated, authorized, and continuously validating security configuration and posture, before being granted or keeping access to applications and data. This approach leverages advanced technologies such as multi-factor authentication, identity and access management (IAM), and next-generation endpoint security technology to verify the user’s identity and maintain system security.</p>"
  },
  {
    "organisation": "WebOfTrust",
    "term": "zero trust computing",
    "url": "https://kerisse.org",
    "anchor": "zero-trust-computing",
    "definition": "<h1>zero trust computing</h1><h4>Definition</h4><p>Best practices for implementation of an autonomic identifier system should follow zero trust computing principles. These principles are described at more length elsewhere but may be summarized as follows:</p><ol><li>Network Hostility. The network is always hostile, internally &amp; externally; Locality is not trustworthy. Solutions must provide means to mitigate network layer security vulnerabilities (man-in-the-middle, DNS hijacking, BGP attacks).  </li><li>E2E Security.  Inter-host communication must be end-to-end signed/encrypted and data must be stored signed/encrypted. Data is signed/encrypted in motion and at rest.  </li><li>E2E Provenance.  Data flow transformations must be end-to-end provenanced using verifiable data items (verifiable data chains or VCs). Every change shall be provenanced.  </li><li>Verify every-time for every-thing.  Every network interaction or data flow must be authenticated and authorized using best practice cryptography.  </li><li>Authorization is behavioral.  Policies for authentication and authorization must be dynamically modified based on behavior (reputation).  </li><li>No single point of trust.  Policies for authentication and authorization must be governed by end-verified diffuse-trust distributed consensus. Policy is protected by diffuse trust.  </li><li>Hosts locked down.  Hosts or host components executing any of the logic mentioned above must be locked down. Any changes to the host execution logic or behavior must be fully security tested and validated over the respective possible combinations of hardware and software platform. This means locking down key management and cryptographic operations on the devices. This includes key generation and storage, as well as signature generation and signature verification. These may benefit from the use of some form of trusted execution environment (TEE) either generally or specially as in a trusted platform module (TPM) or a hardware security module (HSM). In addition to key management and cryptographic operations, special security measures must be implemented regarding secure execution of the application logic (e.g. code injection, insecure object references, cross-site/service request forgery, cross-service scripting, etc.).</li></ol><p>Source: Universal Identity Theory by Samuel Smith</p><h4>Also see</h4><p><a href=\"zero-trust\">zero trust</a></p>"
  }
]